//wersja v4 - 
// 2024-04-02 drobne poprawki w Help 
// 2024-03-17 dołożono obiekt podwójnie całkujący Kv/(s-p)s

// zlikwidowano korektę h po zmianie T (była błędna)
// wprowadzono submenu Obiekt\Inicjacja podstawowych parametrów Kv, T  
// menu Symulacje\zakres charakterystyk częstotliwościowych wMin, wMax


// wersja v2h5 2023-12
// zmiana sposobu detekcji stabilności w makeMargins 
// obniżenie współczynników poprawkowych do korekty Ti 
// dla PI Ti=4T/(1-2.5pT), dlaPID Ti=3T/(1-1.5pT) 
//  2020-05
// ujednolicić format wypisów w oknie komend - może spf?
// tryb różnicowy w Bode - dość problematyczny - poprawić co najmniej wypis; 
//         można też inaczej wyświetlać dane na pasku tytułu gdy KA i gdy ~KA
// można pomyślec o dalszych opcjach specjalnych kursora dla czętotliwościowcyh
//  - e: ekstremum char. amplitudowej, 5? - 3dB strefa 
// tic-toc Oblicz czasowe 180ms/2000kroków

title "reg_PID_v4"
version
{@
"reg_PID_v4.sq"

  ==== Aplikacja dydaktyczna do nauki właściwości układów regulacji 
 
 wersja v4, 2-04-2024  
 ©Jan Deskur
@}
help
{@
=== Schemat blokowy 

Struktura połączeń na schemacie jest niezmienna. Obiekt regulacji składa sie z trzech bloków liniowych o  konfigurowalnych transmitancjach oraz wielowariantowego regulatora. Pracę należy rozpocząć od wyboru głównych parametrów obiektu Kv, T  z menu: Obiekt\Inicjacja podstawowych parametrów. 

 Na schemacie jest wiele elementów interaktywnych, pozwalających ustawiać parametry bloków i sygnałów wejściowych oraz dokonywać wyboru sygnałów do wyświetlenia. Rodzaj interakcji objaśniany jest w pasku stanu u dołu ekranu. Pojedyncze kliknięcia (klik) wywołują przełączenia między dwoma stanami elementu. Kliknięcie z wciśniętym klawiszem  Shift (Shift+klik) zazwyczaj otwiera okno dialogowe do wprowadzenia parametru z klawiatury, lub/oraz wypisuje wybrane parametry w oknie komend.  Zmiany parametrów lub wariantów transmitancji można też wywołać rolką myszy lub klawiszami nawiasów kwadratowych ( ]|[ ). 
 
Górny pasek tytułowo-objaśniający  można przełączyć w tryb wyświetlania marginesów stabilności oraz parametrów  sygnałów wejściowych, obiektu i regulatora.



=== Wykresy czasowe i charakterystyki częstotliwościowe

Aktywizacji sygnałów wejściowych (w,z,n) oraz wyboru sygnałów do wyświetlenia dokonuje się na schemacie blokowym. W charakterystykach częstotliwościowych jako sygnał wejściowy (mianownik transmitancji widmowej) przyjmowany jest ten z sygnałów , który był ostatnio aktywowany na schemacie. Wyświetlić można co najwyżej jeden sygnał z grupy niebieskiej i jeden z czerwonej, nie licząc zapamiętanych śladów po poprzednich wykresach.  Skale dla sygnałów czerwonych wyświetlane są po prawej stronie. Wyróżniony grubszą linią jest ten sygnał, który był ostatnio wybrany. Można to zmieniać (bez klikania w schemat) klawiszami [s],[u],[y] . 

Typowych operacji graficznych na wykresach (powiększanie, przesuwanie) dokonuje się wybierając odpowiednie narzędzie z paska narzędziowego lub z menu Figure. Po zakończeniu tych operacji należy przywrócić tryb podstawowy  (Manipulate, Ctrl+1). Aby przywrócić autoskalowanie trzeba odznaczyć opcje Locked Scale z menu kontekstowego (prawy przycisk). Menu kontekstowe pozwala wybrać różne sposoby skalowania osi charakterystyk częstotliwościowych.  Na wykresach czasowych można dodatkowo zmieniać skale korzystając z elementów aktywnych w narożnikach ramki.

Jeżeli na wykresach czasowych są widoczne sygnały wejściowe W i/lub Z - to można zmieniać ich parametry czasowe przeciągając poziomo  wyróżnione elementy aktywne.

Z menu Okna, Opcje_wykresów można wybrać różne warianty prezentacji wyników. 


===Kursory o--x

Klawisz spacji uwidacznia/ukrywa kursor w kształcie znaku X. Po odblokowaniu ([k], klik w X) - kursor podąża za ruchem myszy, aż do zablokowania (ponownie: klik, lub [k]) . Zablokowany kursor można nieznacznie przesunąć rolką lub klawiszami kierunkowymi ( ↑||↓ ). Informacje o położeniu kursora i wartości sygnału lub charakterystyki wyświetlane są zamiast tytułu na górnej ramce wykresu. 

Dla wykresów czasowych dostępny jest tryb różnicowy ([r]), w którym podawane są informacje o różnicach między kursorami X i O. Kursor O jest nieruchomy i w zwykłym trybie znajduje sie na początku wykresu (to=0). Klawiszem [o] można go przestawić na aktualną pozycję kursora X ; ponownie [o] lub spacja przywracają zwykły tryb to=0.  W innych zaawansowanych trybach pracy kursor X jest  () niewidoczny lub ustawiany automatycznie w szczególnym położeniu: [t]:wyświetlane są wskaźniki całkowe, [e]:ekstremum przebiegu, [5]:czas ustalania z 5% tolerancją




===Klawisze funkcyjne

[Ctrl+r]         :  przywracanie pierwotnych danych i ustawień \\
[Ctrl+z]         :  wycofanie ostatniej zmiany (Undo)\\
[Ctrl+Z]         :  przywrócenie wycofanej zmiany (Redo)\\    
[Ctrl+1]         :  przywracanie podstawowego trybu pracy kursora ekranowego (Manipulate)\\
[Ctrl+2,3,4]     :  inne tryby pracy kursora ekranowego\\ 
[1,2,3,4,6,c]    :  ustawienia okien wykresów \\
[  ] (spacja)    :  pokazanie/ukrycie kursorów o--x\\
[k]              :  blokowanie/odblokowanie pozycji kursora ···x/--x\\ 
[o]              :  przestawianie kursora o : (to=0)/(to=tx) \\    
[r,t,e,5]        :  specjalne tryby pracy kursorów o--x\\ 
[s,u,y]          :  sposób wyświetlania sygnałów niebieskich i czerwonych\\
[<, >. B,I]      :  rozmiar i wygląd czcionki\\ 
[a, f, g, m, l,↑,↓]  :  inne opcje wykresów \\ 
[d]              :  regulacja ciągła/dyskretna(cyfrowa)  \\
  


Saved as SQ file (default values are new).
@}

variables 
 //variable _implicit
 variable   kyB = 1     // wsp. wzmocnienia skali B i skali R  
 variable   kyR = 1     // dod. wsp. wzmocnienia dla skali R 
 variable   yR0 = 0.0     // przesunięcie skali pgR
 variable   yB0 = 0.0     // przesunięcie skali pgB
 variable   winbg = [1,1,1]*0.95   // 0: czarne tło  ..   1: białe
 variable   WBG = false     // true ==== białe tło  
 variable   fontSize  = 14   //dla Wykresów   i schematu      (key: up,down  )
 variable   B   = false     // Bold=true/false dla schematów  (key:b   )
 variable   I   = false     // Italic=true/false dla schematów (key: i ) 
 variable	id	= -1        // biezacy identyfikator
 variable	tol	= 5	        // tolerancja dla czasów ustalania się (%)
 variable	tolF= 0         // tolerancje dla charakterystyk amplitudowych wymuszeniowych i zakłóceniowych (do usunięcia)
 variable	ixF = 0		// indeks punktu wykresów częstotliwościowych na który wskazuje kursor
 variable	nic	= 0	    // dla zatrudnienia pustych procedur
 ////zmienne "znacznikowe" - liczby naturalne 
 variable   m    = 0    // stan modyfikatora (Shift) ustawiany przez overSchem
 variable	typP = 1	// 1: K/s 2:K/(s-p) 3:K/(s-p)s  tf()-to ew. w przyszłości
 variable   AltP = 0    // 1: a1.a0 zamiast K,p
 variable	typO = 2	// 1:1, 2:exp(-sT), 3:Pade2 4:1/(1+sT/n)^n 5:tf(L,M)
 variable	typN = 0	// typ nastaw regulatora:   0: swobodny, 1:ZN, 2:CHR 3:sym 4:swobodny, 5:mod , 6:CHR20%, 7:ZNs
 variable	typH = 2	// 1:0, 2:1	 
 variable	typSch = 1	// 1: ogólny, 2: reg.w, 3:reg.v, 4:reg.i, 5:reg.h, 6:reg.th, 7:reg.alfa, 8:reg.x
 variable	typReg = 1	// 0: 2s, 1:P, 2:PI, 3:IP, 4:PI+ ,5:PID+ , (6:rst)
 variable   ORA  = 0    // 1: Ogranicznik Regulatora Aktywny
 variable   PWS	 = 1    // Parametry Widoczne na Schemacie 0:nic 1:1kursor 2:2kursory
 variable	PWW	 = 0    // Parametry Widoczne na Wykresach (t) 0:nic 1:1kursor 2:2kursory -1: IA,ITA,..   -2:ex _    -3:ovs,tu

 
 variable   KA   = 0;  // kursor x aktywny/nieaktywny
 variable   KW   = 0;  // kursor x widoczny/ukryty
 
 variable	AltN = 0    // 0:nastawy std (Kp,Ti,..), 1: nastawy alternatywne (Kp,Ki,..)
 variable	Awup = 0    // anti-windup 
 variable	fHz	 = 1    // czestotliwosc w Hz zamiast rad/s
 variable	typB = 1    // rodzaj char. Bodego 1:|/W|,2:|/Z|, 3:arg(/W),4:arg(/Z)
 variable	SD	= 0	    // System Dyskretny:  0:system ciagly 1: SystemDyskretny
 variable	MD  = 1     // Metoda Dyskretyzacji 1:tustin (inne kasuję)
 variable	pgB	= 2	    // przebieg niebieski: pgB = 1:y  2:y"	3: e=w-y	  4:y'
 variable	pgR	= 1	    // przebieg czerwony : pgR = 1:u/Kp	  2:u'/Kp	3:u" = (u'-z)/Kp
 variable	H2O = 0		// znacznik przestawienia bloków H i O
 variable	ZoS	= 0	    // Zostaw Slad na wykresach
 
// NL, NU, NY, PWW, ZoS,fHz, wp, wk, KW,KA, typB,nB

 variable	NTol= 1 // No Tolerance Band
 variable	NM	= 0 // No Margin - 
 variable	NL  = 0 // No Legend
 variable	NG	= 1	// No Grid
 variable	NU  = 1	// No U-traces
 variable	NY	= 0	// No Y-traces
 variable	NW  = 1 // No w-traces
 variable	NZ	= 1	// No z-trace 
 variable	AW	= 0	// active w(t)
 variable	AZ	= 1	// active z(t)
 variable	AN	= 0	// active n(t)
 variable	UN	= 0	// Uniformely distributed Noise (~UN == normally distributed)
 variable	LN	= 0	// Live Noise (nieustanna zmiana seed) 
 variable	seed= 0.5	// dla rand, randn
 variable	zrzut=false	// true: zrzut wskaźników do okna komend
 //// parametry obiektu, jednostki bazowe
 variable	K   =  1    // param. procesu (bloki P,O) w JEDNOSTKACH FIZYCZNYCH
 variable   T   =  1    // param. procesu (bloki P,O) w JEDNOSTKACH FIZYCZNYCH
 variable	yB	=  1        // jednostka bazowa dla zmiennych y (yB=1 - na razie, potem yB=W?)
 variable	wB	=  1        // jedn. bazowa dla pulsacji , wB=1/T
 variable	uB	=  40	    // jedn. bazowa dla u,z,u-z uB=yB/K/T
 variable	kB	=  40 	    // jedn. bazowa dla Kp regulatora kB=yB/uB=1/K/T 
 //// parametry obiektu w JEDNOSTKACH BAZOWYCH (JB)
 variable	p	=  -1   // biegun procesu w JB 
 variable   b1  =  0        //wpółczynniki  O(s) JB=T
 variable   b2  =  0        // JB=T^2
 variable   a1  =  1        // wsp. mianownika JB=T
 variable   a2  =  0.25       //  JB=T^2  
 variable	LO  =  [1]      // licznik transmitancji O(s) w JB
 variable   MO  = [0.4 1 1 ]// mianownik transmitancji O(s) w JB
 variable   nO  = 5 		// nO=rząd inercji
 variable	d	= 0			// czyste opóźnienie (JB)
 variable	Ts	 			// okres próbkowania(JB) dla SD==1
 //variable	h	// w (JB) - aby zapobiec zbyt długim obliczeniom
 
 //// parametry wymuszeń (w JB)
 variable   Nh  = 10000     // maksymalna liczba kroków
 variable	h   = 0.05		// krok obliczeń
 variable	tW,W,tZ0,tZ,Z	// wymuszenia czasowe (JB)
 variable	nSigma = 0.02	//	odchylenie std (dla obu rozkladow: normalnego i rownomiernego) 
 variable	tMax=   40;		// czas końcowy (JB)
 
 variable   wMin =  0.001;   // minimalna częstotliwośc (JB)
 variable   wMax =  100;	 // maksymalna częstotliwość (JB) 
 
//// kursory o--x 
 variable	tp  =   0
 variable   tk  =   1		// pozycje kursorów (JB)
 variable	wp  =   0
 variable   wk  =   1	    // pozycja kursorów częstotliwościowych
 ////nastawy regulatora w JB
 variable   Kp =	1       // Kp regulatora
 variable   Ti =	10.0	// Ti regulatora
 variable   b	=	0.25 	// wsp. wagi wejścia wartości zadanej w torze P
 variable   c	=	0.0 	// wsp wagi w torze D 
 variable   Td =	0.5 	// czas wyprzedzenia regulatora
 variable   Nd =	8.0 	// wsp. filtru: Tfd=Td/Nd
 variable	uMax =  2.5		// górne ograniczenie u (JB)
 variable	uMin = -2.5	    // dolne ograniczenie u (JB)
 
 variable	Ps,Os,Cs,Fs,Hs	// transmitancje operatorowe bloków
 variable	sOL				// system otwarty (za reg, v->u) (ss, dyskretny)
 variable	M1, M2, M3		// pamięci nastaw regulatora
 variable	SkU	= 0			// skala U (zamiast Y) na wykresach
 variable	t, u, y			// wyniki symulacji czasowej (JB)
 variable   w,Ujw,Yjw       // charakterystyki częstotliwosciowe  
 variable   GM, PM, DM, Ms  // marginesy
 variable   w1, ws, wpi 
 variable   wL,      Ljw     // char. otwartej pętli
 userinterface
extension "define"
////define - identyfikatory obiektów interakcyjnych

////sygnały na schemacie i wykresach czasowych
 define idtMax = _auto
 define idKA = _auto
 
 define idW	 = _auto // drag (tW,W)
 define idZ	 = _auto // drag (tZ,Z)
 define idZ0 = _auto // drag (tZ0)
 define idwa = _auto // w aktywny/nieaktywny
 define idza = _auto // z aktywny/nieaktywny
 define idna = _auto // noise aktywny/nieaktywny
 define idns = _auto // zmiana seed
 define idw	 = _auto // w widoczny/ukryty 
 define idz	 = _auto // z widoczny/ukryty 
 define idy	 = _auto  // j.w. 
 define idyp = _auto 
 define idyb = _auto
 define ide	 = _auto 
 define idu	 = _auto 
 define idup = _auto  
 define idub = _auto

 //// bloki transmitancyjne
 define idO	 = _auto
 define idP	 = _auto
 define idH	 = _auto
 //// parametry bloków
 define idCb  = _auto
 define idCKp = _auto
 define idCTi = _auto
 define idCKi = _auto
 define idCTd = _auto
 define idCKd = _auto
 define idCNd = _auto
 define idCTf = _auto
 define idCc  = _auto
 define idOT  = _auto
 define idOLM = _auto	
 define idOL  = _auto
 define idOM  = _auto
 define idOn  = _auto
 define idOa2 = _auto
 define idOa1 = _auto
 define idOb2 = _auto
 define idOb1 = _auto
 define idPK  = _auto
 define idPp  = _auto
 define idR	  = _auto	 // typ regulatora (na schemacie)
 define idNwg = _auto    // nastawy wg
 define idRLim= _auto    // ogranicznik wyjścia regulatora
 define idRaw = _auto    // anti-windup 
 define idCeH  = _auto   // uchyb histerezowy reg.2s
 ////struktura schematu i nastawy
 define idH2O = _auto
 define idTs  = _auto
 define idSD  = _auto	// 0: ciągły, 1: dyskretny
 define idMD  = _auto	 // 1: tustin, 2: zoh (3:foh)
 define idSch  = _auto	// pasek tytułowy schematu(np.marginesy GM, DM, PM)
////wskaźniki

 define idTolT = _auto	//tolerancja czasu ustalania się
 define idTolF = _auto	// linia pozioma na wykresach Bodego 
//// częstotliwościowe
 define idYW  = _auto	// linie Y na wykresach częst.
 define idUW  = _auto // linie U na wykresach częst.
 define idYT  = _auto
 define idUT  = _auto 
 define idTime	= _auto;
 define idFreq	= _auto;
 
 define idBlueMark = _auto;
 define idRedMark  = _auto;
 
userinterface
extension "keydown"

 keydown "[" (AltP,a1,a2,b1,b2,h,Ts,uMax,uMin,nic,typO,typReg,ORA,typP,typH,typSch,nO,W,AW,NW,Z,AZ,NZ,nSigma,AN,Kp,Ti,b,Td,Nd,c,K,T,p,H2O,AltN,typN,PWS,SD,tMax,tZ0,tZ,tW) =scrollSchem( ...
 _v,h,Ts,uMax,uMin,id,1,typO,typReg,ORA,typP,typH,typSch,nO,W,AW,NW,Z,AZ,NZ,nSigma,AN,Kp,Ti,b,Td,Nd,c,K,T,p,H2O,AltN,typN,PWS,SD,tMax,tZ0,tZ,tW,M1,0) 
 keydown "]" (AltP,a1,a2,b1,b2,h,Ts,uMax,uMin,nic,typO,typReg,ORA,typP,typH,typSch,nO,W,AW,NW,Z,AZ,NZ,nSigma,AN,Kp,Ti,b,Td,Nd,c,K,T,p,H2O,AltN,typN,PWS,SD,tMax,tZ0,tZ,tW) =scrollSchem( ...
 _v,h,Ts,uMax,uMin,id,-1,typO,typReg,ORA,typP,typH,typSch,nO,W,AW,NW,Z,AZ,NZ,nSigma,AN,Kp,Ti,b,Td,Nd,c,K,T,p,H2O,AltN,typN,PWS,SD,tMax,tZ0,tZ,tW,M1,0) 
 
 keydown "k"  KA  = PWW>0?not(KA):0 ;  
 keydown "I" (fontSize,B,I)  = setfigstyle(fontSize, B     ,not(I))
 keydown "B" (fontSize,B)    = setfigstyle(fontSize, not(B), I    )  
 
 keydown "a" ZoS = not(ZoS)
 keydown "f" fHz = not(fHz)
 keydown "l" NL	 = not(NL) 
 keydown "u" (NU,SkU) = deal(~NU , NU  )
 keydown "y" (NY,SkU) = deal(~NY , ~NY )
 keydown "w" NW	 = not(NW)
 keydown "W" AW	 = not(AW)
 keydown "z" NZ	 = not(NZ)
 keydown "Z" AZ	 = not(AZ)
 keydown "n" LN	 = negacjaLN(LN,AN)
 keydown "N" AN	 = not(AN)
 keydown "d" (SD,typN,Ts) = deal(not(SD),0, max(Ts,h) ) 
 keydown "h" H2O = not(H2O)
 keydown "s" (SkU,NY,NU) = deal(not(SkU),NY,NU)
 
 keydown "0"  (t,u,y,w,Ujw,Yjw,wL,Ljw) = empty_tuy
 
 keydown " " (PWS,KA,KW,PWW,tp,wp) = deal(PWW== 0? 1:0, 0, PWW== 0? 1:0 , PWW== 0?1:0  , PWW== 1?0:0  , PWW==1? 0 : 0)
 keydown "r" (KW,PWW,tp) = deal(PWW== 2?1:1 , PWW== 2?1:2  , PWW== 2?tp:tp )
 keydown "e" (KW,PWW,tp,wp) = deal(PWW==-2?1:1 , PWW==-2?1:-2 , PWW==-2?tp:tp , PWW==-2?0:wp ) 
 keydown "t" (KW,PWW,tp) = deal(PWW==-1?0:1 , PWW==-1?0:-1 , PWW==-2?0:tp )
 keydown "5" (KW,PWW,tp,NTol,tol) = deal(PWW==-3?1:1 , PWW==-3?1:-3 , PWW==-3?tp:tp , PWW==-3?0:1 , 5)
 keydown "o" (tp,wp,PWW) = deal(tp? 0 : tk , tp? 0 : wk , tp? 1 : 2) 
 keydown "m" ustawMargin 
 keydown "g" ustawGrid
 keydown "1" subplots('Schemat blokowy')
 keydown "2" layout(2)
 keydown "3" layout(3)
 keydown "4" layout(4)

 keydown "6" layout(6)
 keydown ")"  tol = 10 
 keydown "("  tol = 9 
 keydown "&"  tol = 7 
 keydown "*"  tol = 8
 keydown "^"  tol = 6 
 keydown "%"  tol = 5
 keydown "$"  tol = 4
 keydown "#"  tol = 3
 keydown "@"  tol = 2
 keydown "!"  tol = 1
 keydown "c" layout(1)
 keydown "C"  clc
 keydown "L" disp('-')
 keydown "E" (t,u,y)= make_tuy(sOL,uMax,uMin,d,typReg,typO,AW,tW,W,AZ,tZ0,tZ,Z,AN,UN,nSigma,seed,tMax,pgB,pgR,h,Awup,SD)
 keydown  (fontSize,nic, KW, KA, kyB, kyR,yB0, yR0, tp, tk, PWW, NTol,tol,wk) = paramUp(_v,_key,0,_m,_id)
 keydown "i" (fontSize,WBG) = deal(setfigstyle(fontSize,B,I, [1,1,1]*not(WBG) + winbg*WBG ),not(WBG))
 //keydown "?" myOutputHandler(K,T,p)
 //keydown "/" (K,T,p) = myInputHandler()
 
userinterface
extension "init" 
 init                       (NM,NG)     =   init(_v)
 init (wMin,wMax,h,Ts,tMax,AW,W,tW,AZ,Z,tZ0,tZ,pgB,pgR,NU,NY,NW,NZ,AN,UN,nSigma,LN,seed) = paramSym
 init 				(wB,yB,uB,kB)       =   makeBazowe  ( K , T ) 
 init                       (M1,M2,M3)  =	initMem
 init                       (t,u,y)	    =   make_tuy(sOL,uMax,uMin,d,typReg,ORA,typO,AW,tW,W,AZ,tZ0,tZ,Z,AN,UN,nSigma,seed,tMax,pgB,pgR,h,Awup,SD)
 init                   (w,Ujw,Yjw)     =   make_wUY(wMin,wMax,sOL,Fs,Cs,Os,Ps,Hs,d,T,K,H2O ,SD, pgB, pgR, typB)  
 init (GM,PM,DM,Ms,wpi,ws,w1,wL,Ljw)    =   makeMargins(Cs,Os,Ps,Hs,d,h,Ts,T,typH,typO,SD)
userinterface
 idle       (seed)      =   liveNoise(LN,seed)
extension "make"
 make               (wB,yB,uB,kB)       =   makeBazowe  ( K , T ) 
 make       (sOL,Fs,Cs,Os,Ps,Hs,d)      =   makeSys(b2,b1,a2,a1,h,Ts,SD,MD,p,Kp,Ti,b,c,Td,Nd,uMax,typReg,typO,typP,typH,H2O,LO,MO,nO,Awup,T) //tymczasowo h zamiast h
 make                       (t,u,y)	    =   make_tuy(sOL,uMax,uMin,d,typReg,ORA,typO,AW,tW,W,AZ,tZ0,tZ,Z,AN,UN,nSigma,seed,tMax,pgB,pgR,h,Awup,SD)
 make                      (w,Ujw,Yjw)  =   make_wUY(wMin,wMax,sOL,Fs,Cs,Os,Ps,Hs,d,T,K,H2O ,SD, pgB, pgR, typB) 
 make   (GM,PM,DM,Ms,wpi,ws,w1,wL,Ljw)  =   makeMargins(Cs,Os,Ps,Hs,d,h,Ts,T,typH,typO,SD)
userinterface

extension "import export idle"
 export "  Parametry" (_xdata,_xdatatype) = eksportParam(h,Ts,SD,MD,K,T,p,Kp,Ti,b,Td,Nd,c,typReg,typO,typP,typH,H2O,nO)
 import "  Parametry" (h,Ts,SD,MD,K,T,p,Kp,Ti,b,Td,Nd,c,typReg,typO,typP,typH,H2O,nO) = importParam(_xdata,_xdatatype)
userinterface
beginmenu "Obiekt" 
    //beginsubmenu "Inicjacja podstawowych parametrów" 
		menu "Inicjacja podstawowych parametrów"
				(AltP,K,T,typN) = deal( 0 , dialogX(K,1,str='Wzmocnienie prędkościowe obiektu K ᵥ = %6s' ) ,...
													dialogX(T,1,0,3e6,str='Sumaryczne opóźnienie w pętli regulacji [sek]  T = %4s'),0)
//				(T,typN ) = dialogX(T,1,0,3e6,'Opóźnienie T[sek]')
//        menu "Sumaryczne opóźnienie w pętli regulacji  	T"	
//				(T,typN ) = dialogX(T,1,0,3e6,'Opóźnienie T[sek]')		
//	endsubmenu	
separator	
	beginsubmenu "proces   P(s) ≡ Y''(s) / U''(s)"
        menu "całkujący   P(s) = K ᵥ / s 	K ᵥ" _checkmark(~AltP & (typP==1)) ...
                (typP,AltP,K,typN) = deal(1 , 0 , dialogX(K,1,str='Wzmocnienie całkowe K ᵥ = %6s' ) , 0)
		menu "inercyjny   P(s) = K ᵥ / (s-p)   	p" _checkmark(~AltP & (typP==2)) ...
                (typP,AltP,p,typN) = deal( 2 , 0 , dialogX(p,wB,str='biegun %6srad/s') , 0 )
		menu "2 rzędu  P(s) = Kᵥ  / (s - p)∙s"   _checkmark( (typP==3) & (~AltP) ) ...
				(typP,AltP,typN) = deal(3, 0, 0); 				
separator
		menu "całkujący P(s) = 1 / (a₁s)	a₁ = 1 / K ᵥ" _checkmark( AltP & (typP==1))	...
               (typP,AltP,K,typN) = deal( 1 , 1 , 1/dialogX(1/K , 1 , 1/4/K , 4/K,str='współczynnik a₁ = %6s') , 0 )	
        menu "inercyjny P(s) = 1 / (a₁s + a₀)	a₀ = -p/ K ᵥ"	_checkmark(AltP & (typP==2)) ...
               (typP,AltP,p,typN) = deal(2,1, dialogX(-p/K , 1/T,str='współczynnik a₀ = %6s')*(-K) , 0 )
		menu "2 rzędu P(s) = 1  / (a₁s + a₀)∙s"   _checkmark( (typP==3) & (AltP) ) ...
				(typP,AltP,typN) = deal(3, 1, 0); 
	endsubmenu

	beginsubmenu "blok wykonawczy O(s) ≡ U'(s) / U(s)"
		menu "idealny: O(s) = 1"								   _checkmark(typO==1) typO=1
separator
        menu "opóźniający:  O(sT) = " nic=0
		menu "      exp(-sT)"						   _checkmark(typO==2) typO=2
		menu "      ( s²T²-6sT+12 ) / ( s²T²+6sT+12 )"   _checkmark(typO==3) typO=3
		menu "      Pade2( sT/2 ) * Bessel2( sT/2 )"		   _checkmark(typO==4) typO=4
		menu "      exp(-sT/2) / (1+sT/2)"			   _checkmark(typO==5) typO=5
		menu "      1 / (1+sT/r)ʳ"					   _checkmark(typO==6) (typO,nO)=deal(6,9)
        menu "opóźnienie  	T[sek]"		  (T,typN ) = dialogX(T,1)        
separator
        menu "transmitancja wymierna :" nic=0
//	menu "O7=tf(L,M)"	 _enable(1)			   _checkmark(typO==7) typO=7  
        menu "      (b₁s+1) / (a₁s+1)  	[ b₁ , a₁ ]" _checkmark(typO==7) ...
               (typO,b1,a1,typN) = deal( 7 , dialogX(b1,T,str='współczynnik b₁ = %6ss') , dialogX(a1,T,str='współczynnik a₁ = %6ss') , 0 )
               
        menu "      (b₂s²+b₁s+1) / (a₂s²+a₁s+1) 	[ b₂ , a₂ ]" _checkmark(typO==8) ...
              (typO,b2,a2,typN) = deal( 8 , dialogX(b2,T^2,str='współczynnik b₂ = %6ss²') , dialogX(a2,T^2,str='współczynnik a₂ = %6ss²') , 0 )
         
        menu "      (bᵣsʳ..+b₀) / (aᵣsʳ..+a₀)	[..b₀] [..a₀]" _checkmark(typO==9)
               (typO,LO,MO,typN) = deal(9,dialogLO(LO, T, str='[ bᵣ .. b₀ ] = '),dialogLO(MO, T, str='[ aᵣ .. a₀ ] = ') , 0 )
               
	endsubmenu		
 separator	
	beginsubmenu "blok sprzężenia H(s) ≡ Y(s) / Y'(s)"
		menu " przerwa w torze pomiarowym	H(s) = 0"					  _checkmark(typH==1) typH=1
		menu " idealny tor pomiarowy	H(s) = 1"					  _checkmark(typH==2) typH=2
	endsubmenu
endmenu
beginmenu "Regulator "
	beginsubmenu " typ regulatora"
        menu " 2s : dwustawny"                      _checkmark(typReg==0)  (typReg,typN,ORA) = deal(0,0,1)
        separator
		menu " P   : proporcjonalny"					_checkmark(typReg==1)  (typReg,typN) = deal(1,0)
		menu " PI  : proporcjonalno-calkujacy"			_checkmark(typReg==2)  (typReg,typN) = deal(2,0)
		menu " IP  : PI, z wylaczonym torem P dla sygnalu 'w'"	_checkmark(typReg==3)  (typReg,typN) = deal(3,0)
		menu " PI+ : PI, z wsp. wagi (b) dla sygnalu zadanego w torze P"	_checkmark(typReg==4)  (typReg,typN) = deal(4,0)
		menu " PID+: PID (prop.-calk.-rozniczkujacy), z wsp. wagi b,c" _enable(1) ...
														_checkmark(typReg==5)  (typReg,typN) = deal(5,0) 
	endsubmenu
	beginsubmenu " nastawy dla liniowego zakresu pracy"
		menu "   standardowe  (Kp,Ti,Td,N)"	    _enable(typReg>0)   _checkmark((AltN==0)|(AltN==2))	 AltN = 0
		menu "   alternatywne (Kp,Ki,Kd,Tf)"	_enable(typReg>0)   _checkmark((AltN==1)|(AltN==3))	 AltN = 1
		separator
		menu " wg wzorow "	_enable(typP<3) nic=0
		menu "  CHR   (Chien-Hrones-Reswick, ovs 0%)"	_enable((typReg>0)&(typP<3)) _checkmark(typN==1) (Kp,Ti,Td,typN,typReg)=autoNastawy(Kp,Ti,Td,1,typReg,typP,p ,SD,Ts )
		menu "  ZN    (Ziegler-Nichols, freq.method)"	_enable((typReg>0)&(typP<3)) _checkmark(typN==2) (Kp,Ti,Td,typN,typReg)=autoNastawy(Kp,Ti,Td,2,typReg,typP,p,SD,Ts )
		menu "  CHR2  (Chien-Hrones-Reswick, ovs20%)"	_enable((typReg>0)&(typP<3)) _checkmark(typN==3) (Kp,Ti,Td,typN,typReg)=autoNastawy(Kp,Ti,Td,3,typReg,typP,p,SD,Ts )
		menu "  ZNs   (Ziegler-Nichols, step method)"	_enable((typReg>0)&(typP<3)) _checkmark(typN==4) (Kp,Ti,Td,typN,typReg)=autoNastawy(Kp,Ti,Td,4,typReg,typP,p,SD,Ts )
		// menu "  mod   (Kessler, kryt. modulu)"      _enable(typReg==1|(typReg>0)&(typP>1))  _checkmark(typN==5) (Kp,Ti,Td,typN,typReg)=autoNastawy(Kp,Ti,Td,5,typReg,typP,p,SD,Ts )
		// menu "  sym   (Kessler, kryt. symetrii)"    _enable(typReg>1)		  _checkmark(typN==6) (Kp,Ti,Td,typN,typReg)=autoNastawy(Kp,Ti,Td,6,typReg,typP,p,SD,Ts )
	
	endsubmenu	
	separator
	menu "elementy nieliniowe:"		_checkmark(ORA) 	(ORA,typReg,Awup) = negacjaORA(ORA,typReg,Awup)//not(ORA)&1
	menu "    ograniczenie górne wyjścia u regulatora:	uMax"		                _enable(ORA)	uMax = dialogX(uMax,uB,0,99999999)//dialogP2(x0,xn0, xB=1 , xMin=-inf, xMax=inf,str='Wartosc parametru = ')
	menu "    ograniczenie dolne wyjścia u regulatora:	uMin"			            _enable(ORA)	uMin = dialogX(uMin,uB,-999999999,uMax)
	menu "    uklad anty-windup dla regulatorow PI .. PID "	 _checkmark(Awup>0) _enable((ORA)&(typReg>1))  Awup = not(Awup)
    menu "    uchyb histerezy regulatora dwustawnego 2s	eH"    _enable(typReg==0) Kp = dialogEH(Kp,uMax)
	separator	
	beginsubmenu " zapisz nastawy do pamięci :" 
	menu "1M"	(M1,typN)=zapiszNastawy(typReg,typN,Kp,Ti,b,c,Td,Nd,T,K,p,typP,typO,nO,1)
	menu "2M"	(M2,typN)=zapiszNastawy(typReg,typN,Kp,Ti,b,c,Td,Nd,T,K,p,typP,typO,nO,2)
	menu "3M"	(M3,typN)=zapiszNastawy(typReg,typN,Kp,Ti,b,c,Td,Nd,T,K,p,typP,typO,nO,3)	
	endsubmenu
	beginsubmenu " wczytaj nastawy z pamięci :"			//	nic=0 // typN=0
	menu " 1M " (typReg,typN,Kp,Ti,b,c,Td,Nd)=wczytajNastawy(M1,T,K,1 )
	menu " 2M " (typReg,typN,Kp,Ti,b,c,Td,Nd)=wczytajNastawy(M2,T,K,2 )
	menu " 3M " (typReg,typN,Kp,Ti,b,c,Td,Nd)=wczytajNastawy(M3,T,K,3 )
	endsubmenu
 endmenu 
beginmenu "Symulacje"
separator
	menu "  zresetuj parametry  " (wMin,wMax,h,Ts,tMax,AW,W,tW,AZ,Z,tZ0,tZ,pgB,pgR,NU,NY,NW,NZ,AN,UN,nSigma,LN,seed)	  = paramSym 
separator
	menu "  zakres częstotliwości  	ωMin , ωMax"   (wMin,wMax)  = deal(dialogX( wMin,1/T,wMax*1e-6,1e-1,'Minimalna pulsacja charakterystyk częstotliwosciowych [rad/s]' ),dialogX( wMax,1/T,1e1,wMin*1e6 , 'Maksymalna pulsacja charakterystyk częstotliwościowych [rad/s]'));
	menu "  czas końcowy	tMax"		                tMax  = dialogX( tMax,T,h ,h*Nh ) 

	menu "  krok obliczeń 	h"     _enable(~SD)             h = dialogX( h,T,max(0.005,tMax/Nh),tMax )  
    menu "  maksymalna liczba kroków 	Nh"                 Nh = dialogNr( Nh, 10, 1e5,'Nh = ' )     
separator 
	menu " [d]  dyskretyzacja systemu "  _checkmark(SD)  (SD,typN,Ts) = deal(not(SD),0, max(Ts,h) ) 
	menu " okres próbkowania 	Ts"         _enable(SD)	    (Ts,typN) = dialogX( Ts,T,h,1 ) 
	// beginsubmenu "  metoda konwersji s->z : " 
	// menu "	  tustin  "		_enable(SD==1) _checkmark((SD==1)&(MD==1)) MD=1
	// menu "	  zoh "			_enable(SD==1) _checkmark((SD==1)&(MD==2)) MD=2
	// menu "	  foh "			_enable(SD==1) _checkmark((SD==1)&(MD==3)) MD=3
	// endsubmenu
endmenu
beginmenu "Opcje wykresów"

	menu "[a]   zostaw/usuń ślady "	 _checkmark(ZoS)   ZoS = not(ZoS)
	menu "[f]   f(Hz) / ω(rad/s)"    _checkmark(fHz)   fHz = not(fHz)
   	//menu "[s]   skale {u,z..} / {y,w,..} "	_checkmark(SkU) SkU	 = not(SkU)
separator
    menu "    [>]   zwiększ czcionkę "     fontSize = setfigstyle(fontSize+2,B,I)
    menu "    [<]   zmniejsz czcionkę "    fontSize = setfigstyle(fontSize-2,B,I)
 //   menu "    [B]   włącz/wyłącz pogrubienie" _checkmark(B)   (fontSize,B,I)=setfigstyle(fontSize, not(B), I) 
separator 

   
menu "pokaż/ukryj:" nic=0
	menu "    [y]   linie niebieskie"	            NY = not(NY)
	menu "    [u]   linie czerwone "	            NU = not(NU)
	menu "    [ l ]  legendę    "		            NL = not(NL)
	beginsubmenu "    [   ]  kursory o--x"
    menu "  [    ] zwykłe: tₓ , tₒ=0  "      (KW,PWW,tp) = deal(PWW== 1?0:1 , PWW== 1?0:1  , PWW== 1?0:0 )
    menu "  [ r ] różnicowe:  Δt=tₓ-tₒ "       (KW,PWW,tp) = deal(PWW== 2?0:1 , PWW== 2?0:2  , PWW== 2?0:tp )
    menu "  [ o ]  tₒ=0  / tₒ=tₓ"                  (tp,PWW) = deal(tp? 0 : tk, tp? 1 : 2) 
    menu "  [ t ] wskaźniki całkowe"  (KW,PWW,tp) = deal(PWW==-1?0:1 , PWW==-1?0:-1 ,  PWW==-2?0:tp )
    menu "  [ e ] ekstremum, wart.ustalona"     (KW,PWW,tp) = deal(PWW==-2?0:1 , PWW==-2?0:-2 , PWW==-2?0:tp ) 
 
    menu "  [ 5 ] czas ustalania z tol.5%"  (KW,PWW,tp,NTol,tol) = deal(PWW==-3?0:1 , PWW==-3?0:-3 , PWW==-3?0:tp , PWW==-3?0:1 , 5)
   
    
  endsubmenu    
endmenu
beginmenu "Okna"    
		//menu "ustawienia okien wykresow:" nic=0
	menu "    [1]  Schemat blokowy      "		subplots('Schemat blokowy')
    menu "    [2]  Schemat, Czasowe "                   layout(2)
	menu "    [3]  Schemat, Czasowe, Bode (mag)  "	    layout(3)
	menu "    [4]  Schemat, Czasowe, Bode, Nyquist_OL"	layout(4)
	menu "    [6]  4 + Czasowe + Nyquist otw.pętla"     layout(6) 
	menu "    [c]  tylko czasowe "				        subplots('Odpowiedzi czasowe')
  
 endmenu  

figure "Schemat blokowy"
draw drawSchemat(_v,GM,DM,PM,Cs,Os,Ps,Hs,d,h,nSigma,UN,W,tW,Z,tZ,tZ0,typSch,typO,typP,typH,typReg,ORA,typN,AW,AZ,AN,LN,pgB,pgR,NY,NU,NW,NZ,Kp,Ti,b,c,Td,Nd,T,K,p,H2O,PWS,nO,SD,MD,Ts,AltN,uMax,uMin,Awup,id,m)
 mouseup   (AltP,SkU,a1,a2,b1,b2,h,uMax,uMin,M1,nSigma,W,tW,Z,tZ,typB,typSch,typO,typP,typH,typReg,ORA,Awup,typN,AW,AZ,AN,UN,LN,pgB,pgR,NY,NU,NW,NZ,Kp,Ti,b,c,Td,Nd,T,K,p,H2O,PWS,nO,LO,MO,SD,MD,Ts,AltN,tMax,tZ0)=...
 upSch(_v,Cs,Os,Ps,Hs,d,h,uMax,uMin,M1,nSigma,W,tW,Z,tZ,typB,typSch,typO,typP,typH,typReg,ORA,Awup,typN,AW,AZ,AN,UN,LN,pgB,pgR,NY,NU,NW,NZ,Kp,Ti,b,c,Td,Nd,T,K,p,H2O,PWS,nO,LO,MO,SD,MD,Ts,AltN,tMax,tZ0,_id,_dx,_dy,_m,2)

 mouseup idSch   PWS = not(PWS)

 mousescroll(AltP,a1,a2,b1,b2,h,Ts,uMax,uMin,_msg,typO,typReg,ORA,typP,typH,typSch,nO,W,AW,NW,Z,AZ,NZ,nSigma,AN,Kp,Ti,b,Td,Nd,c,K,T,p,H2O,AltN,typN,PWS,SD,tMax,tZ0,tZ,tW)=
	scrollSchem(_v,h,Ts,uMax,uMin,id,_dy,typO,typReg,ORA,typP,typH,typSch,nO,W,AW,NW,Z,AZ,NZ,nSigma,AN,Kp,Ti,b,Td,Nd,c,K,T,p,H2O,AltN,typN,PWS,SD,tMax,tZ0,tZ,tW,M1,_m)
    
 mousescroll idSch  typSch	=	PWS? typSch : scrollY(_dy,typSch,1,(typP==3)?8:1,(typP==3)?9:7)
 mousescroll 0 nic = 0
 
mouseover (_msg,id,_cursor,m) = overSchem(PWS,AN,typReg,_id,_m) // powinno być (_id,_m)
figure "Odpowiedzi czasowe"
	draw		drawCzasowe( _v,t,SkU);//,t,tp,tk,SkU)
    mousedrag   ( nic,KW,KA,NY,NU,tp,tk,NTol,PWW,kyB,yB0,kyR,yR0, wp )    = dragCzasowe(_v, _x1, _m,_id)
	mousedrag	idW	 ( W , tW ) = dragW	 (_v, _dx,_dy,_m, W, tW) 
	mouseup		idW	 ( W , tW ) =	upW	 (_v,_dx,_dy,_m, W, tW , T)						
	mousedrag	idZ	 ( Z,  tZ ) = dragZ	 (_v,_dx,_dy,_m, Z, tZ,uB)
	mouseup		idZ	 ( Z,  tZ ) =	upZ	 (_v,_dx,_dy,_m, Z, tZ, T, uB)
	mousedrag	idZ0  (tZ0)		= dragZ0 (_v,_dx,tZ0)
	mouseup		idZ0   tZ0		=	upZ0 (_v,_dx,_m,tZ0,T,tMax) 
    
    mousedrag   idtMax (tMax)   = _m? dialogX( tMax , T,1e-3, str = 'tMax = ') : tMax    

    mousescroll (fontSize,nic, KW, KA, kyB, kyR,yB0, yR0, tp, tk, PWW, NTol,tol,wk ) = paramUp(_v,_key,_dy,_m,_id)
    
    mouseover   (_msg,_cursor, tk)      = overCzasowe(_v,_x,_m,_x1,_y1,_id)
     
beginsubmenu "Czestotliwosciowe.." 
	figure "Charakterystyki amplitudowe"
        draw drawBodeNew(w,Ujw,Yjw,SD,Ts,K,T,pgB,pgR, SkU,NL,NU,NY,PWW,ZoS,fHz,wp,wk,KW,KA,typB,0)
        mousedrag           (KA,wk) = upBode(_v,_m,id)	
		mousescroll         (wk)    = scrollBode(_v,_dy,_m,_id)
	mouseover (_msg,_cursor,wk,id)	= overBode(_v,_x,_m,_x1,_y1,_id)
	figure "Charakterystyki fazowe"
        draw drawBodeNew(w,Ujw,Yjw,SD,Ts,K,T,pgB,pgR, SkU,NL,NU,NY,PWW,ZoS,fHz,wp,wk,KW,KA,typB,3)
		mousedrag	(KA,wk)	= upBode(_v,_m,id)
		mousescroll (wk)	= scrollBode(_v,_dy,_m,_id)        
	mouseover (_msg,_cursor,wk,id)	= overBode(_v,_x,_m,_x1,_y1,_id)	  
	figure "Charakterystyki Nyquista"	
        draw drawBodeNew(w,Ujw,Yjw,SD,Ts,K,T,pgB,pgR, SkU,NL,NU,NY,PWW,ZoS,fHz,wp,wk,KW,KA,typB,6)
		mousedrag	(KA,wk)	= upBode(_v,_m,id)
		mousescroll (wk)	= scrollBode(_v,_dy,_m,_id)        
	mouseover (_cursor,_msg,ixF,wk,id) =	overNyquist(_v,_ix,_id,_m)
	figure "char. Nyquista otwartej petli"
        draw                                drawNyquistOLnew(_v)
		mousedrag				(KA,wk)	=   upNyquistOL(_v,_m,_id)        
		mousescroll             (wk)    =   scrollBode(_v,_dy,_m,_id)   
	mouseover (_cursor,_msg,ixF,wk,id)  =	overNyquistOL(_v,_ix,_id,_m)        
endsubmenu	

functions //##################################
{@
use lti, stdlib 
//dialogi i inne pomocnicze ###############################################
function v = test(vv)
  v=vv;
    clc
    disp(v.K);
endfunction    
function (fs,B,I)  = setfigstyle(fontSize,bold=false,italic=false,winbg=[])
   B=bold;
   I=italic;
   fs = fontSize;
  font = 'Segoe UI';%'Tahoma';%'Segoe UI';%'Cambria';%;%'Verdana';%
  figurestyle('figfont',    Font=font,    Size=fs , Bold=B, Italic=I);
  figurestyle('titlefont',  Font=font,    Size=fs,  Bold=B, Italic=I);
  figurestyle('labelfont',  Font=font,    Size=round(fs*0.999),  Bold=B, Italic=I);
  figurestyle('legendfont', Font=font,    Size=fs,  Bold=B, Italic=I);
  figurestyle('tickfont' ,  Font=font,    Size=round(fs*0.899))
  figurestyle('xygrid' ,    LineStyle='_' )
  figurestyle('draw',       LineStyle='_')
  figurestyle('plotmargin', Top=1.2 , Bottom=1.2, Left=5)
  if ~isempty(winbg)
    figurestyle('winbg', FillColor=winbg) // białe tło
  end  
    endfunction  
  endfunction //dlazakończenie zwijania po figure
  endfunction //dlazakończenie zwijania po figure
  endfunction
  endfunction
  endfunction
  endfunction
  endfunction
  endfunction
endfunction
function (fontSize,tMax, KW, KA, kyB, kyR,yB0, yR0, tp, tk, PWW, NTol,tol,wk ) = paramUp(v,key,dy,m,id)
    fontSize = v.fontSize; tMax=v.tMax; KW=v.KW; KA=v.KA; kyB=v.kyB;kyR=v.kyR; yB0=v.yB0;yR0=v.yR0;wk=v.wk;
    tp=v.tp;tk=v.tk;PWW=v.PWW;NTol=v.NTol;tol=v.tol;
    k=1; df=0;
    K=1.005;
    if (key==='up')      ; k=K;     df =  1; end
    if (key==='right')   ; k=K^5;   df =  5; end              
    if (key==='left')    ; k=K^-5;  df = -5; end       
    if (key==='down')    ; k=1/K;   df = -1; end
    if isempty(id) ; id=0; end
    
    if (key=='>')        ; fontSize = setfigstyle(fontSize+1,v.B,v.I); end
    if (key=='.')        ; fontSize = setfigstyle(fontSize+1,v.B,v.I); end 
    if (key=='<')        ; fontSize = setfigstyle(fontSize-1,v.B,v.I); end    
    if (key==',')        ; fontSize = setfigstyle(fontSize-1,v.B,v.I); end  
    
     PREC=false;
dy=dy-df*1.00;


    switch id
        case idKA
        if v.KW;
            PWW = min(2,max(-3, v.PWW-dy));
            NTol = true;
            KA = 0; KW = 1;
            switch PWW
               // case 2 ;	tp=tk; 
               // case 1 ;	tp=0;
               // case 0 ;    KW=0; tp=0;
                case -1;	NTol=false;
            end
        end 
        case [idFreq,idYW,398]
            if ~KA; wk = wk*k; end
        case [idTime,idYT,idUT]
            if ~KA; tk = min(max(0,tk-(PREC? 2e-5:0.0005)*tMax*dy),tMax); end
            //if  ~KA ; tk = min(tMax,max(0,v.tk + 0.1*tMax*(k-1))); end
        case idRedMark
          if m  
            yR0 = yR0 + (~v.NU ? 0.01*dy : 0);
          else
            kyR = kyR* (~v.NU ? (1+0.01*dy) : 0);
          end
        case idBlueMark
          if m
            yB0 = yB0 + (~v.NY ? 0.01*dy : 0);
          else
            kyB = kyB*(~v.NY ? (1+0.01*dy) : 1);    
           // yB0 = yB0 + (~v.NY ? 0.1*dy : 0);
          end
        case idtMax
        //disp(sprintf('%k',dy))
            tMax = v.tMax*(1 - 0.005*dy);
        case idTolT
            tol =	scrollY(dy,tol,10,0);            
        otherwise    
    end   
endfunction
function styl = styl_B
  styl = plotset(Color='blue',LineWidth=1+1.5*k12);
endfunction
function styl = styl_R
  styl = plotset(Color='red',LineWidth=0.5+k12/2);
endfunction
function styl = stylC
  styl = plotset(Marker='o',Size=36);
endfunction
function styl = stylO
  styl = plotset(Marker='o',Size=20);
endfunction  
function kursor(KA,x0,x,y0,y,Color='Blue',id=[])

U = Color(1)==upper(Color(1));

stylX = plotset( Marker= 'x', Size = U? 13:11, Color = Color, LineWidth = U? 2 : 1);
stylW = plotset( Marker= 'x', Size = U? 17:14, Color = 'white',LineWidth = U? 6: 3);
stylL = plotset( LineStyle = KA ? '-' : ':', Color = Color);        
  
    plot( [1, 1]*x  ,  [y0,y]   , plotset(stylL));//,LineStyle=':') );
    if (y0==y)&(~isempty(id))
      //line([1,0], x , plotset(stylL,Color='black'));
    end  
    plot( [x0 ,x]   ,  [1,1]*y  , plotset(stylL));//,LineStyle=':') );//poziomy
    plot( x, y, stylW) //iks    
    plot( x, y, stylX) //iks
    if ~isempty(id)
      plot( x,y, Marker='o' ,Size=4, MarkerEdgeColor=Color, MarkerFaceColor='white' , LineWidth=1 , id=id )
    end
 
    
endfunction
function (x,typ1,typ2,typ3)     =	dialogX (x0, xB=1 , xMin=-inf, xMax=inf, str='Wartość parametru = %7s')
	// opt = dialogset('Title',[str,sprintf('%n',x0*xB)],'NPrec',3,...
				// 'Prompt',' (Cancel - gdy nie chcesz niczego zmieniac)');
	opt = dialogset('SingleLine',true,'Title',spf([str],x0*xB,5),'NPrec',5,'Prompt',...
    'Wpisz i zatwierdź nową wartość parametru\n [ OK ]  zatwierdza zmiany     [ Cancel ]  unieważnia wpis');
	(Ok,x1) = dialog(opt,x0*xB);
	if (~Ok) ; cancel ; end
	if((x1<xMin*xB)|(x1>xMax*xB)); 
		x1k=min(xMax*xB-10*eps,max(xMin*xB,x1));
		dialog(['Wartość ',sprintf('%n  skorygowano na  %n',x1,x1k)]);
        x1=x1k;
	end
	x=x1/xB;typ1=0; typ2=0; typ3=0;
    
endfunction
function (x,typ1,typ2,typ3)     =	dialogX1 (x0, xMin=-inf, xMax=inf, str='Wartość parametru = ')
	opt = dialogset('SingleLine',true,'Title',[str,sprintf('%k   ',x0)],'NPrec',3,'Prompt',...
    'Wpisz i zatwierdź nową wartość parametru\n [ OK ]  zatwierdza zmiany     [ Cancel ]  unieważnia wpis');
	(Ok,x1) = dialog(opt,x0);
	if (~Ok)|~isreal(x1+eps) ; cancel ; end
	if((x1<xMin)|(x1>xMax)); 
		x1=min(xMax-10*eps,max(xMin,x1));
		dialog(['Skorygowana wartość =',sprintf('%k',x1)]);
	end
	x=x1;typ1=0; typ2=0; typ3=0;
endfunction
function (x,nx)				    =	dialogP(x0, xB=1  , xMin=-inf, xMax=inf,str='indeks = ')
	opt = dialogset('Title',[str,sprintf(' %n  ',x0*xB)],'NPrec',3,...
				'Prompt',' [Cancel] - anuluj , [OK] - zatwierdz zmiany');
	(Ok,x1) = dialog(opt,x0*xB);
	//if (~Ok) ; x1=x0*xB ; end
    if (~Ok) ; cancel ; end
    
	if((x1<xMin*xB)|(x1>xMax*xB)); 
		x1=min(xMax*xB-10*eps,max(xMin*xB,x1));
		dialog(['Skorygowana wartość =',sprintf('%n',x1)]);
	end

 	x=x1(1)/xB;
    nx = length(x1)>1? x1(2) : -x1(1);
    nx = nx/xB;
    
endfunction
function (n,typ0)				=	dialogNr(n0, nMin=1, nMax=2,str='n = ')
	opt = dialogset('Title',[str,sprintf(' %d  ',n0)],'NPrec',1,...
				'Prompt',[sprintf('Podaj liczbe od %d do %d ',nMin,nMax),'\n [Cancel] - anuluj , [OK] - zatwierdz zmiany']);
	(Ok,x1) = dialog(opt,n0);
    if (~Ok) ; cancel ; end
    n1 = round(x1);
	if((n1<nMin)|(n1>nMax)); 
		n1=min(nMax,max(nMin,n1));
		dialog(['Skorygowana wartość = ',sprintf('%d',n1)]);
	end
 	n=n1;
    typ0 = 0;
endfunction
function (h,Ts)			=	dialog_h(h,T) //tymczasowo ? h==h
	x=dialogX(h,T,0.001,1);
    xk = 1/round(1/x);
    if xk ~= x;
        dialog(sprintf('Wartość skorygowana: h = %gs' , xk*T))
    end
	(h,Ts)=deal(xk);
endfunction
function (Kp )                  =   dialogEH(Kp, uMax)
    EH = uMax/Kp ; 
    x  = dialogP(EH, 1 , 1e-32 , 1e12 , 'Uchyb przy przelaczaniu z uMin na uMax: eH = ');
    Kp = uMax/x;

endfunction 
function (L,M)				    =	skalujLM(L,M,T)
	n	=	length(M);
	for i = 1:n ; M(i)=M(i)*T^(n-i); end;
	n	=	length(L);
	for i = 1:n ; L(i)=L(i)*T^(n-i); end;
endfunction
function (LO,MO)			    =	dialogLMO(L0,M0,T)//to jeszcze nie gotowe!
	(L,M)	= skalujLM(L0,M0,T);
	LO	=	L0;
	MO	=	M0;
	opt = dialogset('Title',...
			['[bᵣ..b₀]=[',sprintf(' %k ',L),'] , M=[',sprintf(' %k ',M),']'],...
			'NPrec',3,...
			'Prompt',['Podaj wspolczynniki licznika i mianownika transmitancji',...
			'\nw kolejnosci od najwyzszej potegi s',...
			'\n(Cancel - gdy nie chcesz niczego zmieniac)']);
	(ok,L,M) = dialog(opt,L,M);
	if ~ok ; return; end;
		
	if length(L)>length(M)
		dialog('Licznik nie moze byc wyzszego stopnia niz mianownik');
		return;
	end
	if L(end)~=M(end)
		dialog('Wzmocnienie statyczne tego bloku musi byc rowne 1');
		return;
	end
	Tn=(length(M)<2?0:M(end-1))-(length(L)<2?0:L(end-1));
	if abs(T-Tn/M(end))>0.5;
		dialog('UWAGA: opoznienie znacznie rozni sie od T!');
	end 
	(LO,MO)=skalujLM(L,M,1/T);
endfunction
function (LO)			        =	dialogLO(L0,T,str='[ bᵣ .. b₀ ] = ')//to jeszcze nie gotowe!
	L	= skalujLM(L0,L0,T);
	LO	=	L0;
	//MO	=	M0;
	opt = dialogset('Title' , [str,'[', sprintf('   %k',L),'  ]'],...
			'NPrec',3,...
			'Prompt',['Podaj współczynniki transmitancji',...
			'\nw kolejnosci od najwyższej potegi s',...
			'\n(Cancel - gdy nie chcesz niczego zmieniać)']);
	(ok,L) = dialog(opt,L);
	if ~ok ; return; end;
	LO=skalujLM(L,L,1/T);
endfunction
function (W,tW,AW,typB)			=	dialogW(W,tW,T,AW=0,typB=1,m=0)
if m     
    opt = dialogset('Title',['[ dw , dt	] = ',sprintf('%n , %n',W,tW*T)],'NPrec',3,...
				'Prompt',' Wpisz nowe wartosci dw , dt	\n\n [Cancel] - anuluj , [OK] - zatwierdz zmiany');
	(Ok,WtWn) = dialog(opt,[ W , tW*T ]);
	if (~Ok) ; cancel ; end
    W = WtWn(1);
    tWn=length(WtWn)>1?WtWn(2):tW*T;
	if(tWn<0); tWn=0;
	    dialog(['Skorygowana wartość dt=',sprintf('%n',tWn)]);
	end
	tW=tWn/T;
    (AW,typB) = deal(1);
else
   AW = ~AW; if AW; typB=1; end ;
end   
endfunction
function (ORA,typReg,Awup)      =   negacjaORA(ORA,typReg,Awup)
    //ORA = ~ORA | ~typReg;
    ORA = ~ORA;
    typReg=max(~ORA,typReg);
    if ~ORA; Awup=0; end
//[ORA,Awup]
endfunction 
function (LN)					=	negacjaLN(LN,AN)
	if (AN==true)
		idlestate(~LN);
		LN	=	~LN;
	else
		idlestate(false);
		LN	=	false;
	end 
endfunction 
function (AZ,NZ,typB,Z,tZ,tZ0)	=	drupZ	( AZ,NZ, Z,tZ,tZ0,tMax,T,uB,AW,PWS, dz)
	if (abs(dz)>1.5)
		NZ=AZ; 
		typB= ~AZ? 2 : AW? 1 : 0;
		AZ = ~AZ;
	else
		// Title = AW?['[ dz , dt , t0 ] = ',sprintf('%n , %n , %n',Z*uB,tZ*T,tZ0*T)]:['[ dz , dt ] = ',sprintf('%n , %n ',Z*uB,tZ*T)]; 
		// opt = dialogset('Title',Title,'NPrec',3,...
				// 'Prompt',[' Wpisz nowe wartosci dz , dt ',AW?' , t0':'',' \n\n [Cancel] - anuluj , [OK] - zatwierdz zmiany']);
        Z  = dialogX(Z,uB,str='Zmiana zakłócenia, ΔZ = %6s' );
        tZ = dialogX(tZ,T,0,tMax,str='Czas trwania zmiany Δt = %6ss' );
        if AW==1
            tZ0 = dialogX(tZ0,T,0,tMax-1e-4,'Chwila początkowa zmiany tZ0 = %6ss');
        end    
			// (Ok,ZtZt0) = dialog(opt,[Z*uB,tZ*T,tZ0*T]);
            // if (~Ok) ; cancel ; end
            // Zn = ZtZt0(1);
            // tZn= length(ZtZt0)>1? ZtZt0(2) : tZ*T;
            // tZ0n=length(ZtZt0)>2? ZtZt0(3) : tZ0*T;
			// tZ0=min(tZ0n/T,tMax-1e-4);
		// else
			// (Ok,ZtZ) = dialog(opt,[Z*uB,tZ*T]);
            // if (~Ok) ; cancel ; end
            // Zn = ZtZ(1);
            // tZn= length(ZtZ)>1? ZtZ(2) : tZ*T;  
		// end		
		// if (~Ok) ; cancel ; end
		// if(tZn<0); tZn=0;
		// dialog(['Skorygowana wartość dt=',sprintf('%n',tZn)]);
		// end
		// tZ=tZn/T;
		// Z = Zn/uB;
	  typB=AZ? 1 : 2;
	  AZ=1; NZ=0;
	end
endfunction
function (AN,LN,typB,UN,nSigma) =	drupN	( AW, AN,UN,nSigma,PWS, dz)
	if (abs(dz)>1.5)
		AN=~AN;
	else 
		idlestate(false);
			str=['rozklad ',UN?'rownomierny(1)':'normalny(0)'];
			opt = dialogset('Title',['[ sigma , rp ] =	 ',sprintf('%g	,  %s', nSigma , str )],'NPrec',3,...
				'Prompt',...
	' Okresl odchylenie standardowe sigma \n oraz rozklad prawdopodobienstwa: 0 (normalny), 1:rownomierny\n [Cancel] - anuluj , [OK] - zatwierdz zmiany');
			(Ok, rozkladSigma) = dialog(opt, [nSigma,UN]);
			if (~Ok) ; cancel ; end
            nSigma = rozkladSigma(1);
            UN = length(rozkladSigma)>1? rozkladSigma(2):UN;
			if(nSigma<0); nSigma=0;
				dialog(['Skorygowana wartość odchylenia std =',sprintf('%g',nSigma)]);
			end
			//UN = (upper(rozklad(1))=='R')?1:0;
			AN = true;
	end 
	LN=false;
	if AN
		typB= 3;
	else
		typB=AW? 1 : 2;
	end 
endfunction
function (typ,typN)				=	zmienTyp(typX,typMin,typMax,m=false)
	typ	 = typMin+mod(typX-typMin+(m?-1:1) , typMax-typMin+1);
	typN=0;
endfunction
function (y , typ0)				=	scrollY( dy , y , dyB=1, Ymin=-1/eps , Ymax=1/eps , typ=0)
	if dyB ~= 0
		kB = dyB;
	else	
		 ay=abs(y);
         r = floor(log10(ay));
         ay = ay/10^r;
         
		 if ay<0.5;		kB=500; 
         elseif ay<1;   kB=200;
		 elseif ay<2;	kB=100;
		 elseif ay<5;	kB=50;
		 elseif ay<10;	kB=20;
		 elseif ay<20;	kB=10;
		 elseif ay<50;	kB=5;	
		 else;	kB = 1; 
		 end
         kB=kB/10^r;
	end	 
	y	= min(Ymax,max(Ymin,round(kB*y-dy)/kB ));
	//y = min(Ymax, max(Ymin, y-dy/dyB ));
	typ0 = typ;
endfunction
function		method			=	mdStr(MD)
		mdStr = 'tzfm';
		method = mdStr(MD);
endfunction 
function		dd_sys			=	ddelay(d,Ts)
q = tf(1,[1,0],Ts);
if d==0
	dd_sys = 1;
else	
	q = tf(1,[1,0],Ts);
	n = floor(d/Ts);
	m = rem(d/Ts , 1 );
	if n<32
		dd_sys =((1-m)*q^n+m*q^(n+1));
	else
	  n=n-31;
	  dd_sys =((1-m)*q^n+m*q^(n+1));
	  dd_sys = dd_sys*q^31;
	end
end
endfunction 
function (Mx,typN)				=	zapiszNastawy(typReg,typN,Kp,Ti,b,c,Td,Nd,T,K,p,typP,typO=2,nO=5,nM=0)
	typN=-nM;
	Mx = {typReg,typN,Kp,Ti,b,c,Td,Nd,T,K,p,typP,typO,nO};
endfunction
function (typReg,typN,Kp,Ti,b,c,Td,Nd)	=	wczytajNastawy(Mx,T,K,nM=0)
	Mcell=Mx;
	(typReg,typN,Kp,Ti,b,c,Td,Nd,To,Ko) = deal(Mcell{:}) ;
	if (K~=Ko)|(T~=To) ; 
		Kp=min(10*Kp	, Kp*K*T/Ko/To); 
		Ti=max(0.1*Ti	, Ti*To/T); 
		Td=min(10*Td	, Td*To/T);
	end;
	typN=-nM; 
endfunction
function (Kp,Ti,Td,typN,typReg,wzor)    =	autoNastawy(Kp,Ti,Td,typN0,typReg,typP, p, SD, Ts    ) 
 //if typN0<1; cancel; end
 
wzor='nastawy swobodne';
 typN = typN0;
 
  c = SD? 1+Ts : 1;
 
 switch typReg
	case 1 %P
		switch typN0
			case 2;		Kp=0.785/c; wzor='ZN :    Kp = 0.785/K/T῎'; %ZN freq.: 0.5*Ku=pi/4
			case 1;		Kp=0.6/c; wzor='CHR:    Kp = 0.6/K/T῎';%CHR 0% (było 0.3?!)
			case 6;		typN=0; %sym
			case 5;		Kp=0.5/c;	wzor='mod:  Kp = 0.5/K/T῎';  % mod
			case 3;		Kp=0.7/c;	wzor='CHR2: Kp = 0.7/K/T῎';  %CHR 20%
			case 4;		Kp=1/c;	wzor='ZNs:  Kp = 1/K/T῎';  % ZN step 
		end			
	case [2,3,4] %PI,IP,PI+
		switch typN0
			case 2;		Kp=0.628/c; Ti=3.2/c; wzor='ZN:     Kp = 0.628/K/T῎    Ti = 3.2·T῎'; %ZNfreq 0.4Ku,0.8Tu
			
            case 1;		Kp=0.6/c;	  Ti=typP<2?  4*c:  4*c/(1-2.5*p*c); %4/(1-1.0*p)^2;
                        wzor= 'CHR:    Kp = 0.6/K/T῎    Ti = 4·T῎' ;%4+6*p+3*p^2;%
                        if typP>=2; wzor=['CHR+:',wzor(6:end),'/(1-2.5pT῎)']; end         
			
            case 6;		Kp=0.5/c;	  Ti=4.0*c;	wzor= 'sym:     Kp = 0.5/K/T῎    Ti = 4·T῎' ;
			case 5;		Kp=0.5/c;	  Ti=typP==1? 1e4 : -1/p; %mod Ti=inf
                        wzor= 'mod:     Kp = 0.5/K/T῎    Ti = ' ;
                        wzor=[wzor,typP==1?'∞':'-1/p/T῎'];    
			case 3;		Kp=0.7/c;	  Ti=2.3*c;  wzor = 'CHR2:    Kp = 0.7/K/T῎    Ti = 2.3·T῎' ; %CHR 20%
			case 4;		Kp=0.9/c;	  Ti=3*c;    wzor = 'ZNs:     Kp = 0.9/K/T῎    Ti = 3·T῎' ;%ZN step
		end 
	case 5 %PID
		switch typN0
			case 2;		Kp=0.943/c;Ti=2.0*c; Td=0.5*c; wzor= 'ZN:     Kp = 0.943/K/T῎    Ti = 2·T῎   Td = 0.5·T῎';%ZNfreq 0.6Ku 0.5Tu 0.125Tu
			case 1;		Kp=1/c;Ti=3*c;Td=0.3*c;wzor= 'CHR:    Kp = 1/K/T῎    Ti = 3·T῎   Td = 0.3·T῎';%Kp=0.95; Ti=2.4; Td=0.42;%CHR 0῎
                        if typP>=2; Ti=Ti/(1-1.5*p*c); 
						wzor= 'CHR+:  Kp = 1/K/T῎  Ti = 3·T῎/(1-1.5pT)  Td = 0.3·T῎';
						end
			case 6;		typN=0;
			case 5;		typN=0;
			case 3;		Kp=1.2/c;	 Ti=2.0*c; Td=0.42*c; wzor= 'CHR2:  Kp = 1.2/K/T῎    Ti = 2·T῎   Td = 0.42·T῎';%CHR 20%
			case 4;		Kp=1.2/c;	 Ti=2.0*c; Td=0.5*c;  wzor= 'ZNs:   Kp = 1.2/K/Tv    Ti = 2·T῎   Td = 0.5·T῎'; %ZNstep		end 
		end 
 end
endfunction
function (t,u,y,w,Ujw,Yjw,wL,Ljw)		=	empty_tuy
 t=[];u=[];y=[]; w=[]; Ujw=[] ; Yjw = [] ; wL=[]; Ljw=[]; 
endfunction

//// layout, init, export ################################
function layout(nr)

switch nr
	case 1
		subplots('Odpowiedzi czasowe');
	case 2
		subplots('Schemat blokowy\tOdpowiedzi czasowe')
    case 3    
_plots = '\nSchemat blokowy\nCharakterystyki amplitudowe\nOdpowiedzi czasowe';
_plotprops = [360448,zeros(1,4)
884736,zeros(1,4)
262145,zeros(1,4)
262144,zeros(1,4)];
_plot3d = [];
_plotsync = [];
_plotpos = [68.9375,137.875,42.5625,85.125
0,68.9375,0,42.5625
68.9375,137.875,0,42.5625
0,138,43,85.125];
_plotspring = [0.5*ones(1,6)
0.5*ones(1,6)
0.5*ones(1,6)
0.5*ones(1,6)];
_plotsize = [137.875,85.125];
subplots(_plots);
subplotprops(_plotprops);
subplotpos(_plotpos);
subplotspring(_plotspring);
subplotsize(_plotsize);
        
	case 4
		subplots(['Schemat blokowy\tOdpowiedzi czasowe\nchar. Nyquista otwartej petli\tCharakterystyki amplitudowe']);
	case 6
		subplots(['Schemat blokowy\tOdpowiedzi czasowe\tCharakterystyki amplitudowe',...
			 '\nchar. Nyquista otwartej petli\tCharakterystyki Nyquista\tCharakterystyki fazowe'])
	otherwise		 
		subplots(['Schemat blokowy\tOdpowiedzi czasowe',...
				  '\nCharakterystyki Nyquista\tCharakterystyki amplitudowe']);
end				  
endfunction
function (NM,NG)        = init(v)
  global NM
  global NG
  NM = false;
  NG = true;
  B = false;
  I = false;
  winbg=0.5;
  setfigstyle(v.fontSize,bold=B,italic=I , winbg=v.winbg);
  //subplots('Schemat blokowy');//layout(1) //layout(6)
  layout(2);
  idlestate(false);
  
endfunction
function NM             = ustawMargin(NM)
global NM

sp=subplots;
spp=subplotprops;
sps=subplotpos;
NM=not(NM);
subplots(sp);
subplotprops(spp);
subplotpos(sps);

endfunction
function NG             = ustawGrid(NG)
global NG

sp=subplots;
spp=subplotprops;
sps=subplotpos;
NG=not(NG);
subplots(sp);
subplotprops(spp);
subplotpos(sps);

endfunction
function (seed)         = liveNoise(LN,seed)  
if (LN==true)
	//idlerate=0.05;
	seed=seed+pi;
else
	seed=seed;
end 
	//seed = LN? seed+pi : seed;
endfunction
function (wMin,wMax,h,Ts,tMax,AW,W,tW,AZ,Z,tZ0,tZ,pgB,pgR,NU,NY,NW,NZ,AN,UN,nSigma,LN,seed)  =	paramSym
// parametry symulacji i skoku zakłócenia - w jednostkach bazowych
 wMin   = 0.001; //min. pulsacja  (JB)
 wMax   = 100;   // max. pulsacja (JB)
 h		=   0.05;//0.05; //0.02;
 //h  =   h; // zmiana 11-05-2020
 Ts     =   h ; // zmiana 11-05-2020
 tMax	=   60;//60;//100; //10; //60;	  %	 czas końcowy symulacji
 Z		=	0.5;//0.5;		% skok zakłócenia na wejściu obiektu
 tZ0	=	tMax/2;		% początek zakłócenia
 tZ		=	h;//h/2;					//czas narastania zaklocenia z(t)
 W		=	1;//1
 tW		=	h;//0;//h/2;	//czas narastania wymuszenia
 pgB	=	2; //1; %y
 pgR	=	1;	%u
 (NY,NU,NW,NZ) = deal(0,1,1,1);	 // NZ=1; NU=1;
 (AW,AZ)	= deal(1,1);	     // AW =0;
 (AN,UN,LN) = deal(0);
 nSigma		= 0.02;
 seed		= rand;
endfunction
function (M1,M2,M3)	    = initMem
		 (M1,M2,M3) =	deal({2,1,1,10,0.0,0.0,0.5,8,1,1,-0.1,1,2,5 }); //typReg,typN,Kp,Ti,b,c,Td,Nd,T,K,p,typP,typO,nO
endfunction
function (dane,type)    = eksportParam(h,Ts,SD,MD,K,T,p,Kp,Ti,b,Td,Nd,c,typReg,typO,typP,typH,H2O,nO)
 dane=[h,Ts,SD,MD,K,T,p,Kp,Ti,b,Td,Nd,c,typReg,typO,typP,typH,H2O,nO];
 type='real array';
endfunction
function (h,Ts,SD,MD,K,T,p,Kp,Ti,b,Td,Nd,c,typReg,typO,typP,typH,H2O,nO) = importParam( d, typ )
 h=d(1);Ts=d(2);SD=d(3);MD=d(4);K=d(5);T=d(6);p=d(7);Kp=d(8);Ti=d(9);b=d(10);
 Td=d(11);Nd=d(12);c=d(13);typReg=d(14);typO=d(15);typP=d(16);typH=d(17);H2O=d(18);nO=d(19);
endfunction


//// make ##################################################################################
function (wB,yB,uB,kB)		    =	makeBazowe	( K , T , W=1 )
	wB	=	1/T;
	yB	=	abs(W) ; % deklaracja jest bez 3-go parametru - i chyba lepiej;
	uB	=	yB/K/T;
	kB	=	1/K/T;
endfunction
function (sOL,Fs,Cs,Os,Ps,Hs,d) =	makeSys(b2,b1,a2,a1,h,Ts,SD,MD,p,Kp,Ti,b,c,Td,Nd,uMax,typReg,typO,typP,typH,H2O,LO,MO,nO,Awup,T)
//	make (FFd,Cd,Fs,Cs,Os,Ps,Hs,d)	=	makeSysOtw(Ts,SD,MD,p,Kp,Ti,b,c,Td,Nd,typReg,typO,typP,typH,H2O,LO,MO,nO)
//
 s	=	tf([1,0],1);  
 if ~SD ; Ts=h; end

 switch typReg
	case 1	;	Cs	=	tf(Kp,1);		Fs	=	tf(1,1);
	case 2	;	Cs	=	Kp*(1+1/s/Ti);	Fs	=	tf(1,1);				
	case 3	;	Cs	=	Kp*(1+1/s/Ti);	Fs	=	1/(1+s*Ti);				
	case 4	;	Cs	=	Kp*(1+1/s/Ti);	Fs	=	(1+b*s*Ti)/(1+s*Ti);	
	case 5	;	Cs	=  Kp*(1 + 1/s/Ti +	  s*Td/(1+s*Td/Nd)) ;			
				Fs	= minreal(Kp*(b + 1/s/Ti + c*s*Td/(1+s*Td/Nd))/Cs); 
	otherwise;	Cs	=	tf(Kp,1);		Fs	=	tf(1,1);				
 end
 switch typO
 //UWAGA: próbna zmiana O1 na pojedyncze zero- ciekawe ale niemożliwe dla PID
	case 1	;	d=0 ;	Os	=	tf(1,1);
	//case 1	;	d=0 ;	Os	=	tf([-1,1],[1e-2,1]);
//------------------------------------------------	
	case 2	;	d=1 ;	Os	=	tf(1,1); 
	case 3	;	d=0 ;	Os	=	tf([1,-6,12],[1,6,12]); % Pade2
	
	
	case 4	;	d=0 ;	%Os =	tf([-1,2],[1,2]); %Pade1 
	// zamiast Pade1 : pade2(T/2)*Bessel2(T/2)	(wyższe rzędy mogą dać niestabilne rozwiązania)
				numop=[12 , -144 ,	576];
				denop=[ 1	 18	  132	432	  576];
				Os =  tf(numop,denop)	;
	
	case 5	;	d=0.5;	Os	=	tf(1,[0.5 1]);
	case 6	;	d=0 ;	Os	=	1/(1+s/nO)^nO;// minreal(1/(1+s/nO)^nO);
    case 7  ;   d=0 ;   Os  =   tf([b1,1],[a1,1]);
        if ~a1&b1 ; 
           dialog('Stopień wielomianu w liczniku nie może być wyższy niż w mianowniku'); 
        end
    case 8  ;   d=0 ;   Os  =   tf([b2,b1,1],[a2,a1,1]); 
        if ~a2&b2|~a2&~a1&b1
           dialog('Stopień wielomianu w liczniku nie może być wyższy niż w mianowniku'); 
        end
	case 9	;	d=0 ;	Os	=	tf( LO , MO );
        if length(LO)>length(MO)
           dialog('Stopień wielomianu w liczniku nie może być wyższy niż w mianowniku'); 
        end
	otherwise;	d=0 ;	Os	=	tf(1,1);
 end
 switch typP
	case 1	;	Ps	=	tf( 1 , [1 , 0 ]); %K/s;  
	case 2	;	Ps	=	tf( 1 , [1 , -p]);
//### !!!! 	
	otherwise;	Ps	=	tf(T,[1,-p,0]);
//##### !!!!	
	
 end
switch typH
	case 1	;	Hs	=	tf(1e-12,1);
	case 2	;	Hs	=	tf(1,1);
	otherwise;	Hs	=	tf(1,1);
 end
 if (H2O==1) ;	(Hs,Os) = deal(Os,Hs);	end;
 
	 tol = 1e-12;//1e-9;
//########	
	
// wszystko dyskretnie, porzucam całkowicie ciągłe	
// na razie model ciągły spróbuję zrobić z modelem zoh obiektu
// Ts=2/19, opóźnienie T' bloku O zmniejszone w proporcji T'=18/19.T
// zamiast tego zostawiam tustina, ale ale przesuwam wykresy o Ts/2
// dopuszczam tustina dla Cd, choć	daje oscylacje dla PID i Tf/Ts<0.5

	TS=Ts;	
	if SD==false ; Ts=h; end
	
	nd = floor(d/Ts);
	m = rem(d/Ts,1);
	Od= ss(0,1,m,1-m,Ts);

	C=c2d(Cs,Ts,mdStr(MD)); F=c2d(Fs,Ts,mdStr(MD)); 
	P=c2d(Ps,Ts,mdStr(MD));
	O=c2d(Os,Ts,mdStr(MD)); H=c2d(Hs,Ts,mdStr(MD));
	if (H2O==true)
		 H=H*Od;
	else
		O=O*Od;
	end
	
if (typReg>1) & Awup & (uMax<inf)
	Diff= ss(0,1,-1,1,Ts); // przyrost zmiennej dv zamiast v 
	C	= C*Diff;	
end


	// ------[____ W______	,_____	Z____ ,___ N__ ,_____U____]
	// stf= [	0		,	-P*H		,	H	,	O*P*H	   //y
			  // 0		,	-P		,	0	,	O*P		  //y"	
			  // 0		,	0		,	0	,	O		  //u'
			  // F*C	, P*H*C			,	H*C ,	-C*O*P*H ]; //v lub dv (wewnętrzne	regulatora)

	 stW = [ tf(0,1,Ts) ;	0	;	0	;	F*C		];
	 stZ = [ -P*H		;	-P	;	0	;  P*H*C	];
	 stN = [  H			;	0	;	0	;	H*C		];
	 stU = [ O*P*H		;	O*P ;	O	; -C*O*P*H	]; 

	sTf = [stW , stZ ];
	sTf = [sTf , stN ];
	sTf = [sTf , stU ];
//	sOL = minreal(ss(sTf),tol);
sOL = minreal(ss(sTf),tol);


endfunction
function (t,u,y)                =   make_tuy(sOL,uMax,uMin,d,typReg,ORA,typO,AW,tW,W,AZ,tZ0,tZ,Z,AN,UN,nSigma,seed,tMax,pgB,pgR,h,Awup,SD)
//

tic

    TS = sOL.Ts; 

    nd =  floor(d/TS)+1;  // dodane +1;11-05-2020
    h=h;             // zmiana 11-05-2020
    h=TS; // na próbę 2020-05-16
    dt=1e-6; //zmiana z 1e-6; //czy to w ogóle konieczne? TAK 

//dt=TS; // na próbe, ale lepiej zdyskretyzować  czasy tW, tZ, ??? 2020-05-16

	if (AW==false);		W=0;  tZ0=0; end
	if (AZ==false);		Z=0;  end
	tZ0 = max(0,min(tZ0,tMax));
	if (tW>tMax);		W=W*tMax/tW ; tW=tMax; end
	if (tZ>(tMax-tZ0)); Z=Z*(tMax-tZ0)/tZ; tZ=tMax-tZ0; end 
	
	tw	=	[ -3*TS ,		0	, tW+dt		,	tMax+3*TS	]; //-tMax/50,-100*eps
	w	=	[	0	,		0	,  W		,	W			];
	tz	=	[ -3*TS ,	tZ0	, tZ0+tZ+2*dt	,	tMax+3*TS	]; //-tMax/50, tZ0-100*eps
	z	=	[	0	,		0	,  Z		    ,	Z			];	
	twz =	unique([tw,tz]);
	wz	=	[interp1(tw,w,twz)',interp1(tz,z,twz)'];%'%
//######
	td	= (0 :	h : tMax+h);	Ltd=length(td);
//	tD	= (0 : TS : tMax);	LtD=length(tD);   2020-05-16 usuwam tD
//LtD=Ltd;	
	dwz	 = interp1(twz,wz,td);
	
	rand('seed',seed);randn('seed',seed);
	if (AN==true)	//active noise
		if (UN==true) //uniformely distr.noise
		  n = nSigma*2*sqrt(3)*rand(size(td));
		else
		  n = nSigma*randn(size(td));
		end
		n=n-mean(n);
	else
		n = zeros(size(td));
	end
	U =zeros(size(td));        if typReg==0;    U(1:nd)=uMin; end //1:round(1/h)
	dwzn = [dwz,n'];//'
	dwznU = [dwz,n',U'];
	dwznU = [dwznU	;  zeros(2*nd+20,4)]; % wektory 
if SD
   nd=nd+1;
end
    sys = augstate(sOL);
    [A,B,C,D,Ts] = ssdata(sys);
    nX = size(A)(1);
    X0 = zeros(nX,1);
    
    Y  = zeros(Ltd,size(D)(1));  //if typReg==0; Y(1,3:4)=uMin; end //:round(1/h)
    
    if (typReg>1) & Awup & (ORA) //(typReg>1)&((nd>0)|(uMax<1e6))	 // dv zamiast v
        v = 0;
        for i = 1:Ltd-1
        
            y = dlsim(A,B,C,D,[dwznU(i:i+2,:)],Ts,X0);// bieżąca odpowiedź y,y",u',v
            dv = y(3,4); // wyjście	 dv regulatora
            v  = min(uMax,max(uMin,v+dv)); //wyjscie u po korekcji ( v=Lim(v+dv))

            dwznU(nd+i:nd+i+2,4) = v; // zapis u opóźniony o nd+1
            
            y(3,4)	= v; 
            Y(i+1,:)= y(3,:);		  // wyniki bieżące do y,y",u',u
            X0		= y(3,5:end);	  // stan dla następnego kroku	   
        end
    else
        for i = 1:Ltd-1
            y = dlsim(A,B,C,D,[dwznU(i:i+2,:)],Ts,X0);// bieżąca odpowiedź y,y",u',v
        //v = y(:,4); // wyjście v lub dv regulatora
            v=y(3,4);
//###### w tm miejscu histereza lub zwykłe ograniczenie!!
            if typReg==0
                us=dwznU(i,4);
                v=v>uMax?uMax:v<-uMax?uMin:us;
            elseif ORA     
                v  = min(uMax,max(uMin,v)); //wyjscie u po korekcji dla P
            end    
//#############
            dwznU(nd+i:nd+i+2,4) = v; // zapis u opóźniony o nd+1
            
            y(3,4)	= v;
            Y(i+1,:)= y(3,:);			   // wyniki bieżące do y,y",u',u
            X0		= y(3,5:end);		   // stan dla następnego kroku 
        end
    end 
	ny = mod( pgB-1, 2)+1; 
	if (pgR<2)//|(typO==1); //dodano |(typO==1) 11-05-2020 , usunięto 2-04-2024
        nu=4; 
    else
        nu=3;
    end
	y = Y(:,ny)';%'%
	u = Y(:,nu)';%'%
      
 if typReg==0; u=[u(2:end),u(end)];  end    

	w = dwzn(:,1)';%'%
	t = td;
	z = dwzn(:,2)';%'%	
	n = dwzn(:,3)';%'%
    
 if SD & pgR==3 ;   u = [0,u] ; u=u(1:end-1) ; end //2020-05-16
 
	u = pgR==3?u-z:u;
	y = pgB==3?w-y:y;

	if(pgB==4); y=y+n; end ; //'s
// y(2)=y(3)/2;   
   // if (~SD)&(AW) ; t(2) = t(2)-h ; end // dodane 11-05-2020
    
  // t=t-h/2; //t(2)=0; //t(2)=h/2; 
   // t(1)=0;
   // t(2)=0; u(2)=0;
 //  t=[tMax/50,t]; u=[0,u]; y=[0,y];
   //t(2)=0; t(1)=-h/100;   

if AW & W & ( (pgR ~= 3)|~SD )
 if tW >= 2* h ;  
    u(2)=(u(1)+u(3))/2;   
 else
   u(2)=(u(2)+u(3))/2;
    u(1)=u(1); 
 end
end 
    
 if true;   y(2)=(y(1)+y(3))/2; end
 
//toc
endfunction
function (w,Ujw,Yjw)            =   make_wUY(wMin,wMax,sOL,Fs,Cs,Os,Ps,Hs,d,T,K,H2O ,SD, pgB, pgR, typB)

//
	w   =   logspace(log10(wMin),log10(wMax),2000);
    w   =   unique([w,logspace(log10(1/2),log10(4),2000)]);    
	lw  =   length(w);
//[w(1),w(end)]	
//    typB=   typB + nB;      // nB : warianty Bodego
    Ts  =   sOL.Ts;
	mdStr = 'tzfm';
MD=1; //tylko tustin    
	F=nyquistZ(SD?c2d(Fs,Ts,mdStr(MD)):Fs,w);
	C=nyquistZ(SD?c2d(Cs,Ts,mdStr(MD)):Cs,w);
	P=nyquistZ(Ps,w);
	O=nyquistZ(Os,w);
	H=nyquistZ(Hs,w);
	if (H2O==true);H=H.*exp(-j*w*d);else;O=O.*exp(-j*w*d);end
	OL=C.*O.*P.*H;
//#########  
//SD  
if SD; OL=OL.*exp(-j*w*Ts); end    
//#########

	S = 1./(OL+1);

	switch typB
	case [1 , 4 , 7] //wymuszeniowe ?/W
		switch pgB	//pgB = 1:y		 2:y'		   3: e=w-y		 4:y"
			case	1	;	Y	= F.*OL.*S;
			case	3	;	Y	= S;
			otherwise	;	Y	= F.*C.*O.*P.*S;
		end
		switch pgR // pgR = 1:u/Kp	 2:u'/Kp	   3:(u'-z)/Kp
			case	1	;	U	=	F.*C.*S;
			otherwise	;	U	=	F.*C.*O.*S;
		end 
	case [2 , 5 , 8] //zakłóceniowe ?/Z
		switch pgB //pgB = 1:y		2:y'		  3: e=w-y		4:y"
			case	1	;	Y	= -P.*H.*S;
			case	3	;	Y	=  P.*H.*S;
			otherwise	;	Y	= -P.*S;
		end
		switch pgR	// pgR = 1:u/Kp	  2:u'/Kp		3:(u'-z)/Kp
			case	1	;	U	=	P.*H.*C.*S;
			case	3	;	U	=	OL.*S-1;
			otherwise	;	U	=	OL.*S;
		end 
		Y = Y*K*T;	U = U*K*T;
	case [3 , 6 , 9] //zakłóceniowe szumowe ?/N
		switch pgB //pgB = 1:y		2:y'		  3: e=w-y		4:y"
			case 1	;	Y	= H.*S;
			case 2	;	Y	= -OL.*S;
			case 3	;	Y	= -H.*S;
			case 4	;	Y	= S;
			otherwise;	Y	= -OL.*S;
		end
		switch pgR // pgR = 1:u/Kp	 2:u'/Kp	   3:(u'-z)/Kp
			case 1	;	U	=	-H.*C.*S;
			otherwise;	U	=	-H.*C.*O.*S;
		end 
	end
    //ww  = w;
    Ujw = U;
    Yjw = Y;
 
endfunction
function (GM,PM,DM,Ms,wpi,ws,w1,wL,Ljw) =   makeMargins(Cs,Os,Ps,Hs,d,h,Ts,T,typH,typO,SD)

	mdStr = 'tzfm';
 	wL	=	unique([logspace(log10(1/20),log10(10),2000),logspace(log10(10),log10(1000),1000)]);
    MD=1;
    if typO==1; d=d+h*pi/2; end;
    
    
	C=nyquistZ(SD?c2d(Cs,Ts,mdStr(MD)):Cs,wL);
	P=nyquistZ(Ps,wL);
	O=nyquistZ(Os,wL).*exp(-j*wL*d);
	H=nyquistZ(Hs,wL);
	OL=typH==1? C.*O.*P : C.*O.*P.*H;

    if SD; OL=OL.*exp(-j*wL*Ts); end    
    
	Z = OL;
    
// ix = find(angle(Z)>0,1);
// Gpi = abs(Z(ix))  ;
// stab = Gpi<1;   
// %angle(Z)(1)   
	ix=find(abs(Z)<=1,1);
	fi=angle(Z(ix));
//	stab = stab & (fi<0);
stab = fi<0;
	w1=wL(ix);	
	PM=pi+fi;
	DM=PM/w1*T;
	PM=PM*180/pi;
	GM=1;
	if stab
		is=find(abs(Z+1)==min(abs(Z+1)),1);
		Zs=Z(is); ws=wL(is);
		Ms=1./min(abs(Z+1));
        Zx=Z(ix:end);   wLx=wL(ix:end);%??????????????????
		ix=find(sin(angle(Zx))>=eps,1);
		if isempty(ix)
			GM=inf; wpi=inf;
		   else
			GM=1/abs(Zx(ix)); 
            wpi=wLx(ix);
		end 
	else
      (ws,wpi,Ms) = deal(nan);  
 (GM,DM,PM)=deal(nan);     
    end     
    
    Ljw = Z;
endfunction

//// Czasowe ################################################################################
function drawCzasowe(v,t,SkU);//,t,tp,tk,SkU)
    global NM 
    global NG
    if isempty(t); cancel ; end

    KA=v.KA;
     tp=v.tp; tk=v.tk ; 
    tol=v.tol; NTol=v.NTol;  u=v.u; y=v.y; AW=v.AW; W=v.W; tW=v.tW; AZ=v.AZ; 
    Z=v.Z; tZ=v.tZ; tZ0=v.tZ0;
    tMax=v.tMax; T=v.T; K=v.K;  typReg=v.typReg; pgB=v.pgB; pgR=v.pgR;
    typB=v.typB; typO=v.typO; ZoS=v.ZoS; PWW=v.PWW; NL=v.NL; NU=v.NU; NY=v.NY; NW=v.NW;
    NZ=v.NZ; SD=v.SD; Ts=v.Ts ;id=v.id;

    setfigstyle(v.fontSize,v.B,v.I);
    opt = NM?'nomargin':'margin'; 
    plotoption(opt);
    opt = NG?'noxygrid':'xygrid';
    plotoption(opt);
// stare zmienne uo,yo (ślady) ; ZS - przerzutnik Zostaw Ślad
// SU - skala U
    persistent Tos to yo uo ZS pgBs pgRs SDs // SUs NYs NUs
    
    if isempty(ZS); ZS=0;	NYs=NY; NUs=NU; end ; % inicjacja przerzutnika
    if ~ZS&ZoS; Tos=v.T; (to,yo,uo) = deal( t, y, u); (pgBs,pgRs,SDs)=deal(pgB,pgR,SD);ZS=1; end; % zapamiętanie przebiegów, ustawienie ZS
     if ~ZoS&ZS; ZS=0 ; end;  % reset ZS
//korekcje parametrów wymuszeń 
	tZ0 = max(0,min(tZ0,tMax));
	if (AW==false);		W=0;  tZ0=0; end
	if (AZ==false);		Z=0;  tZ0=tMax; end
	if (tW>tMax);		W=W*tMax/tW ; tW=tMax; end
	if (tZ>(tMax-tZ0)); Z=Z*(tMax-tZ0)/tZ; tZ=tMax-tZ0; end 
	
//######## obliczenia wskaźników  ###############	
//linie tolerancji dla czasów ustalania się (xUst=średnia z 10% końcowych próbek)
//procenty liczone od abs(max(x-xUst)) 
    tUst=v.tMax;
	uB	=1/K/T;
	xB	= SkU? uB : 1;
	pgStr=SkU? pgRstr(pgR):pgBstr(pgB);
	x	= SkU? u : y;

	ix=find(t>=0.9*tMax);
	xUst=mean(x(ix));
	if (abs(xUst)<=1e-9); xUst=0; end
	e	= x - xUst; 
	Tol = tol*(max(abs(e)))/100;
    
    tUst= t(find(abs(e)>Tol,1,'last'));
    if isempty(tUst); tUst=t(1); end;
    if (tUst>=0.99*tMax); tUst=inf; end;
    Mx	=	max(abs(x)) ;
    ix	=  find(abs(x)==Mx,1);
    tPk =	t(ix);
    Pk	=	x(ix); 
    try
        ePk = max(abs(e));
        ix1 = find(abs(e)==ePk,1);
        tePk=t(ix1);
        e2	= e(ix1:end);
        e2	= e2*sign(e2(1));
        ePk2= min(e2);
        ix2 = find(e2==ePk2,1);
        ovs = -100*(ePk2/ePk);
        tePk2= t(ix1+ix2-1);
    catch
        ovs=nan;
    end
    try
        ax = abs(x);
        IA=trapz(t, ax)*T*xB ;
        ITA=trapz(t,t.* ax)*T^2*xB ;
        ISTA=trapz(t,t.*t.*ax)*T^3*xB;
    catch
        (IA,ITA,ISTA)=deal(0); 
    end
// #################### koniec obliczeń wskaźników #######################
// markery narożnikowe , ustalenie  marginesów górnego i dolnego  
    altscale(false)
    tickformat(2,'%k');
    
    kyB=v.kyB; yB0=v.yB0;   //yB=NY?[0,W]:y; 
    minyB = min(NY?0:min(y), NW?0:min(W,0));
    maxyB = max(NY?1:max(y), NW?0:max(W,0));
    mmB   = max(100*eps,(maxyB-minyB));
    
     //yB0=yB0+(maxyB+minyB)/mmB;

    // dyB1 = -0.0*kyB*mmB + mmB*yB0*1;
    // dyB2 = +0.1*kyB*mmB + mmB*yB0*1;
    
    scale([min(t),max(t), (yB0*mmB+minyB)*kyB    , (yB0*mmB+maxyB)*kyB]);  
    
 sc = scale; if length(sc)==2 ; sc=[sc,-eps*1e6,eps*1e6]; end;
 
    t0=sc(1); tm=sc(2) ; ts=(t0*0.45+tm*0.55);
    y0=sc(3); ym=sc(4);
    stylBO = ~v.NY ? plotset(stylC, MarkerFaceColor = 'Blue' ):...
                     plotset(stylC, MarkerEdgeColor = 'Blue' );
    stylRO = ~v.NU ? plotset(stylC, MarkerFaceColor = 'Red'  ):...
                     plotset(stylC, MarkerEdgeColor = 'Red'  );                    
    plot(ts,ym, stylO  , id = idKA );                    
    plot(t0,ym, stylBO , id = idBlueMark);
    plot(tm,ym, stylRO , id = idRedMark);
    plot(tm,y0, stylC , id = idtMax) ;
    
    minyR = min(NU?0:min(u), NZ?0:min(Z,0))/v.K/v.T;
    maxyR = max(NU?0:max(u), NZ?0:max(Z,0))/v.K/v.T;    

    kyR=v.kyR; yR0=v.yR0; 
    mmR = max(100*eps,maxyR-minyR);
    dyR1 = -0.1*kyR*mmR + mmR*v.yR0*.1;
    dyR2 = +0.1*kyR*mmR + mmR*v.yR0*.1;
// skalowanie osi czasu ; opis='t(s)' lub t(ms);
	if tMax*T<2.5
     	scalefactor([1000*T,1 ]);
		opis='t(ms)';
	else
		scalefactor([T, 1]);
		opis='t(s)';
	end;
// tylko niektóre wykresy będą schodkowe 
	// przebieg niebieski: pgB = 1:y	  2:y'	   3:e		 4: y"
	// przebieg czerwony : pgR = 1:u/Kp	  2:u'/Kp  3:(u'-z)/Kp
	 SDB = SD  & ((pgB ==1)|(pgB==3)) ; 
     SDR = ((typReg==0)&(pgR<2))|SD & ((pgR==1)|(typO<3)&(pgR==2) );// 2020-05-16     
	 SDBs= SDs & ((pgBs==1)|(pgB==3)) ; SDRs= ((typReg==0)&(pgRs<3))|SDs&( pgRs==1 );
// ślady starych wykresów uo,yo
	if ZS	
		if ~NY; plot(to*Tos/T,yo,SDBs?'sh(88f)':'h(aaf)'); end;	
		if ~NU;
           altscale(true)
           plot(to*Tos/T,uo/v.K/v.T,SDRs?'sh(f88)':'h(faa)');
           altscale(false)
        end;
	end
//linie sygnałów wejsciowych w,z  
	tw = [0, tW , tMax];
	w  = [0,  W ,  W  ];
	tz = [0, tZ0 , tZ0+tZ , tMax];
	z  = [0, 0	 , Z	  ,	 Z	];
	if ~NW; plot(tw, w , 'c'		); end
	if ~NZ;
        altscale(true);
        scale([min(t),max(t), minyR+dyR1, maxyR+dyR2]);
        plot(tz, z/v.K/v.T , 'm'		);
        altscale(false);
    end
%######################################## 
// główne linie wykresów u,y 
    inty = '1'; intu='1'; // 2020-05-16 rodzzaj interpolacji
	cy=SkU?'b':'B'; if SDB; cy=[cy,'s']; inty='<'; end
	cu=SkU?'R':'r'; if SDR; cu=[cu,'s']; intu='<'; end
// osie zerowe
    tp = min(tp,v.tMax);
    if PWW<2; tp=0; end
    yBp  = interp1( t , y , tp , inty ); //2020-05-16
    yRp  = interp1( t , u , tp , intu )/K/T; //2020-05-16
    if tp<=0; yBp = 0; yRp=0; end;
    if SkU
        if ~NY&(PWW<2) ; line( [0,1] , yBp  , '!b' ); end 
        altscale(true)
        if ~NU; line( [0,1] , yRp  , '!r' ) ; end  
        altscale(false)
    else 
        if ~NU&(PWW<2) ;  
             altscale(true)
             line( [0,1] , yRp  , '!r' )   
             altscale(false)
        end   
        if ~NY; line( [0,1] , yBp  , '!b' ); end 
    end  
    if (~NY)&(~SkU) 
        line( [1,0] , tp   , '!b' );
    elseif ~NU
        line( [1,0] , tp    , '!r' );
    end
// strefa tolerancji, linie dla ovs,Pk
    if PWW==-3
     try                                            //2020-05-15
        altscale(SkU? true : false);
        plot([0,tMax,tMax,0],(xUst+[-1,-1,1,1] * Tol)*xB, 'fh(bfb)', idTolT ) ; //'fh(dfd)'
        activeregion(0,tMax,(xUst-Tol)*xB,(xUst+Tol)*xB, idTolT);
        plot([tePk,tePk]  ,[xUst,x(ix1)]*xB,'W');plot([tePk,tePk],[xUst,x(ix1)]*xB,'g');
        plot([tePk2,tePk2],[xUst,x(ix1+ix2)]*xB,'g' )
        line([0,1],xUst*xB,'k:',idTolT)
        altscale(false) 
      end    
    end 
    if PWW==-2
        altscale(SkU? true : false)
        plot([tPk,tPk],[0,Pk*xB],'g')
        altscale(false)    
    end
// #######     główne linie wykresów   
    inty = '1'; intu='1'; // 2020-05-16 rodzzaj interpolacji
	cy=SkU?'b':'B'; if SDB; cy=[cy,'s']; inty='<'; end
	cu=SkU?'R':'r'; if SDR; cu=[cu,'s']; intu='<'; end
    try 
        if PWW==-1 // całkowe - niezbyt dobre dla SD
           if SkU;
                altscale(true);
                plot([0,t,t(end)],[0,u/K/T,0],'fh(fdd)');
                altscale(false)
           else
                plot([0,t,t(end)],[0,y,0],'fh(ddf)');
           end
           
        end
        if ~NU; 
            altscale(true);
            
            scale([min(t),max(t), (yR0*mmR+minyR)*kyR    , (yR0*mmR+maxyR)*kyR]);
            //line ( [0,1] , 0 , '!r')
            
            if SkU
              plot(t , u./v.K./v.T , cu , id=idUT)
            else
              plot(t , u./v.K./v.T , cu)       
            end//, id=idUW); 
        end
        altscale(false)    
        if ~NY; plot(t , y , cy,id=idYT) ; end  //,id=idYW); end		
    end 
%#######################################
//zmienialne parametry sygnałów wejściowych w,z
    if ~PWW
        if ~NW;		
            plot(tW	,W,{Marker='<>',MarkerEdgeColor='cyan',Size=10}, id=idW); 
        end
        if ~NZ;
            altscale(true)
            if  AW ;  
                plot(tZ0	, 0 ,'mo' , idZ0); 
            end
            plot(tZ0+tZ , Z/v.K/v.T , {Marker='<>',MarkerEdgeColor='magenta',Size=10}  , id=idZ );
            altscale(false)
        end
    end 
    switch id
        case  idZ0
            title([spf('tz0≈%-4s',tZ0*T),'s'])
        case idW
            title([spf('Δw≈%5s',W),spf(' Δt≈%5s',tW*T),'s   ',spf('Δw/Δt≈%6s/s',W/(tW)/T)])
        case idZ
            title([spf('Δz≈%s',Z*uB), spf('   Δt≈%ss',tZ*T), spf('   Δz/Δt≈%s/s',Z*uB/tZ/T)])		  
        otherwise   //################################### kursory x--o
            tk  =   max(0,min(tk,v.tMax));    //2020-05-15
            str_x2  =   '';
            if PWW==-3; tk=tUst; end
            if PWW==-2; tk= tPk ; end
            if v.KW & (~v.NY | ~v.NU) & ((PWW>0)|(PWW<-1))
                yRk = interp1(t,u,tk,intu)/v.K/v.T; 
                yBk = interp1(t, y , tk, inty);
                str_x2 = [sprintf('   (%sₓ=', SkU?pgBstr(pgB):pgRstr(pgR)), spf('%s)',SkU?yBk:yRk)];
                if NY ; 
                    str_x2=''; 
                else 
                    kursor(KA,tp,tk,yBp,yBk,Color=SkU?'blue':'Blue', id=~SkU&(PWW>0)?idTime:[]) 
                    if (~SkU)&(PWW>0) ; plot ( tp , yBp , 'ob' ); end
                end 
                if v.NU ; 
                    str_x2='';
                else
                    altscale(true) 
                    if SkU&(PWW>0) ; plot ( tp , yRp , 'or' ); end
                    kursor(KA,tp?tp:tm,tk,yRp,yRk,Color=SkU?'Red':'red', id=SkU&(PWW>0)?idTime:[]) 
                    altscale(false)
                end 
            end 
            switch PWW
                case [ 1 , 2 ]		
                    intx = SkU? intu : inty; 
                    xk = interp1(t,x,tk, intx ); //2020-05-16
                    xp = interp1(t,x,tp, intx ); // 2020-05016
                    if PWW>1 //(tp >=0);
                        xp = interp1(t,x,tp, intx); // 2020-05016
                        space=(xk>xp)?'':' ';
                        title(['Δ', pgStr,spf(' ≈ %s   Δ',(xk-xp)*xB), ...
                        pgStr,spf('/Δt≈%s/s', (xk-xp)*xB/(tk-tp)/T ),spf('    Δtₓ₋ₒ≈%ss',(tk-tp)*T), ...
                        spf('  (%sHz)', abs(1/(tk-tp)/T) ) ] )
                    else
                        space=(xk>=0)?'':' ';
                        title([ pgStr, spf('ₓ  ≈ %s',xk*xB), spf('   tₓ≈%ss  ',tk*T),str_x2])
                    end
                case -2			// x_ust, xPk, tPk
                    title([pgStr,spf('ₑₓ  ≈ %s  ',Pk*xB),spf(' tₑₓ  ≈ %ss  ',tPk*T),pgStr,spf('_≈%s',xUst*xB)])
                case -3			// ovs, tol, t_ust
                    title([sprintf('%s :  ovs≈%3.1f%%   tolₓ≈±%3.1f%%  ',pgStr,ovs,tol),spf('tₓ≈%ss',tUst*T)]);
                case -1			// całkowe
                    title([spf([' IA',pgStr,' ≈ %s  '],IA),spf(['   ITA',pgStr,' ≈ %s'],ITA),spf(['   ISTA',pgStr,' ≈ %s'],ISTA) ]); 
                otherwise
                    title('Odpowiedzi czasowe');
            end 
    end		
    //opisy osi i legenda 
 	label ( opis, ~NY?pgBstr(pgB):NW?' ':'w', ~NU?pgRstr(pgR):NZ?' ':'z');   
	if ~NL;
        legend( [NW?'':'w\n',NY?'':pgBstr(pgB),NY?'':'\n',...
				 NZ?'':'z\n',NU?'':pgRstr(pgR)],...
				 [NW?'':'c',NY?'':SkU?'b':'B',NZ?'':'m',NU?'':SkU?'R':'r']);
	end

endfunction
function (tMax,KW,KA,NY,NU,tp,tk,NTol,PWW,kyB,yB0,kyR,yR0,wp) = dragCzasowe(v, x,  m, id)
KW=v.KW; KA=v.KA; tp=v.tp; tk=v.tk; NY=v.NY; NU=v.NU; tMax = v.tMax;
NTol=v.NTol; PWW=v.PWW; kyB=v.kyB; kyR=v.kyR; yB0=v.yB0;; yR0=v.yR0;   wp=v.wp ; 

switch id
    case idBlueMark ; 
        if  m
            (kyB, yB0) = deal(1,0) ;
        else
            NY = not(NY);
        end 
    case idRedMark 
        if  m
            (kyR, yR0) = deal(1,0);
        else
            NU = not(NU);
        end    // case idtMax;  if m; tMax= dialogX( v.tMax , v.T,1e-3, str = 'tMax = '); end   
    case idKA 
      //if (m & (PWW ~=0)) ;  wypis_t(v); end
      if ~m 
       (KW,KA,tp,PWW,NTol,wp) =  deal(~PWW , 0 , tp , ~PWW , 1,0);
      end  
    case [idTime, idYT,idUT];
        if m & PWW & ~KA  ; wypis_t(v); end    
        switch PWW
            case [1,2]
                if m & KA
                    tk = dialogX(tk,v.T,0,tMax, str='Pozycja kursora tₓ = %6ss'); 
                    v.tk=tk;
                    KA = false;    
                elseif KA
                    KA=false;
                elseif ~m 
                   KA=true;
                end    
            case [-1,-2,-3]
                KA = false;
        end    
    otherwise    
        KA = false; 
        if m ; disp('-'); end
       
end
endfunction
function		str		= pgBstr(pg)
switch pg
	case 1	;	str = 'y';
	case 2	;	str = 'y"';
	case 3	;	str = 'e';
	case 4	;	str = 'y''';
	otherwise;	str = '??';
end
endfunction
function		str		= pgRstr(pg)
switch pg
	case 1	;	str = 'u';
	case 2	;	str = 'u''';
	case 3	;	str = 'u"';
	otherwise;	str = '??';
end
endfunction
function wypis_t(v)
KA=v.KA; PWW=v.PWW;tp=v.tp; tk=v.tk; t=v.t; u=v.u; y=v.y; T=v.T; 
//uB=v.uB ; 
uB=1/v.K/v.T;
pgB=v.pgB; pgR=v.pgR; SkU=v.SkU; tMax=v.tMax; tol=v.tol;

m=true;	msg='?x?';
if m
	pgStr=SkU? pgRstr(pgR):pgBstr(pgB);
	x  = SkU? u : y;
	xB = SkU? uB : 1;
	xk = interp1(t,x,tk,'1');
	xp = interp1(t,x,tp,'1');

	xB	= SkU? uB : 1;
	pgStr=SkU? pgRstr(pgR):pgBstr(pgB);
	x	= SkU? u : y;

	ix=find(t>=0.9*tMax);
	xUst=mean(x(ix));
	if (abs(xUst)<=1e-9); xUst=0; end
	e	= x - xUst; 
	Tol = tol*(max(abs(e)))/100;
		tUst= t(find(abs(e)>Tol,1,'last'));
		if isempty(tUst); tUst=t(1); end;
		if (tUst>=0.99*tMax); tUst=inf; end;
		Mx	=	max(abs(x)) ;
		ix	=  find(abs(x)==Mx,1);
		tPk =	t(ix);
		Pk	=	x(ix); 
		try
			ePk = max(abs(e));
			ix1 = find(abs(e)==ePk,1);
			tePk=t(ix1);
			e2	= e(ix1:end);
			e2	= e2*sign(e2(1));
			ePk2= min(e2);
			ix2 = find(e2==ePk2,1);
			ovs = -100*(ePk2/ePk);
			tePk2= t(ix1+ix2);
		catch
			ovs=nan;
		end
		try
			ax = abs(x);
			IA=trapz(t, ax) ;
			ITA=trapz(t,t.* ax) ;
			ISTA=trapz(t,t.*t.*ax);
		catch
			(IA,ITA,ISTA)=deal(0); 
		end
	
	switch PWW
		case 2
		  msg=sprintf('Δ%s=%+#10.3n	  Δt=%+#10.3n	Δ/Δt=%+#10.3n',pgStr,(xk-xp)*xB , (tk-tp)*T ,(xk-xp)*xB/(tk-tp)/T );
		case 1
		  msg=sprintf(' %sₓ=%+#10.3n  tₓ=%-#10.3n',pgStr, xk*xB , tk*T );
		case -2			// x_ust, xPk, tPk
		  msg=sprintf('%s_=%.3f  %sₑₓ=%.3f  tₑₓ=%.2ks',pgStr,xUst*xB,pgStr,Pk*xB,tPk*T) ;
		case -3			// ovs, tol, t_ust
		  msg=sprintf('%s: ovs=%3.1f%%  tolₓ=±%3.1f%%  tₓ=%.2ks	',pgStr, ovs, tol, tUst*T);
		case -1			// całkowe
		  msg=sprintf('%s:	IA=%8.2e   ITA=%8.2e   ISTA=%8.2e', pgStr, IA, ITA , ISTA);	 
		otherwise
		  msg=' ';
	end	  
   
   disp(msg);//fprintf('\n%s',		 msg );
   NTol=true;	 
end
//KA=not(KA);     
endfunction 
function ( W  , tW )	= dragW	  (v,dx,dy,m, W, tW) //2020-05-16
 h=v.h;
	if ~m
		tW = max(h,h*round((tW+dx)/h));
	else
		W  = W+dy;
	end 
endfunction
function (W , tW )		= upW	  (v,dx,dy,m, W, tW, T ) // 2020-05-16
h=v.h;
	if ~m
		tW = max(h,h*round((tW+dx)/h));
	else
		W  = W+dy;
	end 
	if (dx==0)&(dy==0)&m
		//( W,tW )				=	dialogW(W,tW,T,0,1,m);
        W  =  dialogX(W,1,str='Wartość zmiany wymuszenia ΔW = %6s');
        tW1 =  dialogX(tW,T,h,str='Czas trwania zmiany Δt = %6ss');
        tW = h*round(tW1/h);
        if tW ~= tW1
            dialog(sprintf('Wartość czasu Δt zaokrąglono do %gs',tW  )); //2020-05-16
        end        
	     fprintf('\nΔW=%+#10.3n	 Δt=%-#10.3n', W , tW*T); 
    end
endfunction 
function (Z , tZ )		= dragZ	  (v,dx,dy,m, Z,tZ,uB) // 2020-05-16
//uB
     h=v.h;
	if ~m
		tZ = max(h,h*round((tZ+dx)/h));
	else	
    //altscale(true);
		//Z  = (Z+dy/uB);
    //altscale(false);    
        // Z
        // dy
	end 
endfunction
function (Z , tZ )		= upZ	  (v,dx,dy,m, Z,tZ,T,uB)
  h=v.h;
	if ~m
		tZ = max(h,h*((tZ+dx)/h)); // 2020-05-16
	else
        Z  = dialogX(Z,uB,str='Zmiana zakłócenia, ΔZ = %6s' );
        tZ1 = dialogX(tZ,T,0,str='Czas trwania zmiany Δt = %6ss' );
        tZ = h*round(tZ1/h); //                2020-05-16
        if tZ ~= tZ1
            dialog(sprintf('Wartość czasu Δt zaokrąglono do %gs',tZ  )); //2020-05-16
        end        
	 //(Z, tZ ) = dialogZ(Z, tZ, T, uB);
        fprintf('\nΔz=%+#10.3n	Δt=%-#10.3n', Z*uB , tZ*T);
    end    
endfunction
function (tZ0)			= dragZ0  (v,dx,tZ0)
    h = v.h;
	 tZ0 = max(0,h*floor((tZ0+dx)/h)); //2020-05-16
endfunction
function tZ0			= upZ0	  (v,dx,m,tZ0,T,tMax) //2020-05-16
    h = v.h;
//if m  
   tZ01 = m &(dx==0)?dialogX(tZ0,T,0,tMax,'tz0= '):dragZ0(v,dx,tZ0); //2020-05-16
   tZ0 = h*round(tZ01/h);
   if tZ0 ~= tZ01 ; 
    dialog(sprintf('Wartość czasu tZ0 zaokrąglono do %gs',tZ0  ));
   end
   if m ;fprintf('\n tz0=%-#10.3n ', tZ0*T); end
//end   
endfunction
function (msg,cursor,tk)= overCzasowe (v,x,m,x1,y1,id)
    //tk = (m|(v.KW==2)) ? v.tk : max(0,min(v.tMax,x));
    tk = v.tk;
    cursor = (~isempty(id)) ;
    //msg = sprintf('id=%d ',id);
    if isempty(id)
        msg = 'Shift+klik : wypis pustej linii w oknie komend';
        cursor = false;
    else    
        msg = sprintf(spf('%6ss',x1*v.T) );
        cursor = true;
    end    
    if (v.KA & v.KW & ~m);   tk = max(0,min(v.tMax,x)); end
    
    if (~isempty(id)) 
      switch id 
         case [idBlueMark]
           msg=~v.NY?'(klik) : ukryj wykres ;   (↑||↓) : zmiana skali ;   Shift+(↑||↓) : przesunięcie  ;   Shift+klik :  skale normalne' : '(klik) : pokaż wykres ';
         case [idRedMark]
           msg=~v.NU?'(klik) : ukryj wykres ;   (↑||↓) : zmiana skali ;   Shift+(↑||↓) : przesunięcie  ;   Shift+klik :  skale normalne' : '(klik) : pokaż wykres ';
        case idtMax 
          msg='(Shift+klik)  :  zmiana czasu tMax';
        case [idTime,idYT,idUT]
          cursor = true;
          if ~v.KA & v.PWW>0 
             msg='(klik) : odblokowanie kursora   ;  (←↓|↑→) :  zmiana pozycji tₓ kursora  ;  (Shift+klik) : wypis w oknie komend';
          elseif v.PWW>0  
             msg='(klik) : zablokowanie  (Shift+klik) : wprowadzenie pozycji tₓ kursora';  
          elseif v.PWW<0
             msg = '(Shift+klik) : wypis w oknie komend';
          end
        case idTolT 
          msg='(↑||↓) : zmiana szerokości strefy tolerancji' ; 
        case idKA  
            switch v.PWW
            case 0
                msg='(klik) : pokaz kursorów o--x '; 
            otherwise
                msg='(klik) : ukrycie kursorów, tₒ=0  ;  (↑||↓)  : zmiana trybu kursora x '; 
            end
        case [idW ] //2020-05-16
            msg='przeciągnij poziomo Δt;  (Shift) : przeciagnij pionowo ΔW;      (Shift+klik) : wprowadź  kolejno ΔW , Δt ';
        case [idZ ] //2020-05-16
            msg='przeciągnij poziomo Δt;     (Shift+klik) : wprowadź  kolejno ΔZ , Δt ';
        case idZ0
            msg = 'przeciągnij tZ0 poziomo    (Shift+klik)  :  wprowadź wartość tZ0';
            
      end
    // else
        // if v.KA; msg='(klik) : zablokowanie pozycji tₓ kursora '; end
    end 
   
//disp(v.KA)    
endfunction

//// Schemat ###################################################################
function drawSchemat(v,GM,DM,PM,Cs,Os,Ps,Hs,d,h,nSigma,UN,W,tW,Z,tZ,tZ0,typSch,typO,typP,typH,typReg,ORA,typN,AW,AZ,AN,LN,pgB,pgR,NY,NU,NW,NZ,Kp,Ti,b,c,Td,Nd,T,K,p,H2O,PWS,nO,SD,MD,Ts,AltN,uMax,uMin,Awup,id,m)
a1=v.a1;a2=v.a2;b1=v.b1;b2=v.b2;
//function drawSchemat(v)

global NM 
	plotoption noframe;
	if ~NM; scale equal; end 
	plotoption nomargin
	plotoption nolabel
	zB=1/K/T;
Pa=v.AltP+1;

if typO==1; d=d+h*pi/2; end;

	plot(0,-15.5,'.w'); //plot(0,-18.5,'.');
	styl0	= ' ';//'c'; 
	stylN	= LN?sprintf('fH(%x%x%x)|k',15*rand,15*rand,15*rand):'fh(ddd)|k';
	dp		=	4	 ;	// typowy przyrost pozycji(wy-we)
	jdp		=	j * dp; 
	Bp		=	12+3j;	//	blok  parametrów
	dj		=	j*imag(Bp);
	BP		=	10+8j ;  //  blok	 procesu
	BR		=	14+8j ; // blok	 regulatora
	BO		=	12+8j; // blok opóźnienia 
	BH		=	12+4j; // blok sprzężenia
	dS		=	  3;   // średnica bloku sumacyjnego
	biegun	=	p;		//	 p - jest później zajęte jako pozycja
//'s²T²-6sT+12|s²T²+6sT+12'

	if PWS; typSch=1; 
	else ; 
		if typSch>7; typP=3; end;
		if typP<3; typSch = min(7,typSch); end;
	end

	nM=1; 
	tekstM	=	{'M1','M2','M3'};
	tekstSch	=	{'Interaktywny schemat blokowy',...
				 'Regulacja prędkości kątowej ω(t)=ω(0)+Δω(t) ',...
				 'Regulacja prędkości liniowej v(t)=v(0)+Δv(t) ',...
                 'Regulacja napięcia na kondensatorze u(t)=u(0)+Δu(t)',...
				 'Regulacja prądu w obwodzie indukcyjnym i(t)=i(0)+Δi(t)',...
				 'Regulacja poziomu cieczy w zbiorniku h(t)=h(0)+Δh(t)',...
				 'Regulacja temperatury ϑ(t)=ϑ(0)+Δϑ(t)',...
				 'Regulacja położenia kątowego α(t)=α(0)+Δα(t) ',...
				 'Regulacja położenia liniowego x(t)=x(0)+Δx(t) '};
				
  opisW =	{'','Δωzad[rad/s]','Δvzad[m/s]','Δuzad[V]','Δizad[A]','Δhzad[m]','Δϑzad[K]','Δαzad[rad]','Δxzad[m]'};
  opisZ =	{'',[typP<2?'B∙Δω,':'','Δmop[Nm]'],[typP<2?'B∙Δv,':'','ΔFop[N]'],...
                [typP<2?'G∙Δu, ':'','Δiobc[A]'],['Δsem',typP<2?',R∙Δi':'',',∆u','[V]'],...
				typP<2?'Kup∙Δh,ΔQzak[m³/s]':'ΔQzak[m³/s]',typP<2?'ΔPstr[W]':'Kpc[W/K]∙Δϑot[K]',...
				'Δmop[Nm]' , 'ΔFop[N]' };
  opisU =	{'','Δmzad[Nm]','ΔFzad[N]','Δizad[A]','Δuzad[V]','ΔQzad[m³/s]','ΔPzad[W]','Δmzad[Nm]','ΔFzad[N]'};
  opisUp	=	{'','Δme[Nm]','ΔFnap[N]','Δi[A]','Δu[V]','ΔQ[m³/s]','ΔPg[W]','Δme[Nm]','ΔFnap[N]'};
  opisYp	=	{'',' Δω[rad/s]',' Δv[m/s]',' Δu[V]',' Δi[A]','Δh[m]','Δϑ[K]',' Δα[rad]',' Δx[m]'};
  opisY =	{'',' Δωh[rad/s] ',' Δvh[m/s] ',' Δuh[v] ',' Δih[A] ',' Δhh[m]',' Δϑh[K]',' Δαh[rad] ',' Δxh[m] '};
  opisO =	{'','reg.m','reg.F','reg.u','reg.i','reg.h','reg.ϑ','reg.α','reg.x'};
  opisK =	{'','Kᵥ=1/J[kgm²]','Kᵥ=1/M[kg]','Kᵥ=1/C[F]','Kᵥ=1/L[H]','Kᵥ=1/A[m²]','Kᵥ=1/Cc[J/K]','Kᵥ=1/J[kgm²]','Kᵥ=1/M[kg]'; ...
             '','a₁=J[kgm²]'  ,'a₁=M[kg]' ,'a₁=C[F]' ,'a₁=L[H]' ,'a₁=A[m²]' ,'a₁=Cc[J/K]','a₁=J[kgm²]'  ,'a₁=M[kg]'  };
  opisp =	{'','p= -B/J' ,'p=-B/M'    ,'p= -G/C','p= -R/L','p=-Kᵤ/A'    ,'p=-Kpc/Cc','p= -B/J' ,'p=-B/M' ; ...
             '','a₀=B[Ns]','a₀=B[Ns/m]','a₀=G[S]','a₀=R[Ω]','a₀=Kᵤ[m²/s]','a₀=Kpc[W/K]','a₀=B[Ns]','a₀=B[Ns/m]'};
  //opisT		=	{'','T=Ts/2+Treg+Tm+Th','T=Ts/2+Treg+Tf+Th','T=Ts/2+Treg+Tu+Th'};  
  opisT =	{'','','','','','','','',''};  
		 
  //tekstP		=	{'Kᵥ|s','Kᵥ|s - p' ,'Kᵥ|s','Kᵥ|s - p' ; '1|a₁s','1|a₁s+a₀','1|a₁s','1|a₁s+a₀'};
  
  
  tekstP		=	{'Kᵥ|s','Kᵥ|s - p','Kᵥ|(s-p)∙s' ; '1|a₁s','1|a₁s+a₀','1|(a₁s+a₀)∙s'};
  
  
  tekstPi	=	{'P₁(s)','P₂(s)','P₃(s)'};
  tekstO		=	{'1' ,...
                'e⁻ˢᵀ' ,...
				's²T²-6sT+12|s²T²+6sT+12' ,...
				'pade2(T/2)*;bessel2(T/2)',...
				'e⁻ˢᵀ′²|1+sT/2',...
				'1|(1+sT/r)ʳ' , ...	
                'b₁s+1|a₁s+1', ...
                'b₂s²+b₁s+1|a₂s²+a₁s+1', ...     
				'bᵣsʳ+..+b₀|aᵣsʳ+..+a₀'	 };
  SizeO    =    { k12*12, k12*13,k12*9,k12*10,k12*12,k12*12,k12*12,k12*10,k12*12}  ;             
  tekstOi=tekstO;//		=	{'O₁= 1','O₂(sT)=;e⁻ˢᵀ','O₃(sT)=;pade2(sT)','O₄(sT)','O₅(sT)','O₆(sT)','O₇(s)','O₈(s)','O₉(s)'};				
  tekstNwg		=	{' 3M ',' 2M ',' 1M ',' - ',' CHR ',' ZN ',' CHR2 ',' ZNs ', ' mod ',' sym ','??' } ;			
  tekstH		=	{'0' , '1' , 'L/M' }	;	
  tekstHi	=	{'0' , '1' , 'H(s)' }	;	
  tekstR	=	{'P ','PI ','IP ','PI+','PID'};	 
  wzorStd	=	{'P:    u = Kp { w - y }',...
				 'PI:   u = Kp { w - y + (w - y) / (sTi) }',...
				 'IP:   u = Kp { 0 - y + (w - y) / (sTi) }',...
				 'PI+:  u = Kp { bw - y + (w - y) / (sTi) }',...
				 'PID: u=Kp{bw-y+(w-y)/(sTi)+(cw-y)sTd/(1+sTd/N)}'};
  wzorAlt		=	{'P:  u = Kp ( w - y )',...
				 'PI:   u = Kp ( w - y ) + Ki (w - y) / s',...
				 'IP:   u = Kp ( 0 - y ) + Ki (w - y) / s',...
				 'PI+:  u = Kp ( bw - y) + Ki (w - y) / s',...
				 'PID: u=Kp(bw-y)+Ki(w-y)/s+Kd(cw-y)s/(1+sTf)'};
  wzorS2    =    '2S: u = (e>eH)? uMax : (u<-eH)? uMin : u';               
  wzor		=	 (AltN==1)|(AltN==3)? wzorAlt	: wzorStd;
  //tekstMD	=	{'(tustin)','( zoh )','( foh )'}; 

(Kp,Ti,Td,typN,typReg,wzorNast) =autoNastawy(Kp,Ti,Td,typN,typReg,typP, p, SD, Ts) ;
  
  p0 =	0;
  pw =	p0 + 2.5 +j*imag(BR/2+j*3);		dw = j*(imag(p0-pw)+dS/2);	// pozycja i długość linii sygnału w(t)		

  [PW,CW,OW,HW] = deal(0); //parametry P,C,.. niewidoczne
if PWS>0
   switch id
		case [idR,idCKp,idCTi,idCKi,idCb,idCTd,idCKd,idCNd,idCc]
		 CW = 1;
		case [idO, idOT,idOn,idOLM ]
		 OW = 1;
		case [idP, idPK, idPp]
		 PW = 1; 
		case idH;
		 HW = 1;	
   end
end 
	switch PWS
	  case [ 1 , 2 ]
		[PW,CW,OW,HW] = deal(1);
	  case -1
		[PW,CW,OW,HW] = deal(0);
	end
//if PWS<0; PW=1;OW=1;HW=1; end    
  % --------------------------------------------------
 % p =	 funkcja( p		,dp			,styl				, txt				, id , font );	//objaśnienie
 %---------------------------------------------------
 pr =	blok	( p0			,BR			, ['fw|',SD?'':'']		, ' '				   );  //ramka regulatora
  
 
  blok	( pr-3		,-5-2.5j		, styl0		, typReg>0?tekstR{typReg}:'2s  ' , idR,fontset(Bold=true)	    );  //zmiana typu reg.
  blok  ( pr        ,-3-2.5j        , styl0     , ''                                        , idRLim    ); // ogranicznik u  
  
 if typReg>0
	if (ORA);
        dz = 0.5*(1-j); dx=1.6; dy=1.0j; dl=dx+2*real(dz);	
		p=linia(pr-0.5,-dl);
		p=linia(p+dy,dz);p=linia(p,dx);p=linia(p,dz');%'
		p=linia(p-2*dy,-dz);p=linia(p,-dx);linia(p,-dz');%'%'
	end 
 else
        dz = 0.5*(1-j); dx=1.2; dy=1.75j; dl=dx+2*real(dz);	
        p  = linia(pr+dy-.5,-dl);
        p  = linia(p ,-2*dy);
        p  = linia(p-1.5,dl);
        p  - linia(p,2*dy);
 end 

fs_1 = v.fontSize-1; 
f_1r = fs(v.fontSize-2, Color = [255,0,0] );
f_1b = fs(v.fontSize-2, Color = [0,0,255] );
f_1c = fs(v.fontSize-2, Color = [0,255,255]);
f_1m = fs(v.fontSize-2, Color = [255,0,255]);
f_1 = fs(v.fontSize-2);
f_r = fs(v.fontSize, Color=[255,0,0], Bold=(~v.SkU | NU)? false : true );
f_b = fs(v.fontSize, Color=[0,0,255], Bold=( v.SkU | NY)? false : true ) ;
f_c = fs(v.fontSize, Color=[0,.9 .9] );
f_m = fs(v.fontSize, Color=[1,0,1] );
if (typReg>1) &  (ORA)
		blok	( pr+2.2j	,-3.75-1.5j , styl0	 , Awup?'aw':'-',idRaw ,fontset(Size=k12*9));  //antiwindup
end
 p	=	blok (pw+0.5		, -6+2.5*j	, AW?'fw|c':' '	, AW? 'w  ':'w=0'	, idwa	,f_c	);	// active region dla W
		napis( pw+2.5j-3.0, 0			, 'bl'				, opisW{typSch}     , f_1c 		);	// opis sygnału W
 p	=	linia( pw			, dw		, NW?'fw|c':'fc|c'	,' '				, idw		);	// sygnał w(t)
 p	=	suma	( p0+2.5-dS/2 , dS		, 'k'				,'+ -'							);	// sumator uchybu e(t)
 ps1 =	p-(1+j)*dS/2;	% pozycja wolnego wejścia sumatora uchybu
 p	=	linia( p			, 0.6*dp	, stylB(NY,pgB==3)	,' '				, ide		);	// sygnał e(t)	
		napis( p+j*dp/10	, 0			, 'br'				,'e'				, f_b		); 
        napis( pr           , 0         , 'bl'              ,'u'                , f_r       );  // sygnał u
 pO =	linia( pr			, dp+1		, stylR(NU,pgR==1)	,'' 				, idu		);	//sygnał  u(t)
		napis	( pr+dp/2+1.05*jdp	, 0 , 'bc'				, opisU{typSch}     , f_1r		);	// opis sygnału u(t)
 if H2O 
	p=	blok	( pO		, BH		, 'fw|b'  , PWS? tekstH{typH}:'H(s)'	, idH		);	// blok H(s) gdy H2O
 elseif OW
	p=	blok	( pO		, BO		, 'fw|r'  ,OW?tekstO{typO}:tekstOi{typO}, idO,fontset(Size=SizeO{typO})	);	// blok opóźnienia O(s)
    else
	p=	blok	( pO		, BO		, 'fw|r'  ,OW?tekstO{typO}:tekstOi{typO}, idO,fontset(Size=SizeO{typO})			);	// blok opóźnienia 
 end 
		napis( pO+BO'/2		, 0			, 'ct'				, opisT{typSch}					); %' // opis parametru T	

        napis( p            , 0         ,  'lb'             , 'u'''             , f_r       );  // sygnał u'
 p	=	linia( p			, dp+1		, stylR(NU,pgR==2)	, ''				, idup  	);	// sygnał u'(t)
 		napis( p +1.05*jdp  , 0		    , 'rb'				, opisUp{typSch}    , f_1r		);	// opis sygnału u'
 
 ps =	suma ( p			, dS		, 'fw|r'			, '-+ '							);	// sumator u-z
		pz = real(ps-dS/2)+j*imag(pw); // pozycja linii z(t)
		linia( pz			, dw		, NZ?'fw|m':'fm|m'	, ''				, idz		);	// sygnał z(t)
		blok ( pz			,-6+2.5*j	, AZ?'fw|m':' '	, AZ?'z':'z=0'		    , idza, f_m	);
		napis( pz+2.5j		, 0			, 'cb'				, opisZ{typSch}     , f_1m	    );	// opis sygnału z(t)	
 pP =	linia( ps			, dp+1		, stylR(NU,pgR==3)	, ''				, idub		);	// sygnał u"=u(t)-z(t)
		napis( ps           , 0			, 'bl'				, 'u"'				, f_r	    );	// symbol u" 
 p	=	blok ( pP			, BP		, 'fw|k'  ,tekstP{Pa,typP}       , idP		        );	// blok procesu P(s):PW|(typSch>1)?tekstP{typP}:tekstPi{typP}
		napis( pP+BP/2+j/2	, 0			, 'bc'				, opisK{v.AltP+1,typSch}, f_1	);	// opis Kv
if typP>1		
		napis( pP+BP'/2		, 0			, 'tc'				, opisp{v.AltP+1,typSch}, f_1	); //'// opis bieguna p 
end		
 py =	linia( p			, 2.5		, 'B'												);	// łącznik do węzła
 dd = -j*imag(BR/2+3*Bp);
 p	=	linia( py			, dd		, 'B'												);	// linia  w dół
		napis( p            , 0			, 'br'				, opisYp{typSch}    , f_1b	    );	// opis sygnału y' 
 p	=	linia( p			,real(ps-p) , stylB(NY,pgB==2)	, 'y"'				, idyp, f_b	);	// sygnał y"(t)

 p	=	suma	( p			, -dS		, 'fw|b'			, ' ++'							);	// sumator szum+y'
		pn = p+dS/2+jdp+2j;///2;//p+1+3*j;														// poz. sygn. n(t)
		blok ( pn			,-6+2.5j	,AN?'fw|k:':' '		, AN?'n':'n=0'		, idna		);  // sygnał n(t)
		linia( pn			,-j*(imag(pn-p)-dS/2), stylN	, ''				, idns		);	//szara strzałka n(t) 
 pH =	linia( p			, -dp-1		, stylB(NY,pgB==4)	, 'y'''				, idyb,f_b	);	//sygnał y'(t)
 switch typO; case	[1,3,4,6,7,8,9] 
		blok (pH+3j			, -2-2j		, styl0				, '^'				,idH2O,fs(14)); //'	 H<->O	  
 end	 
 if ~H2O
	 p= blok ( pH			, -BH		, 'fw|b' , HW?tekstH{typH}:tekstHi{typH}, idH		 ); 
 else 
	 p= blok ( pH			, -BH		, 'fw|r'			 , 'O(sT)'			, idO		 );	 // blok O(s) gdy H2O
 end 
 %#########
  pSH = p; 
  p =	linia( p			,real(ps1-p), 'B'												 );	 // poziomy łącznik
		blok ( pSH			,-4-4j		, SD?'fw|b':styl0	 , SD?'!':'~; '		, idSD		 );	 // ciągły / dyskretny 
		linia( p			,ps1-p		, stylB(NY,pgB==1)	 , 'y '				, idy,f_b	 );	 // sygnał y(t)
		napis( p+5j		    , 0			, 'bl'				 , opisY{typSch}    , f_1b		 );	 // opis sygnału y(t)
	
//-----------------------------koniec podstawowego schematu-----------------------------------------							

// ####### tytuł i wypisy parametrów #####################################

 pt =	p0+j*imag(BR)+2.25*dj;			ar = real(py-pt);							//poz. i rozmiar tytułu/wzoru	
 p1 = real(pw);			p2 = real(pO);	p3 = real(ps)+4;							// współrzędne kolumn parametrów
 j1 = j*imag(BR+Bp)/2;	j2=-j1;			j3 = j2-dj; j4 = j3-dj; j5 = j4-0.9*dj;		// współrzędne wierszy parametrów

	blok ( pt			,ar+dj		,'fw'   , tekstSch{typSch}			, idSch	, (typSch>1)?f_1:fs(v.fontSize)	  );  // przykłady obiektów 
    if PWS
        txt= GM>1?['GM≈',spf('%5s',GM),spf('  PM≈%5s',PM),spf('°   DM≈%5ss',DM)]:'!  brak stabilności  !';
        blok (pt            ,ar+dj      ,'fw'   , txt                  , idSch , typReg==0?fs(12,[.5,.5,.5]):[]   ); // funkcja regulatora
    end 
if PWS //& ~m
pt=pt-dj;
            blok( pt      ,ar+dj  ,'fw'  , ''                                         , idSch ); // druga długa linia na opisy i objaśnienia
   switch id
	case idwa
	  if AW;blok( pt      ,ar+dj  ,'fw'   , [spf('Δw≈%s   ',W),   spf('Δt≈%ss',tW*T)] , idSch ); end // parametry w(t)
	case idza
	  if AZ;blok( pt      ,ar+dj  ,'fw'   , [spf('Δz≈%s   ',Z*zB),spf('Δt≈%ss',tZ*T)] , idSch ); end // parametry z(t)
	case idna
	  if AN;blok( pt      ,ar+dj  ,'fw'   , sprintf('odchylenie std:  σ≈%.2e  ,  rozkład %s',nSigma,UN?'równomierny':'normalny') , idSch); end  // par. n(t)
    case idRLim
      if ORA;   blok( pt  ,ar+dj  ,'fw'   , [spf(' uMax≈%s  ',uMax*zB),   spf(' uMin≈%s  ',uMin*zB)] , idSch); // 
      else;     blok( pt  ,ar+dj  ,'fw'   , '(brak ogranicznika sygnału u)'              , idSch );
      end
    case idRaw
      if Awup;  blok( pt  ,ar+dj  ,'fw'   , '(układ anty-windup włączony)'               , idSch );  
      else   ;  blok( pt  ,ar+dj  ,'fw'   , '(brak układu anty-windup !)'                , idSch );  
      end
    case idNwg
            blok( pt      ,ar+dj  ,'fw'   , wzorNast                                     , idSch );
   end	
end

if PW
		blok ( p3+j1	  , Bp   , ' ' ,v.AltP?spf('a₁≈%3s',1/K):spf('K ᵥ ≈%3s',K)       , idPK	);
	if (typP>1)	
		blok ( p3+j2 ,Bp ,styl0 ,v.AltP?spf('a₀≈%3s',-biegun/T/K):spf('p≈%3s',biegun/T)  , idPp ); 
	end 
end
//if CW
	if (id==idR) & ~m //&(typReg>0)
		blok( pt		,ar+dj  ,'fw'    , typReg>0?wzor{typReg}:wzorS2		             , idSch );  //  wzor na u(w,y,Kp,...)
	  if SD&(typReg>1)
		blok (real(pO)-12+j*imag(pt-dj), Bp	   , 'fw'	, '( s --> z ) '				         );
	  end	
	end 
if CW    
    if typReg==0
        blok ( p1+j1		, Bp	   , styl0	, spf('Kp≈%3s', Kp/K/T)	 , [] , fs(12,[.5,.5,.5])   ); 
        blok ( p1+j2		, Bp	   , styl0	, spf('eH≈%3s', uMax/Kp)            , idCeH		    );   // uchyb histerezowy
    else
        blok ( p1+j1		, Bp	   , styl0	, spf('Kp≈%3s', Kp/K/T)				, idCKp        );    
    end 
    
	if (typReg>1)
		if ((AltN==0)|(AltN==2))
		   blok( p1+j2		, Bp	   , styl0	, spf('Ti≈%3ss', Ti*T)				 , idCTi		);
		else
		   blok( p1+j2		, Bp	   , styl0	, spf('Ki≈%3s', Kp/Ti/K/T^2)		 , idCKi		);
		end
	end 
	if (typReg>3)
		blok  ( p1+j3	  , Bp		   , styl0	, spf('b≈%3s',	b)					 , idCb			);	
	end 
	if (typReg>=5)
		Bp2=Bp*0.63;
		if ((AltN==0)|(AltN==2))
		   blok ( p1+j4	  , Bp		   , styl0	, spf('Td≈%3ss', Td*T)				 , idCTd		);
		p= blok ( p0+j5	  , Bp2		   , styl0	, spf(' N≈%3s', Nd)					 , idCNd ,fontset(Size=k12*9));
		else
		   blok ( p1+j4	  , Bp		   , styl0	, spf('Kd≈%3s',Kp*Td/K)				 , idCKd		);
		p= blok ( p0+j5	  , Bp2		   , styl0	, spf('Tf≈%3ss', Td*T/Nd)			 , idCTf ,fontset(Size=k12*9));
		end
		blok	( p		  , Bp2		   , styl0	, spf('c≈%3s',	c)					 , idCc	 ,fontset(Size=k12*9));
	end;
end
if OW
   switch typO 	
	  case [2,3,4,5]	
		blok	( p2+j1	  , Bp		   , styl0	, spf('T≈%3ss',	 T)					 , idOT			); 
	  case 6
		blok	( p2+j1	  , Bp		   , styl0	, spf('T≈%3ss',	 T)					 , idOT			); 
		blok	( p2+j2	  , Bp		   , styl0	, sprintf('r=%d',nO)				 , idOn			 ); 
      case 7
		blok	( p2+j1	  , Bp		   , styl0	, spf('b₁≈%3ss',b1*T)				 , idOb1		); 
		blok	( p2+j2   , Bp		   , styl0	, spf('a₁≈%3ss',a1*T)				 , idOa1		);  
      case 8
		blok	( p2+j1	  , Bp		   , styl0	, spf('b₁≈%3ss',b1*T)				 , idOb1		); 
		blok	( p2+j2   , Bp		   , styl0	, spf('a₁≈%3ss',a1*T)				 , idOa1		);
        blok	( p2+j1+.8*dj, Bp	   , styl0	, spf('b₂≈%3ss²',b2*T^2)			 , idOb2		); 
		blok	( p2+j3+j/2 , Bp	   , styl0	, spf('a₂≈%3ss²',a2*T^2)			 , idOa2		);
	  case 9
		blok	( p2+j1	  , Bp		   , styl0	, sprintf('%s','[bᵣ .. b₀]')	 , idOL		 ); 
		blok	( p2+j2	  , Bp		   , styl0	, sprintf('%s','[aᵣ .. a₀]')	 , idOM		 );    end
end
%------------------------------------
 if typReg>0
	blok ( pr-4.5-2.8j	  , -5-2j	   , styl0	, tekstNwg{typN+4}					  ,idNwg ,	 fs(v.fontSize-2)	 );	 // nastawy wg '	
 end    
	if SD & PWS
	  p=pt-dj;
		blok ( pSH-6+3.5j  , Bp		   , styl0	, spf('Ts≈%3ss',Ts*T) , idTs, fontset(Size=k12*10)			);
	end
//(Kp,Ti,Td,typN,typReg) =	autoNastawy(Kp,Ti,Td,typN,typReg,typP, p )	 

endfunction

function (AltP,SkU,a1,a2,b1,b2,h,uMax,uMin,M1,nSigma,W,tW,Z,tZ,typB,typSch,typO,typP,typH,typReg,ORA,Awup,typN,AW,AZ,AN,UN,LN,pgB,pgR,NY,NU,NW,NZ,Kp,Ti,b,c,Td,Nd,T,K,p,H2O,PWS,nO,LO,MO,SD,MD,Ts,AltN,tMax,tZ0)  =    upSch(v, ...
Cs,Os,Ps,Hs,d,h,uMax,uMin,M1,nSigma,W,tW,Z,tZ,typB,typSch,typO,typP,typH,typReg,ORA,Awup,typN,AW,AZ,AN,UN,LN,pgB,pgR,NY,NU,NW,NZ,Kp,Ti,b,c,Td,Nd,T,K,p,H2O,PWS,nO,LO,MO,SD,MD,Ts,AltN,tMax,tZ0,id,dx,dy,m,drup)


if isempty(id); cancel ; end;

a1=v.a1;a2=v.a2;b1=v.b1;b2=v.b2; AltP=v.AltP; SkU=v.SkU; GM=v.GM; PM=v.PM; DM=v.DM;


persistent typOs  typRegs ; 
if isempty(typOs) ; typOs=typO; end
if isempty(typRegs) ; typRegs=typReg; end
dz=dx+j*dy;

switch id
    //case idSch; if ~m ; PWS = ~PWS; end// typSch
	case idy;	(NY,pgB,SkU)= pokazPgB(NY,pgB,1,SkU);
	case idyp;	(NY,pgB,SkU)= pokazPgB(NY,pgB,2,SkU);
	case ide;	(NY,pgB,SkU)= pokazPgB(NY,pgB,3,SkU);
	case idyb;	(NY,pgB,SkU)= pokazPgB(NY,pgB,4,SkU);
	case idu;	(NU,pgR,SkU)= pokazPgR(NU,pgR,1,SkU);
	case idup;	(NU,pgR,SkU)= pokazPgR(NU,pgR,2,SkU);
	case idub;	(NU,pgR,SkU)= pokazPgR(NU,pgR,3,SkU);	
	case idns;		LN	= negacjaLN(LN,AN);
	case idw;		NW	= not(NW);
	case idz;		NZ	= not(NZ);	
    case idH2O;     H2O  = not(H2O);  
    case idSD;      SD   = not(SD); typN=0;
    case idwa;
      if m
        W  =  dialogX(W,1,str='Wartość zmiany wymuszenia ΔW = %6s');
        tW =  dialogX(tW,T,0,str='Czas trwania zmiany Δt = %6ss');
        (AW,typB) = deal(1);
      else
        AW = ~AW; typB= AW? 1 : AN? 3 : AZ? 2 : 0; 
      end   
//(W,tW,AW,typB)=	dialogW(W,tW,T,AW,typB,m); 
	case idza;					
    
      yB=1; uB=yB/K/T;
      if  m 
		(AZ,NZ,typB,Z,tZ,tZ0)	= drupZ ( AZ,NZ, Z, tZ, tZ0, tMax,	T,	uB, AW, PWS, dz);
      else
        AZ = ~AZ; typB =AZ? 2 : AN? 3: AW? 1: 0; 
      end 

      
	case idna
      if m
		(AN,LN,typB,UN,nSigma)	= drupN (AW,AN,UN,	nSigma, PWS, dz);// PWS=0;
      else
        AN = ~AN; typB= AN? 3 : AZ? 2 : AW? 1 : 0; 
      end  
otherwise     
if (m==true)
  switch id 
    case idO;   typO            = dialogNr(typO,1,9,'rodzaj transmitancji:')  ;
    case idR;   (typReg,typN)   = dialogNr(typReg,0,5,'regulator [0:2s  1:P  2:PI  3:IP  4:PI+  5:PID]:')  ;    
    case idP;   nr   = dialogNr(typP+2*AltP,1,6,'1:Kᵥ/s, 2:Kᵥ/(s-p), 3:Kᵥ/(s-p)s, 4:1/(a₁s), 5:1/(a₁s+a₀), 6:1/(a₁s+a₀)s :');            typP = mod(nr-1,3)+1 ; AltP=nr>3 ; typN=0; if (nr==3)|(nr==6);typSch=min(7,typSch); end
	
    case idH;   typH        = dialogNr(typH-1,0,1,'tor pomiarowy ')+1;      
	case idOn;		nO	    = round(dialogX (nO , 1,1,9));
    case idCeH;     Kp      = dialogEH(Kp,uMax);
    case idRLim; if ORA;(uMax,uMin)  = dialogP([uMax,uMin],1/K/T,-inf,inf,'[uMax , uMin] = ');end
	case idCKp;	(Kp,typN)    = dialogX	( Kp,1/K/T	);
	
	case idCTi; (Ti,typN)	= dialogX	( Ti, T );
	case idCTd; (Td,typN)	= dialogX	( Td, T );
	case idTs;	(Ts,typN)	= dialogX	( Ts, T , h,1);
	case idCNd; (Nd,typN)	= dialogX	( Nd, 1,  1	  ,25);
	case idCb;	b			= dialogX	(  b, 1	  );
	case idCc;	c			= dialogX	(  c, 1	  );
	case idOLM; (LO,MO)		= dialogLMO ( LO, MO, T);
    case idOL;  LO          = dialogLO  ( LO , T , str='[ bᵣ .. b₀ ] = ' );
    case idOM;  MO          = dialogLO  ( MO  , T , str='[ aᵣ .. a₀ ] = ')
    case idOa1; a1          = dialogX   ( a1, T   );
    case idOa2; a2          = dialogX   ( a2, T^2 );
    case idOb1; b1          = dialogX   ( b1, T   );
    case idOb2; b2          = dialogX   ( b2, T^2 );
 	case idOT;	( x,typN)	= dialogX	( T , 1,  T/4 , 4*T );
								Kp=Kp*x/T; Ti=Ti*T/x; Td=Td*T/x; p=p*x/T; Z=Z*x/T; 
								tMax=tMax*T/x; tZ0=tZ0*T/x; 
                                uMax=uMax*x/T; uMin=uMin*x/T; 
                                Ts=Ts*T/x;// h=h*T/x; h=h*T/x; 
                                 T = x;
	case idPK;
        if AltP
            ( x,typN)	= dialogX	(1/K , 1, 1/4/K , 4/K );
            x = 1/x;
            p = p*x/K;
        else     
            ( x,typN)	= dialogX	(K , 1,	 K/4 , 4*K );
        end    
			Kp=Kp*x/K; Z=Z*x/K; 
            uMax=uMax*x/K; uMin=uMin*x/K;
                         
            K = x;
    case idPp;
        if AltP
            (x,typN) = dialogX( -p/K , 1/T); p=-x*K; 
        else
            (p,typN)	= dialogX	( p , 1/T	);  
        end

	case idCKi; Ki=Kp/Ti; KiB=1/K/T^2;
				(Ki,typN)	= dialogX	( Ki,KiB,	eps);
				Ti= Kp/Ki;
	case idCKd; Tf=Td/Nd;	Kd=Kp*Td; KdB=1/K;
				(Kd,typN)	= dialogX (	 Kd,KdB,	eps);
				Td= Kd/Kp;	Nd=Td/Tf;
	case idCTf; Tf=Td/Nd; 
				(Tf,typN)	= dialogX	(	Tf,T,	 Td/25);
				Nd=Td/Tf;
	case idSch
	  if PWS>0
		//(GM,PM,DM) = deal(0);//drawNyquistOL(v,Cs,Os,Ps,Hs,d,T,typH,[],SD,MD,Ts,[],[],[]);
		st1=['O |',sprintf('%-6s|','  T ','  K ',' -p','  GM','  PM','  DM','  Kp')];
		st2=[d2s(typO),' |',spf('%5s |',[typO>1?T:0, K, typP>1?-p/T:0,GM,PM,DM,Kp/K/T])];
		
		if typReg>1
			st1=[st1,sprintf('%-6s|',' Ti')];
			st2=[st2,spf('%5s |',Ti*T)];
		end	   
		if typReg>2
			st1=[st1,sprintf('%-6s|',' b ')];
			st2=[st2,spf('%5s |',typReg==3?0:b)];
		end 
		if typReg>4	   
			st1=[st1,sprintf('%-6s|',' Td ',' N ', ' c ')];
			st2=[st2,spf('%5s |',[Td*T,Nd,c])];
		end			  
		disp(st1);disp(st2);
	  end
    case 0
        disp('-');
	end
else
   switch id
    case idP;    (typP,typN) = zmienTyp(typP,1,3); typSch = (typP==3)?max(8,typSch):min(7,typSch); 
    case idO;    (typO,typOs) = deal(typOs,typO);
    case idR;    (typReg,typRegs,typN) = deal(typRegs,typReg,0);
    case idH;    typH        = zmienTyp(typH,1,2);
    case idNwg;    typN      =  ~typN;   (Kp,Ti,Td,typN,typReg) =	autoNastawy(Kp,Ti,Td,typN,typReg,typP, p , SD, Ts) ;
    case idRLim;   (ORA,typReg,Awup) = negacjaORA(ORA,typReg,Awup);// ORA      = ~ORA; if ~typReg&~ORA; typReg=1;end 
    case idRaw ;   Awup = ~Awup;
   
   end
end
end
if ~m&(id==idSch); PWS=~PWS; end	
endfunction

function (AltP,a1,a2,b1,b2,h,Ts,uMax,uMin,msg,typO,typReg,ORA,typP,typH,typSch,nO,W,AW,NW,Z,AZ,NZ,nSigma,AN,Kp,Ti,b,Td,Nd,c,K,T,p,H2O,AltN,typN,PWS,SD,tMax,tZ0,tZ,tW) =  scrollSchem(v, ...
 h,Ts,uMax,uMin,id,dy,typO,typReg,ORA,typP,typH,typSch,nO,W,AW,NW,Z,AZ,NZ,nSigma,AN,Kp,Ti,b,Td,Nd,c,K,T,p,H2O,AltN,typN,PWS,SD,tMax,tZ0,tZ,tW,M1,m)
 
 if isempty(id) ; cancel;end

a1=v.a1;a2=v.a2;b1=v.b1;b2=v.b2; AltP=v.AltP;


if ~m //true//~m 
	switch id
		case idH;	typH	=	scrollY(dy,typH	  ,1,1,2);
		case idSD ; SD		=	scrollY(dy,SD	  ,1,0,1);
		case idH2O; H2O		=	scrollY(dy,H2O	  ,1,0,1) ;
		case idO;	typO	=	scrollY(dy,typO   ,1,1,9);
		case idR;	typReg	=	scrollY(dy,typReg ,1,~ORA,5);	typN = 0; //if typReg==0; ORA=true; end
        case idNwg; typN    =   scrollY(dy,typN   ,1,1,6);
                                (Kp,Ti,Td,typN,typReg) =	autoNastawy(Kp,Ti,Td,typN,typReg,typP, p , SD, Ts ) ;
                                
                                
        //(y , typ0)				=	scrollY( dy , y , dyB=1, Ymin=-1/eps , Ymax=1/eps , typ=0)                        
		case idP;
					nr	=	scrollY(dy,typP+3*AltP ,1,1,6 );	
					typP = mod(nr-1,3)+1 ;  typN=0;
					switch nr
						case [1,2,3] ; AltP = false;
						case [4,5,6] ; AltP = true;
					end	
				 	switch nr
						case [1,2,4,5]; typSch=min(7,typSch);
						case [3,6]; typSch=8;
					end;	


		case idOn;	nO		=	scrollY(dy,nO	,1,1,9 );	
        
        case idOa1; a1      =   scrollY(dy,a1   ,100    );
        case idOa2; a2      =   scrollY(dy,a2   ,100    );        
        case idOb1; b1      =   scrollY(dy,b1   ,100    );
        case idOb2; b2      =   scrollY(dy,b2   ,100    );
        
		case idSch;	if ~PWS;  typSch=scrollY(dy,typSch,1,1,9);  typP=(typSch>7)? 3:2; disp([typSch ,typP]); 
		            end
		
//
					//if PWS<0; typSch=-PWS+1; end
		case idwa;	if AW; W = scrollY(dy,W,0);	PWS=1; end
		case idza;	if AZ; Z = scrollY(dy,Z,200/W);	PWS=1; end
		case idna;	if AN; nSigma=scrollY(dy,nSigma,100,0,10);PWS=1;end
        case idRLim;
             if ORA
                PWS=1;  
                uMxn = scrollY( dy,uMax, 10 , eps ); 
                uMin = min(uMxn,uMin*uMxn/uMax);//scrollY(-dy,uMin, 10); 
                if typReg==0
                    Kp=Kp*uMxn/uMax;
                    if Kp==nan; Kp=eps; end
                end
                uMax = uMxn;
             end               
        case idCeH; Kp      = scrollY(dy,Kp,   -25/Kp);          typN=0;
        case idCKp; 
                    Kps=Kp;
                    Kp		= scrollY(dy,Kp		,100/Kp);			typN = 0;
					if AltN; Ti = Ti*Kp/Kps; end
                        
		case idCTi; Ti		= scrollY(dy,Ti		,100/Ti);		typN = 0;
		case idCKi; Ti		= scrollY(dy,Ti		,-100/Ti);		typN = 0;
		case idCb;	b		= scrollY(dy,b		,100);
		case idCTd; Td		= scrollY(dy,Td		,500/Td,0);		typN = 0;
		case idCKd; Td		= scrollY(dy,Td		,500/Td,0);		typN = 0;
		case idCNd; Nd		= scrollY(dy,Nd		,25);
		case idCTf; Nd		= scrollY(dy,Nd		,-25);
		case idCc;	c		= scrollY(dy,c		,50);	
		case idPK;	x		= scrollY(dy,K		,0,0);typN=0;//50/K,0);		typN	=	0;
							  Kp = Kp*x/K; Z = Z*x/K; 
                              if AltP; p=p*x/K; end
                              uMax=uMax*x/K; uMin=uMin*x/K;
                              K = x;
		case idPp;	p		= scrollY(dy,p,0);//		,500);
		case idOT;	x		= scrollY(dy,T,0);		typN	=	0;
							  Kp=Kp*x/T; Ti=Ti*T/x; Td=Td*T/x; p=p*x/T; 
							  Z=Z*x/T; tMax=tMax*T/x; tZ0=tZ0*T/x;	tZ=tZ*T/x; tW=tW*T/x;
                              uMax=uMax*x/T; uMin=uMin*x/T; 
                              Ts=Ts*T/x; //h=h*T/x;  h=h*T/x;
                              T = x;
	end
end	
	msg=overSchem(PWS,AN,typReg,id,0);//'scroll';
endfunction
function (NY, pgB , SkU)    =   pokazPgB(Ny , pgB0 , pgB1 , Sku)
    pgB = pgB0 ; NY = Ny; SkU=Sku;
    if Ny 
       NY = false ; pgB = pgB1; SkU = false;
    else
       if (pgB0==pgB1)
          NY = true ; SkU = true;
       else
          pgB=pgB1 ; NY = false ; SkU = false;
       end   
    end
endfunction
function (NU, pgR , SkU)    =   pokazPgR(Nu , pgR0 , pgR1 , Sku)
    pgR = pgR0 ; NU = Nu; SkU=Sku;
    if Nu 
       NU = false ; pgR = pgR1; SkU = true;
    else
       if (pgR0==pgR1)
          NU = true ; SkU = false;
       else
          pgR=pgR1 ; NU = false ; SkU = true;
       end   
    end
endfunction
function styl			    =	stylB(NY, OK ) // style strzałek; OK=B
	if ~NY&OK
		styl='fb|B';
	else
		styl='fw|B';
	end
endfunction
function styl			    =	stylR(NU, OK ) // style strzałek; OK=R
	if ~NU&OK
		styl='fr|R';
	else
		styl='fw|R';
	end
endfunction
function  msg			    =	msgReg(typReg)

if isempty(typReg); cancel;end;

 tekstReg	=	{'P : regulator proporcjonalny ; u = Kp { w - y }',...
				 'PI: regulator proporcjonalno-calkujacy  : u = Kp { w - y + (w - y) / (sTi) }',...
				 'IP: regulator PI bez dzialania proporcjonalnego sygnalu wartosci zadanej	u = Kp { 0 - y + (w - y) / (sTi) }',...
				 'PI+ : regulator PI z wazonym dzialaniem proporcjonalnym dla sygnalu zadanego ; u = Kp { bw - y + (w - y) / (sTi) }',...
				 'PID+ : regulator PI+ z dodanym torem rozniczkowania sygnalu sprzezenia zwrotnego; u = Kp{bw-y +(w-y)/(sTi) -ysTd/(1+sTd/N)}'};
 
 msg = ((typReg>0)|(typReg<6))? tekstReg{typReg} : '?';

endfunction
function (msg,id,cursor,m)	=	overSchem	(PWS,AN,typReg,id0,m)


	msg='?';
    
	if isempty(id0);	
		id = 0; cursor=false;
	else
		id = id0; cursor=true;
	end
    shk = '   (shift+klik)';
    rol = '   ] || [ '  ;// ( [j] [k] <||>)';
    klk = '   (klik)';
    pu  = ' : pokazanie/ukrycie';
    ad  = ' : aktywacja/deaktywacja';
    wyp = ' : wypisanie';
    zm  = ' : zmiana'; 
    par = ' parametrów';
    sch = ' opisu schematu';

	switch id
        case 0  
            msg = sprintf('%d',id); [shk,wyp,' pustej linii   '];
 		case idSch
            msg = [klk,pu,PWS?[shk,wyp,par]:[par,rol,zm,sch]];
        case [idwa,idza,idna]    
            msg=[klk,ad,shk,rol,zm,par,' sygnalu'];
		case [idy,idyp,ide,idup,idu,idub,idyb,idw,idz]
            msg = [klk, pu , ' wykresu sygnału'];
		case idns
			msg=AN?[klk, ' : ożywienie/zamrożenie szumu']:' ';
		case idR
			msg=[klk,shk,rol,zm,' typu regulatora'];
		case [idP,idO,idH]
            msg = [klk,shk,rol,zm,' transmitancji'];
		case [idCb,idCKp,idCTi,idOT,idOn,idOa1,idOa2,idOb1,idOb2, idPK,idPp,idCKi,idCTd,idCKd,idCNd,idCTf]
			msg=[shk,rol,zm,' wartości parametru' ];
        case idOLM
            msg=[shk,zm,' współczynników Licznika i Mianownika transmitancji'];
		case idH2O
			msg=[klk,shk,' : zamiana blokow H<->O'];
			id=id0;
		case idTs
			msg=[shk,zm,' okresu próbkowania danych i obliczeń regulatora cyfrowego'];
		case idSD
			msg=[klk,zm,' rodzaju regulacji:  ~(ciagla)  /  !(dyskretna)'];
        case idNwg  
            msg     =  [klk,rol,zm,' wzoru na nastawy regulatora '];   
        case idRLim 
            msg=[klk,ad,' ogranicznika sygnału ;  ',shk,rol,zm,' poziomu ograniczeń'];
        case idRaw
            msg=[klk,ad,'układu anti-windup '];
		otherwise
        	msg=['?'];	
	end
endfunction

//// Częstotliwościowe ##############################################################
// Bode : 9-wariantów(łącznie z Nyquistem)
function drawBodeNew(w,U,Y,SD,Ts,K,T, pgB,pgR, SkU, NL, NU, NY, PWW, ZoS,fHz, wp, wk, KW,KA, typB,nB)

//typB+nB: rodzaj char. Bodego 1:|/W|,2:|/Z|, 3:|/N|, 4:arg(/W),5:arg(/Z), 6:arg(./N) 7:Nyquist /W, 8:Nyq./Z, 9:Nyq./N
if isempty(w); cancel; end
//
global NM NG	
persistent Uo Yo ZS		% stare zmienne (ślady) ZS - przerzutnik Zostaw Ślad
	opt = NM?'nomargin':'margin'; plotoption(opt);
	opt = NG?'noxygrid':'xygrid'; plotoption(opt);

    typB=typB+nB;	
	lw=length(w);	
    if isempty(ZS); ZS=zeros(1,9); end; % inicjacja przerzutnika
    if length(ZS)<9;ZS=zeros(1,9); end;

	if ~ZoS&ZS(typB); ZS(typB)=0 ; end;		% reset ZS	

    Uo=isempty(Uo)?zeros(6,lw):Uo;
    Yo=isempty(Yo)?zeros(6,lw):Yo;
 
	if ~ZS(typB)&ZoS; Uo(typB,:) = U; Yo(typB,:) = Y; ZS(typB)=1; end; % zapamiętanie przebiegów, ustawienie ZS	  
	
	if (SD==true) ; 
		line([1,0], pi/Ts,'c'); // linia pionowa - częst. Nyquista
		U=U(w<pi/Ts);
		Y=Y(w<pi/Ts);
	end		

		X	= Y;
        moMin = min(abs(X));
       
		w	= w(1:length(X));   
        
        if (PWW==-2) 
           V = SkU? U : Y;  
           wk = w(find(abs(V)==max(abs(V))));
        else   
            wk	= min(w(end),max(w(1),wk));
        end    
		xx	= interp1(w,X,wk);
		x	= real(xx);
		y	= imag(xx);
		fi	= angle(xx);
		mo	= abs(xx);
wp=max(wp,w(1));
        xx  = interp1(w,X,wp);
        mop = abs(xx);
        fip = angle(xx) ;

        
    	X	= U;
       
		xx	= interp1(w,X,wk);
		x2	= real(xx);
		y2	= imag(xx);
		fi2	= angle(xx);
		mo2	= abs(xx);
        mo2Min = min(abs(X));

        xx  = interp1(w,X,wp);
        mo2p = abs(xx);
        fi2p = angle(xx);            
 
    if typB<7	// Bode mag or phase

        scale(typB<4?'loglog/logdb':'loglin',[w(1),w(end)]) ;
		
         (sc,type) = scale;   
         if (type==='linlin')|(type==='loglin') & ~SkU & ~NY & (wp==0)
            line( [0,1] ,0   , '!b' ); 
         end   
         if ~SkU & ~NY & (wp>0) & (PWW==2)
            line( [0,1] ,typB<4?mop:fip   , '!b' );
         end   
         if (type==='linlin')|(type==='linlog')|(type==='lindb')|(wp>w(1))&(PWW==2)
           line( [1,0] ,wp   ,SkU?'!r':'!b' ); 
         end
         if SkU ; 
            altscale(true);
             if (wp>w(1)) & (PWW==2)
                plot([w(1),w(end)] , (typB<4?mo2p/K/T:fi2p)*[1,1], '!r')
            else
                plot([w(1),w(end)], [0,0],'!r')
            end    
            altscale(false);
         end 
         
		scalefactor([fHz?1/2/pi/T:1/T,typB<4?(1):180/pi]) ;         
		if ZS(typB)
			if ~NU; 
            altscale(true)

       lenw=length(w);

				plot(w,typB<4?abs(Uo(typB,1:lenw))/K/T:angle(Uo(typB,1:lenw)),'h(faa)') ;
            altscale(false)    
			end 
			if ~NY;
                   lenw=length(w);
				plot(w,typB<4?abs(Yo(typB,1:lenw)):angle(Yo(typB,1:lenw)),'h(aaf)') ; 
			end 
		end 
		if ~NU;
            altscale(true);
            plot(w(1:length(U)),typB<4?abs(U)/K/T:angle(U),SkU?'R':'r',idUW) ;
            altscale(false)
        end
		if ~NY; 
            plot(w(1:length(Y)),typB<4?abs(Y):angle(Y),SkU?'b':'B',idYW) ;
        end	
////Kursory i wypisy w tytułach
		if PWW 
             if ~NU
                altscale(true) 
//// !####                
                if (wp>w(1)) & (PWW>1) 
                    kursor(KA,wp,wk,typB<4?mo2p/K/T:fi2p,typB<4?mo2/K/T:fi2,Color=SkU?'Red':'red',id=SkU&PWW?idFreq:0) ;
                else
                    kursor(KA,w(end),wk,typB<4?mo2Min/K/T:0,typB<4?mo2/K/T:fi2,Color=SkU?'Red':'red',id=SkU&PWW?idFreq:0); 
                end
                altscale(true)    
                if (SkU)&(wp>0)&(PWW==2); plot(wp,typB<4?mo2p/K/T:fi2p, 'or') ; end                 
                altscale(false)    
            end  
            if ~NY //&~SkU
                if (wp>w(1)) & (PWW>1)
                   kursor(KA,wp,wk,typB<4?mop:fip,typB<4?mo:fi,Color=SkU?'blue':'Blue',id=SkU?[]:idFreq);                
                else
                    kursor(KA,w(1),wk,typB<4?moMin:0,typB<4?mo:fi,Color=SkU?'blue':'Blue',id=SkU?[]:idFreq);   
                end
                if (~SkU)&(wp>0)&(PWW==2); plot(wp,typB<4?mop:fip, 'ob') ; end
            end    
           
            titStr='';
            titStr = [titStr, (SkU?bodeRstr(pgR):bodeBstr(pgB)){typB}  ] ; 
            if PWW <2               
                titStr = [titStr, spf('ₓ ≈ %s', typB>3?(SkU?fi2:fi)*180/pi:SkU?mo2/T/K:mo) ];	   
                if typB>3; titStr=[titStr,'°'];end; 
                titStr = [titStr, spf(fHz?'   fₓ≈%4sHz  ':'   ωₓ≈%4srad/s  ',fHz?wk/T/2/pi:wk/T)];
            else
                switch typB  //1:|/W|,2:|/Z|, 3:|/N|, 4:arg(/W),5:arg(/Z), 6:arg(./N) 7:Nyquist /W, 8:Nyq./Z, 9:Nyq./N
                case  [1,2,3 ]
                    modB  = SkU? 20*log10(mo2/mop) : 20*log10(mo/mop);                    
                    titStr= [titStr,sprintf('ₓ₋ₒ ≈%.2fdB  %.2fdB/dec',modB, modB / log10(wk/wp))];
                case [4,5,6]
                    dfi = (SkU? (fi2-fi2p):(fi-fip))*180/pi;
                    titStr=[titStr,sprintf('ₓ₋ₒ ≈%.2f°' ,dfi )];
                otherwise
                  titStr='??';
                end  
            end    
			title(titStr);
		end	 // of PWF
        
        label(fHz?'Hz':'rad/s',typB<4?' ':'[°]',typB<4?' ':'[°]');
		if ~NL; 
          legend([NY?'':bodeBstr(pgB){typB},NY?'':'\n',...
				NU?'':bodeRstr(pgR){typB}],[NY?'':SkU?'b':'B',NU?'':SkU?'R':'r']);
        end
		
	else //################################## Nyquist (tylko jeden wykres)
		line([1,0],0,SkU?'!r':'b!');
		line([0,1],0,SkU?'!r':'b!'); 
		if ~NU & SkU; 
            if ZS(typB)
                plot(real(Uo(typB,:)),imag(Uo(typB,:)),'h(f66)') ;
            end    
			plot(real(U),imag(U),plotset(styl_B,Color='Red',ArrowEnd=true),id=idUW) ;
			plot(real(U(1)),imag(U(1)),'oR');
            if ~NL 
                legend(bodeRstr(pgR){typB},'R');
            end
            if KW
                kursor(KA,0,x2,0,y2,Color='Red',id=idFreq);   
                plot([0,x2],[0,y2], KA?'r-':'r:');
            end
		end
		if ~NY & ~SkU; 
            if ZS(typB)
                 plot(real(Yo(typB,:)),imag(Yo(typB,:)),'h(66f)') ;
            end     
			plot(real(Y),imag(Y), plotset(styl_B,ArrowEnd=true), id=idYW) ;
			plot(real(Y(1)),imag(Y(1)),'ob');
            if ~NL
                legend(bodeBstr(pgB){typB},'B');
            end
            if KW
                kursor(KA,x,x,y,y,Color='Blue',id=idFreq);
                plot([0,x],[0,y],KA?'b-':'b:');
            end    
		end 
		scalefactor(SkU? 1/K/T : 1);
		scale equal
        label('Re','Im')
	end // ##########################(end of Nyquist)
	if PWW
        if typB>6
            fixd  =  (SkU?fi2:fi)*180/pi;
            zn = fixd>0?'+':'-';
            
            titStr = ' ';
            titStr = [titStr, (SkU?bodeRstr(pgR):bodeBstr(pgB)){typB}];
            titStr = [titStr, spf(' ≈ %4s e',SkU?mo2/K/T:mo),upstr([zn,spf('j%s°',abs(fixd))])];
            titStr = [titStr, spf(fHz?'   fₓ≈%4sHz':'   ωₓ≈%4srad/s',fHz?wk/T/2/pi:wk/T) ];
            title(titStr);
        end    
	else
       switch typB
        case [1,2,3]
            title('Charakterystyki amplitudowe');
        case [4,5,6]
            title('Charakterystyki fazowe'); 
        case [7,8,9]        
            title('Charakterystyki Nyquista');
        otherwise
            title('??')
       end     
	end	   
 
endfunction
function str                    =   wypis_f(v)

		X	= v.Yjw;
        w   = v.w;
		w	= w(1:length(X));
        wp  = v.wp;
		wk	= min(w(end),max(w(1),v.wk));
		xx	= interp1(w,X,wk);
		x	= real(xx);
		y	= imag(xx);
		fi	= angle(xx);
		mo	= abs(xx);
        moMin = min(abs(X));
        
        xx  = interp1(w,X,max(wp,w(1)));
        mop = abs(xx);
        fip = angle(xx) ;
        
    	X	= v.Ujw;
		xx	= interp1(w,X,wk);
		x2	= real(xx);
		y2	= imag(xx);
		fi2	= angle(xx);
		mo2	= abs(xx);
        mo2Min = min(abs(X));

        xx  = interp1(w,X,wp);
        mo2p = abs(xx);
        fi2p = angle(xx);            

	   str = sprintf([v.fHz?'fₓ≈%4.2fHz   ':'ωₓ≈%4.2frad/s   ',...
				(v.SkU?bodeRstr(v.pgR):bodeBstr(v.pgB)){v.typB>3?v.typB-3:v.typB},...
				'=%5.3f	 φ≈%+4.1f°'],...
				 v.fHz?wk/2/pi/v.T:wk/v.T,...
				 v.SkU? mo/v.T/v.K:mo, fi*180/pi);  

endfunction
function str				    =	bodeBstr(pgB)
//	typB	1:|/W|,2:|/Z|, 3:|/N|, 4:arg(/W),5:arg(/Z), 6:arg(./N)
switch pgB //pgB = 1:y		2:y'		  3: e=w-y		4:y"
	case 4	;	str = {'|Y''/W|',	'|Y''/Z|'	,	'|Y''/N|'	,	'arg(Y''/W)',	'arg(Y''/Z)',	'arg(Y''/N)',...
						'Y''/W' ,	 'Y''/Z'	,	 'Y''/N'	};
	case 1	;	str = {'|Y/W|'	,	'|Y/Z|'		,	'|Y/N|'		,	'arg(Y/W)'	,	'arg(Y/Z)'	,	'arg(Y/N)',...
						'Y/W'	,	 'Y/Z'		,	 'Y/N'		};
	case 3	;	str = {'|E/W|' ,	'|E/Z|'		,	'|E/N|'		,	'arg(E/W)'	,	'arg(E/Z)'	,	'arg(E/N)',...
						'E/W'  ,	 'E/Z'		,	 'E/N'		};
	case 2	;	str = {'|Y"/W|'	 ,	'|Y"/Z|'	,	'|Y"/N|'	,	'arg(Y"/W)' ,	'arg(Y"/Z)'	 ,	'arg(Y"/N)',...
						'Y"/W'	,	 'Y"/Z'		,	 'Y"/N'		};
	otherwise;	str = {'??' ,'??','??','??','??','??','??','??','??'};
end
endfunction
function str				    =	bodeRstr(pgR)
switch pgR // pgR = 1:u/Kp	 2:u'/Kp	   3:(u'-z)/Kp
	case 1	;	str = {'|U/W|'	,	'|U/Z|'		,	'|U/N|'		,	'arg(U/W)'	,	'arg(U/Z)'	,	'arg(U/N)'	,...
					  'U/W'		,	 'U/Z'		,	 'U/N'		};
	case 2	;	str = {'|U''/W|',	'|U''/Z|'	,	'|U''/N|'	,	'arg(U''/W)',	'arg(U''/Z)',	'arg(U''/N)',...
						'U''/W' ,	 'U''/Z'	,	 'U''/N'	};
	case 3	;	str = {'|U"/W|',	'|U"/Z|'	,	'|U"/N|'	,	'arg(U"/W)',	'arg(U"/Z)',	'arg(U"/N)',...
						'U"/W' ,	 'U"/Z'		,	 'U"/N'		};
	otherwise;	str = {'??' ,'??','??','??','??','??','??','??','??'};
end
endfunction
function (wk)		            =	scrollBode(v,dy,m,id)
if isempty(id); cancel; end
   wk=v.wk;
   k=2^(1/8);
   switch id
        case -1;
       case [idYW, idUW, idFreq,398]
          if ~v.KA
            if dy>0; wk = wk/1.001; end
            if dy<0; wk = wk*1.001; end
          end  
        if m ; dialog('wk'); end    
        end    
endfunction
function (msg,cursor,wk,id)	    =   overBode(v,x,m,x1,y1,id0)	
	id		=	isempty(id0)? -1 : id0;
    cursor  = (~isempty(id0)) ;
    if (id==-1) // & ~v.KA
        msg0= v.KA? '(klik) : zablokowanie kursora   ' : ' '; 
        msg = [msg0, '(Shift+klik) : wypis pustej linii w oknie komend'];
    else
        if v.KW & v.KA; 
            msg= ' (klik): zablokowanie   (Shift+klik) : wprowadzenie pozycji kursora';
        elseif v.KW & ~v.KA
            msg= ' (klik): odblokowanie kursora ;     (←↓|↑→) : zmiana pozycji ;     (Shift+klik) : wypis w oknie komend';
        else
            if v.fHz
                msg = spf('%6sHz',x1/v.T/2/pi);
            else
                msg = spf('%6srad/s',x1/v.T);
            end    
        end
    end 
    wk	= (~m&v.KA)? max(0,x) : v.wk;
endfunction
function		(KA,wk)		    =	upBode(v,m,id)

 wk=v.wk;
 if isempty(id) ; id=-1; end
 wk=v.wk; KA = v.KA;
     xB = v.fHz? 1/2/pi/v.T : 1/v.T;
 //disp(id)  
     switch id
        case [0,-1]
            KA = false; 
            if m ; disp('-') ; end
        case [idUW,idYW,idFreq, 398]
            if m & KA & v.PWW
               strf = 'Częstotliwość fₓ = %7sHz';
               strw = 'Pulsacja ωₓ = %7srad/s';
               wk = dialogX(wk, xB, 0.001, 100, str=v.fHz? strf : strw);
               KA = false; 
            elseif m    
               disp(wypis_f(v))
            else
               KA = not(KA);
            end  
        otherwise
            disp('??')
     end    

endfunction
 function		Z			    =	nyquistZ(sys,w)
	(num,den,Ts) = tfdata(sys);
	if isempty(Ts);
		Ts=1;  SD=false;
	else 
		SD=true;
	end;
nLME=info;
nLME=nLME(5);
if nLME>='6'
	if SD
		(X,Y)= dnyquist(num{:},den{:},w*Ts);
	else
		(X,Y)= nyquist(num{:},den{:},w*Ts);
	end;	
else	
	(X,Y)=nyquist(sys,w*Ts);
end ;	
	Z=X'+j*Y';


endfunction 
function (cursor,msg,ixF,wk,id) =   overNyquist(v,ix,id0,m)
ixF=v.ixF; wk=v.wk;

 if isempty(id0);
	cursor=false; id=-1;
 else 
 	ww = logspace(-3,2,2000);
    ww = unique([ww, logspace(log10(1/2),log10(4),1000)]); 
    wk_ = ww(ix);
	if ~m & v.KA
	  ixF = ix;
	  wk = wk_;
   end
   cursor=true;	
   id = id0;   
 end 
    
 if (id==-1) // & ~v.KA
        msg0= v.KA? '(klik) : zablokowanie kursora   ' : ' '; 
        msg = [msg0, '(Shift+klik) : wypis pustej linii w oknie komend'];
 else
 	msg0 = ' (klik): pokazanie kursorów ';
	msg1 = ' (klik): zatrzymanie  (shift+klik) : wypisanie kursorów';
    if v.KW & v.KA; 
            msg= ' (klik): zablokowanie   (shift+klik) : wprowadzenie pozycji kursora';
    elseif v.KW & ~v.KA
            msg= '(klik) : odblokowanie kursora   ;  (←↓|↑→) :  zmiana pozycji  ;  (Shift+klik) : wypis w oknie komend';
    else
        if v.fHz
            msg = spf('%6sHz',wk_/v.T/2/pi);
        else
            msg = spf('%6srad/s',wk_/v.T);
        end    
    end
 end 
endfunction
//NyquistOL
function                            drawNyquistOLnew(v) 

  setfigstyle(v.fontSize,v.B,v.I);
     Ts = v.Ts;
    fontSize = v.fontSize;
    T=v.T;  
    OL=v.Ljw; ww=v.wL; Z=v.Ljw; 
    GM = v.GM;  
    DM=v.DM;
    PM=v.PM;
    w1=v.w1;
    wpi=v.wpi;  
    Ms=v.Ms;
    PWW=v.PWW;
    NL=v.NL;
    wk=v.wk;
    KA=v.KA;
    fHz=v.fHz;
    global NM NG  
    persistent OLo	ZS	 % stare zmienne (ślady) ZS - przerzutnik Zostaw Ślad

    stab = (GM > 1);
	opt = v.NM?'nomargin':'margin'; plotoption(opt);
	opt = v.NG?'noxygrid':'xygrid'; plotoption(opt);
	if isempty(ZS); ZS=0	   ; end; % inicjacja przerzutnika
	if ~v.ZoS&ZS; ZS=0		   ; end;  % reset ZS 
	if ~ZS&v.ZoS; OLo = OL;  ZS=1; end; % zapamiętanie OL, ustawienie ZS

	scale('equal', [-2.0, .25, -1.0, .5]);
    sc  = scale;  
    dw  = (sc(2)-sc(1))*(0.0025+0.001*fontSize); //15-05-2020

	circle(0,0,1,'h(aaa)')
	line([0,1],0,'!h(555)')
	line([1,0],0,'!h(555)')

	if (v.SD==true)
		w=ww(ww<pi/Ts);
		lw=length(w);
		Z=Z(1:lw);	
	end 
	if ZS
		plot(real(OLo),imag(OLo),'h(666)')
	end 
        plot(real(Z),imag(Z),'K', id=398 )
	if stab
       	ix=find(abs(Z)<=1,1);
        fi=angle(Z(ix));
		is=find(abs(Z+1)==min(abs(Z+1)),1);
		Zs=Z(is); ws=ww(is);  

		wezel(-1/GM, dw ,'fh(d0d)');
		wezel(cos(fi)+j*sin(fi),  dw ,'fh(0ee)');
		linia(-1,Zs+1,'h(0f0)');
		wezel(Zs,   dw ,'fh(0e0)');
		txtGM = [spf(' GM≈%2s@',GM),spf('%s',v.fHz?wpi/T/2/pi:wpi/T), v.fHz?'Hz':'rad/s'];
		%txtMs = [spf('Ms≈%2s @',Ms,5),spf('%s',fHz?ws/T/2/pi:ws/T), fHz?'Hz':'rad/s'];
        txtMs = [sprintf(' Ms≈%.2f',Ms)];
        txtAtMs =[spf(' @%s',v.fHz?ws/T/2/pi:ws/T), v.fHz?'Hz':'rad/s'];
		txtPM = spf(' PM≈%2s˚',PM);
        txtAtPM=[spf(' @%s',v.fHz?w1/T/2/pi:w1/T), v.fHz?'Hz':'rad/s'];

		text(sc(1), sc(4) ,txtGM,'tl',Color=[0.8,0,0.8]);
		text(sc(1), 0   ,txtMs,  'bl',Color=[0,0.8,0]);
		text(sc(1), 0   ,txtAtMs,'tl',Color=[0,0.8,0]);
		text(sc(1),-0.8,txtPM,'bl',Color=[0,0.7,0.7]);
		text(sc(1),-0.8,txtAtPM,'tl',Color=[0,0.7,0.7]);        
		text(sc(2),sc(3),spf('DM≈%ss',DM),'br',Color=[0,0.7,0.7]);
	 end 
    dx=dw*1.2; //15-05-2020
	plot([-1-dx,-1+dx;-1,-1],[0,0;-dx,dx],'R')
    label('Re','Im')
    titStr = 'Char. Nyquista otwartej pętli';
 //kursor
	 if PWW 
		w	= ww(1:length(Z));
		wk	= min(w(end),max(w(1),wk));
		xx	= interp1(w,Z,wk);
		x	= real(xx);
		y	= imag(xx);
		fi	= angle(xx);
		mo	= abs(xx);
		nLME=info;
		nLME=nLME(5);
		if nLME=='6'
		   plot([0,x],[0,y],':')
		   plot(x,y,'o'); // kółko - dla Sysq5
		else
		   plot([0,x],[0,y],KA?'k-':'k:'); //kursor 
           kursor(KA,x,x,y,y,Color='Black',id=idFreq);           
		end
        fixd = fi*180/pi;
        zn = fixd>0?'+':'-';
        titStr = [ spf('Y/E ≈ %4s e',mo),upstr([zn,spf('j%s°',abs(fixd))])];
        titStr = [titStr, spf(fHz?'   fₓ≈%4sHz':'   ωₓ≈%4srad/s',fHz?wk/T/2/pi:wk/T) ];
        title(titStr);
       // wypis_OL = sprintf('|Y/E| = %g  arg(Y/E) = %g   f= %4g Hz ', 1, pi, 2*pi   );
    end
    title(titStr);	
    if ~NL
        legend(v.typH?'Y/E':'Y''/E','k')
    end    
 endfunction
function (cursor,msg,ixF,wk,id)	=   overNyquistOL(v,ix,id0,m)
ixF=v.ixF; wk=v.wk;

 if isempty(id0);
	cursor=false; id=-1;
 else 
 	wwOL = [logspace(log10(1/20),log10(10),2000),logspace(log10(10),log10(1000),1000)]	;
	wk_  = wwOL(ix);      
	if ~m & v.KA
      wk = wk_ ;
      ww=logspace(-3,2,2000);
      ww  = unique([ww,logspace(log10(1/2),log10(4),1000)]);        
      ixF = find(ww >= wk, 1);
   end
   cursor=true;	
   id = id0;   
 end 
 if (id==-1) // & ~v.KA
        msg0= v.KA? '(klik) : zablokowanie kursora   ' : ' '; 
        msg = [msg0, '(Shift+klik) : wypis pustej linii w oknie komend'];
 else
 	msg0 = ' (klik): pokazanie kursorów ';
	msg1 = ' (klik): zatrzymanie  (shift+klik) : wypisanie kursorów';
    if v.KW & v.KA; 
            msg= ' (klik): zablokowanie   (shift+klik) : wprowadzenie pozycji kursora';
    elseif v.KW & ~v.KA
            msg= '(klik) : odblokowanie kursora   ;  (←↓|↑→) :  zmiana pozycji  ;  (Shift+klik) : wypis w oknie komend';
    else
        if v.fHz
            msg = spf('%6sHz',wk_/v.T/2/pi);
        else
            msg = spf('%6srad/s',wk_/v.T);
        end    
    end
 end 
 endfunction 
function		(KA,wk)		    =	upNyquistOL(v,m,id)

     wk=v.wk;
     if isempty(id) ; id=-1; end
     wk=v.wk; KA = v.KA;
     xB = v.fHz? 1/2/pi/v.T : 1/v.T;
     switch id
        case [0,-1]
            KA = false; 
            if m ; disp('-') ; end
        case [idUW,idYW,idFreq, 398]
            if m & KA & v.PWW
               strf = 'Częstotliwość fₓ = %7sHz';
               strw = 'Pulsacja ωₓ = %7srad/s';
               wk = dialogX(wk, xB, 0.001, 100, str=v.fHz? strf : strw);
               KA = false; 
            elseif m    
               disp(wypis_OL(v))
            else
               KA = not(KA);
            end  
        otherwise
            disp('??')
     end    
endfunction
function str                    =   wypis_OL(v)
    wk  =   v.wk;
    Z   =   v.Ljw; 
    ww  =   v.wL ; 
    w	= ww(1:length(Z));
    wk	= min(w(end),max(w(1),wk));
    xx	= interp1(w,Z,wk);
    x	= real(xx);
    y	= imag(xx);
    fi	= angle(xx);
    mo	= abs(xx);
    str = sprintf([v.fHz?'fₓ≈%4.2fHz   ':'ωₓ≈%4.2frad/s   ',...
				'|Y/E|',...
				'=%5.3f	 φ≈%+4.1f°'],...
				 v.fHz?wk/2/pi/v.T:wk/v.T,...
				 mo, fi*180/pi);  
endfunction

// #####################################################################################
public	 // schematy.lml, strfind\findstr  
//spec='∙ª°±²³µ¹ºʰʲʳʷʸ˚˟ˡᵃᵅᵇᵈᵉᵍᵏᵐᵒᵗᵘᵛᵝᵢᵣᵤᵥᵦᵧᵨᵩᵪᶢᶤᶩᶴᶻⁿ⁺⁻⁼⁽⁾₊₋₌₍₎ₐₑₒₓe⁻ˢᵀ′²';
function schematy
// Biblioteka 'schematy.lml' 
// do tworzenia schematów blokowych w automatyce.
// Elementy schematu rysowane są na płaszczyźnie 
// liczb zespolnych (Re,Im).
// Typowa linia programu ma format:
// pk = funkcja(  p	 ,	dp	 , styl , tekst , id );
//	 gdzie:
//	 p		: pozycja bieżąca (wejście elementu) 
//	 pk		: pozycja koncowa (wyjście elementu)
//	 dp		: rozmiar elementu (przyrost pozycji)
//	 styl	: łańcuch znaków dot. sposobu wykreślania
//	 tekst	: łancuch znaków do wypisania
//	id		: identyfikator dla interakcji	
//
// funkcje:
//	 napis() , linia() , blok() , wezel() , suma()
//
 
endfunction
function    font =  fs(Size=10,Color=[0,0,0],Bold=false,Italic=false,Underline=false)
	font=fontset('Size',Size,'Color',Color,'Bold',Bold,'Italic',Italic,'Underline',Underline);
endfunction 
function    str  = d2s(num) %l.całkowite w łancuch
	str = sprintf('%d',num);
endfunction 
function  indeks =	znajdz( a,b) % ==strfind(Sysquake 5), ==findstr(Sysquake 4)
nLME=info;
nLME=nLME(5);
if nLME>='6'
   indeks = strfind(a,b);
   else
   indeks = findstr(a,b);
end
endfunction	  
function    str =   upstr(str0)
// górne indeksy - numeryczne i inne możliwe do uzyskania w SegoeUI
for i=1:length(str0)
//⁰¹²³⁴⁵⁶⁷⁸⁹
spec='∙ª°±²³µ¹ºʰʲʳʷʸ˚˟ˡᵃᵅᵇᵈᵉᵍᵏᵐⁿᵒᵗᵘᵛᵝᵢᵣᵤᵥᵦᵧᵨᵩᵪᶢᶤᶩᶴᶻⁿ⁺⁻⁼⁽⁾₊₋₌₍₎ₐₑₒₓe⁻ˢᵀ′²';
  switch str0(i)
    case '0'; x='⁰';
    case '1'; x='¹';
    case '2'; x='²';   
    case '3'; x='³';
    case '4'; x='⁴'; 
    case '5'; x='⁵';
    case '6'; x='⁶'; 
    case '7'; x='⁷';
    case '8'; x='⁸'; 
    case '9'; x='⁹'; 
    case '+'; x='⁺';
    case '-'; x='⁻'; 
    case '='; x='⁼'; 
    case '('; x='⁽'; 
    case ')'; x='⁾';  
    case 'j'; x='ʲ';  
    case '°'; x='˚';
    case 'w'; x='ʷ';   
    case '.'; x='∙';//x='ʻ˙';'̇ ͘'   x='∙';    
    case 's'; x='ˢ';     
    case 'T'; x='ᵀ';  
    case '/'; x='′';
    otherwise;x='ʾ'; 
   end 
   str(i)=x;
 end  
endfunction
function    str =   spf(stf,x=3,nsd=3)// format z przyrostkami,
//	nsd==number of significant digit (3..5) stf:%8s

if ~ischar(stf)
	nsd=x; x=stf; stf='%6s';
end
	str='';
    
 for i=1:length(x)
    xi = x(i); 
  if abs(xi)>=1e18; xi=xi*1e290; end
  if abs(xi)<=1e-18; xi=0.0; end
  
	xs = sprintf('%n',xi);
 if strcmp(xs,'1000.0000e-3'); xs='1.0000e0' ; end     // 2020-05-15
	
  if strcmp(xs,'inf')|strcmp(xs,'-inf')|strcmp(xs,'nan')
	
	xs1=[' ',xs];//sprintf(stf,xs); 
	xs2=' ';
  else
  
	ix = znajdz(xs,'e' );
  //xs	
	if xs(1)=='-'
		xs1=xs(1:nsd+2);
	else
		xs1=['',xs(1:nsd+1)]; // było [' ',xs(... ]
	end
	if xs1(end)=='.';
	   xs1 = [xs1(1:end-1),''];
	end		   
suf =xs(ix+1:end);
	switch suf
		case '0' ; xs2=' ';	 //było ' '
		case '3' ; xs2='k';
		case '6' ; xs2='M'; 
		case '9' ; xs2='G'; 
		case '12'; xs2='T';
        case '15'; xs2='P';
        case '18'; xs2='E'; 
		case '-3';
		if	~isempty(znajdz(xs1,'.'))
				   xs2='m';
		else 
				   xs2='';//' '
		  xs1=strtrim(xs1);
		  if xs1(1)=='-'
			xs1=['-.',xs1(2:end)];
		  else			  
			xs1=[' .', xs1]; 
		  end			 
		end	   
		case '-6'; xs2='μ';
		case '-9'; xs2='n';
		case '-12';xs2='p';
		case '-15';xs2='f';
        case '-18';xs2='a';
		otherwise
			xs2 = '?';
	end 
       
  end	
      
   str=[str,sprintf(stf,[xs1,xs2])] ;  //!! dodałem spacje - nie było!
		 
 end	
endfunction

function	p	=	napis	( p ,dp=0	,just='c'	,txt=''				,font=[]	)
//	pk = napis( p , dp , just,	tekst , id )
// wypisuje wyjustowany tekst na pozycji p	
// just: 2 znaki z zestawu:'c','l','r','b','u', 
// tak jak w funkcji standardowej text() 
//	pk = p + dp
	if isempty(font) 
		text( real(p) , imag(p) , txt , just);
	else
		text( real(p) , imag(p) , txt , just, font);
	end 
	p	=	p + dp;			% aktualizacja pozycji
endfunction 
function	p	=	wezel	( p ,dw=0.75,styl='fk'	,txt=''				,font=[]	)
//			p = wezel ( p , dw	,  styl	 ,	tekst  , id )
//	rysuje na pozycji p węzeł zaczepowy o średnicy dw
//	z opcjonalnym opisem tekst; nie modyfikuje pozycji
	if isempty(dw); dw=0.75; end;
	r	=	abs( dw / 2 );			% promień  okręgu
	z	=	p + j*dw;				% podstawa tekstu
	circle( real ( p ) , imag ( p ) , r , styl );
	if isempty(font)
		text  ( real ( z ) , imag ( z ) , txt , 'b');
	else	
		text  ( real ( z ) , imag ( z ) , txt , 'b');
	end
	p = p; % bez zmiany pozycji
endfunction
function	p	=	suma	( p ,dp=2	,styl='k'	,txt=' +-'						)
//	pk = suma ( p ,	 dp	 ,	styl ,	txt , id )
//Rysuje okrągły symbol	 węzła sumacyjnego o średnicy
//i orientacji dp.	Symbole '+','-', lub ' ' pobrane 
//z łańcucha txt rozmieszczane są w kierunku niezgodnym
//z ruchem zegara,	zaczynając od wyjścia bloku.
//Styl może być podwójny jak w rysuj() 
//	pk = p + dp

	// if nargin < 2 ; dp	 = 2;	end;
	// if nargin < 4 ; txt =' +-';		end;
	// if nargin < 3 || isempty( styl ); styl  ='k';	end;	
	ix	=	znajdz( styl , '|');
	
	znaki = ['	 ',txt]; znaki=znaki(end-2:end);
	
	r	=	dp/2;		% promień (zesp.) okręgu
	c	=	p + r;		% centrum sumatora
	p	=	c + r;		% wyjscie sumatora
	if isempty( ix )				% jeden styl
		circle( real(c) , imag(c) , abs( r ) , styl );		
	else							% dwa style
		styl1 = styl(1:ix-1);
		styl2 = styl(ix+1:end);
		circle( real(c) , imag(c) , abs( r ) , styl1 );
		circle( real(c) , imag(c) , abs( r ) , styl2 );
	end
	
	for n = 1:3
		dz= 0.25 * abs ( r );		% rozmiar znaku
		z = c + 0.5 * r * exp ( n * j * pi/2 );	 % centrum znaku
		
		Zh=[z+dz , z-dz , z+dz];	% końce kreski "horyzontalnej"
		Zw=[z-j*dz , z+j*dz];		% końce kreski wertykalnej	
		if znaki(n) >= '+'; rysuj( Zh ); end;
			  % plot(real(Zh),imag(Zh),'k');
		% end;
		if znaki(n) == '+'; rysuj( Zw ); end
			  % plot(real(Zw),imag(Zw),'k'); end;
	end
endfunction 
function	p	=	linia	( p ,dp=3	,styl='k'	,txt=''		,id=[]	,font=[]	)
//	pk = linia ( p, dp,	  styl , tekst,	 id )
//Linia prosta od p do pk=p+dp z opcjonalnym tekstem.
//Znak '|' w stylu oznacza strzałkę na końcu linii
//i styl podwójny jak w rysuj().
//Przykłady:
//	linia(2+j,3) 
//(cienka czarna pozioma od 2+j do 5+j, bez strzałki)
//	linia(0,3j,'u','fy|R') 
//(gruba czerwona pionowa z zółtą strzałką i literą u) 
 
  % parametry grota strzałki
	dg	= 2.0;//1.8;	% było 1.0
	
	if exist( 'dlug_grota' ); dg = dlug_grota; end;
	sg	=  dg ;
	if exist( 'szer_grota' ); sg = szer_grota; end;
	
	k	=	p	+	dp;			% koniec linii
	d	=	exp(1j * angle(dp));% wersor w kier.dp 
	dd	=	d * d;	% dd: 1-->poziomo; -1-->pionowo
	switch real( dd )
	case 1		% (horyzontalne)
		if (d>0); just = 'rb'; else just='lb'; end;
	case -1		% (pionowe)
		if imag(d)>0 ; just = 'rt'; else just = 'rb';end;
	otherwise	% (ukośne)
		if imag( dd ) > 0;	just='rb';
		else				just='lb'; end		
	end;
	jd	= 0.5j * d * sg ;				% wektor prostopadły do d
	d	=	dg * d ;		
	Wg	= [ k-d+jd ,k,	k-d-jd ];	% wierzchołki grota
	//rysuj([p,k],styl);
	st=styl;
	if znajdz(styl,'f');
		Wg=[Wg,k-d+jd]; 
		st=lower(styl);
	end;
	if znajdz(styl,'|');rysuj([p,k-d],styl); rysuj(Wg,st);
	else rysuj([p,k],styl); end;
	if ~isempty(id);	activeregion(real(Wg),imag(Wg),id);end;
	z	=	k - 1.1* d ;% + dz;			% lekkie odsunięcie od linii (było -1.25*d)
	if isempty(font)
		text( real( z ) , imag( z ) , txt , just);	% opis strzałki
	else
		text( real( z ) , imag( z ) , txt , just,font); % opis strzałki
	end 
	p	=	k;			% aktualizacja pozycji
endfunction
function	p	=	blok	( p ,rozm=3 ,styl='k'	,txt=''		,id=[]	,font=[]	)
//		pk	 =	blok ( p , rozmiar ,  styl ,  txt  , id )
//	Zorientowany poziomo lub pionowo blok z napisem txt
//	który może wyrażać ułamek (txt='licznik|mianownik')
//	Rozmiary i orientacja bloku zależą od rozm = a + j*b
//	  b==0	--> kwadrat o boku |a|,	 dp=a
//	  a==0	--> kwadrat o boku |b|,	 dp=j*b	 
//	  a*b>0 --> prostokąt |a|x|b|,	 dp=a
//	  a*b<0 --> prostokąt |a|x|b|,	 dp=j*b 
// Styl może byc podwójny, 
//	  np 'fy|R' --> żółte tło, gruba czerwona ramka

	a	=	real( rozm );
	b	=	imag( rozm );
	switch ( sign(a) * sign(b) )
	case 1
		dp	=	a;
		dw	=	j*b;
	case -1
		dp	=	j*b;
		dw	=	a;	
	otherwise
		dp	=	rozm; 
		dw	=	j*rozm;
	end
	c	=	p	+	dp/2;	% centrum prostokąa
	w1	=	p	+	dw/2 ;	% wierzchołek 1
	w2	=	w1	+	dp; 
	w3	=	w2	-	dw;
	w4	=	w3	-	dp;
	W	=	[w2,w3,w4,w1,w2];
	rysuj( W , styl );			
	if (~isempty(id));
		activeregion(real(W) , imag(W) , id);
	end

	ixl = znajdz(txt,'|'); % separator num/den

	if isempty(ixl) ; ix=znajdz(txt,';'); else ix=ixl; end
	if isempty( ix )
		if isempty(font)
			text( real( c ), imag( c ), txt )
		else
			text( real( c ), imag( c ), txt, font )
		end
	else
		num = txt( 1	  : ix - 1	);
		den = txt( ix + 1 : end		);
		dc	= j * abs( dw )/4;	
		cn	= c + dc;	% centrum licznika
		cd	= c - dc;	% centrum mianownika
		if isempty(font)
			text ( real( cn ) , imag( cn ), num )
			text ( real( cd ) , imag( cd ), den )
		else
			text ( real( cn ) , imag( cn ), num, font )
			text ( real( cd ) , imag( cd ), den, font )
		end 
		if ~isempty(ixl); linia( c - 0.4 * a , 0.8 * a); end;
	end
	p	=	p	+	dp;		% aktualizacja pozycji
endfunction
function			rysuj	( Z ,styl='k'  )
// funkcja pomocnicza : rysuj( Z, styl )
// wykreśla figurę której wierzchołki są określone
// przez zespolony wektor Z ; styl może być podwójny,
// np.:
//	 'fr|b' - czerwone wypełnienie z niebieską ramką
//Przykłady:
//	rysuj(2+j3,'xr')
//% czerwony krzyżyk na pozycji 2+j3)
//
//	rysuj([0,1,j,0],'fy|')
//% trójkąt prostokątny o wierzchołkach 0, 1, 0+j	 
//% wykreślony czarną kreską z żółtym wypełnieniem
	ix	=	znajdz( styl , '|');
	if isempty( ix )	% jeden styl
		plot( real( Z ) , imag( Z ) , styl);
	else % dwa style
		styl1 = styl(1:ix-1);
		styl2 = styl(ix+1:end);
		plot( real( Z ) , imag( Z ),styl1 ) ;
		plot( real( Z ) , imag( Z ),styl2 ) ;
	end
endfunction
function    k   =   mnoznik ( rozmiar_pix )
% oblicza współczynnik skalujący rozmiary elementów
    rp = rozmiar_pix;
    scale('pixel',rp)
    dX = rp(2)-rp(1);
    dY = rp(4)-rp(3);
    sc=scale;
    dx=sc(2)-sc(1);
    dy=sc(4)-sc(3);
    k=min(dx/dX,dy/dY);
 endfunction // function str  = d2s(num) %l.całkowite w łancuch
function    k   =   k12()
    k = figurestyle('figfont').Size/12;
    // zmiana dzielnika z 12 na mniej - powiększa elementy bez zmiany 
    // rozmiaru czcionki
    //k = mnoznik([-250,250,-150,150]);
endfunction  
 
 
@}
data
{@
%SQ reg_PID_v4a.sq

kyB = 1;
kyR = 1;
yR0 = 0;
yB0 = 0;
winbg = [0.95,0.95,0.95];
WBG = false;
fontSize = 14;
B = false;
I = false;
id = 0;
tol = 5;
tolF = 0;
ixF = 0;
nic = 40;
m = false;
typP = 2;
AltP = true;
typO = 2;
typN = 0;
typH = 1;
typSch = 7;
typReg = 1;
ORA = 0;
PWS = 1;
PWW = true;
KA = false;
KW = true;
AltN = 0;
Awup = 0;
fHz = 1;
typB = 1;
SD = 0;
MD = 1;
pgB = 2;
pgR = 1;
H2O = 0;
ZoS = true;
NTol = 1;
NM = false;
NL = 0;
NG = true;
NU = 1;
NY = false;
NW = true;
NZ = true;
AW = 1;
AZ = 1;
AN = 0;
UN = 0;
LN = 0;
seed = 0.179150573909283;
zrzut = false;
K = 14.08450704225352;
T = 2.5e-3;
p = -1.53169014084507e-3;
b1 = 0;
b2 = 0;
a1 = 1;
a2 = 0.25;
LO = 1;
MO = [0.4,1,1];
nO = 5;
d = 1;
Ts = 5e-2;
Nh = 10000;
h = 5e-2;
tW = 0;
W = 2.943;
tZ0 = 0;
tZ = 0;
Z = 3.799295774647887e-2;
nSigma = 2e-2;
tMax = 40;
wMin = 1e-3;
wMax = 100;
tp = 0;
tk = 32.35099431818171;
wp = 0;
wk = 1;
Kp = 3.52112676056338e-2;
Ti = 10;
b = 0.25;
c = 0;
Td = 0.5;
Nd = 8;
uMax = 10.289674928589654;
uMin = -10.289674928589654;
Ps = class(struct('lti',class(struct('Ts',[],
'var','s'), 'lti'),
'G',reshape({class(struct('num',1,
'den',[1,1.53169014084507e-3]), 'ratfun')},[1,1])), 'tf');
Os = class(struct('lti',class(struct('Ts',[],
'var','s'), 'lti'),
'G',reshape({class(struct('num',1,
'den',1), 'ratfun')},[1,1])), 'tf');
Cs = class(struct('lti',class(struct('Ts',[],
'var','s'), 'lti'),
'G',reshape({class(struct('num',3.52112676056338e-2,
'den',1), 'ratfun')},[1,1])), 'tf');
Fs = class(struct('lti',class(struct('Ts',[],
'var','s'), 'lti'),
'G',reshape({class(struct('num',1,
'den',1), 'ratfun')},[1,1])), 'tf');
Hs = class(struct('lti',class(struct('Ts',[],
'var','s'), 'lti'),
'G',reshape({class(struct('num',1e-12,
'den',1), 'ratfun')},[1,1])), 'tf');
sOL = class(struct('lti',class(struct('Ts',5e-2,
'var','z'), 'lti'),
'a',0.999923418425439,
'b',[0,-0.707547758310473,0,0.707547758310473],
'c',[7.066433191842063e-14
7.066119623354497e-2
0
-2.488070289913555e-15],
'd',[0,-2.499904273031798e-14,1e-12,2.499904273031798e-14
0,-2.499904273031798e-2,0,2.499904273031798e-2
zeros(1,3),1
3.52112676056338e-2,8.802479834619008e-16,3.52112676056338e-14,
-8.802479834619008e-16]), 'ss');
M1 = {2,
1,
1,
10,
0,
0,
0.5,
8,
1,
1,
-0.1,
1,
2,
5};
M2 = {2,
1,
1,
10,
0,
0,
0.5,
8,
1,
1,
-0.1,
1,
2,
5};
M3 = {2,
1,
1,
10,
0,
0,
0.5,
8,
1,
1,
-0.1,
1,
2,
5};
SkU = 0;
t = [0,5e-2,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,
0.7,0.75,0.8,0.85,0.9,0.95,1,1.05,1.1,1.15,1.2,1.25,1.3,1.35,
1.4,1.45,1.5,1.55,1.6,1.65,1.7,1.75,1.8,1.85,1.9,1.95,2,2.05,
2.1,2.15,2.2,2.25,2.3,2.35,2.4,2.45,2.5,2.55,2.6,2.65,2.7,2.75,
2.8,2.85,2.9,2.95,3,3.05,3.1,3.15,3.2,3.25,3.3,3.35,3.4,3.45,
3.5,3.55,3.6,3.65,3.7,3.75,3.8,3.85,3.9,3.95,4,4.05,4.1,4.15,
4.2,4.25,4.3,4.35,4.4,4.45,4.5,4.55,4.6,4.65,4.7,4.75,4.8,4.85,
4.9,4.95,5,5.05,5.1,5.15,5.2,5.25,5.3,5.35,5.4,5.45,5.5,5.55,
5.6,5.65,5.7,5.75,5.8,5.85,5.9,5.95,6,6.05,6.1,6.15,6.2,6.25,
6.3,6.35,6.4,6.45,6.5,6.55,6.6,6.65,6.7,6.75,6.8,6.85,6.9,6.95,
7,7.05,7.1,7.15,7.2,7.25,7.3,7.35,7.4,7.45,7.5,7.55,7.6,7.65,
7.7,7.75,7.8,7.85,7.9,7.95,8,8.05,8.1,8.15,8.2,8.25,8.3,8.35,
8.4,8.45,8.5,8.55,8.6,8.65,8.7,8.75,8.8,8.85,8.9,8.95,9,9.05,
9.1,9.15,9.2,9.25,9.3,9.35,9.4,9.45,9.5,9.55,9.6,9.65,9.7,9.75,
9.8,9.85,9.9,9.95,10,10.05,10.1,10.15,10.2,10.25,10.3,10.35,
10.4,10.45,10.5,10.55,10.6,10.65,10.7,10.75,10.8,10.85,10.9,
10.95,11,11.05,11.1,11.15,11.2,11.25,11.3,11.35,11.4,11.45,11.5,
11.55,11.6,11.65,11.7,11.75,11.8,11.85,11.9,11.95,12,12.05,12.1,
12.15,12.2,12.25,12.3,12.35,12.4,12.45,12.5,12.55,12.6,12.65,
12.7,12.75,12.8,12.85,12.9,12.95,13,13.05,13.1,13.15,13.2,13.25,
13.3,13.35,13.4,13.45,13.5,13.55,13.6,13.65,13.7,13.75,13.8,
13.85,13.9,13.95,14,14.05,14.1,14.15,14.2,14.25,14.3,14.35,14.4,
14.45,14.5,14.55,14.6,14.65,14.7,14.75,14.8,14.85,14.9,14.95,
15,15.05,15.1,15.15,15.2,15.25,15.3,15.35,15.4,15.45,15.5,15.55,
15.6,15.65,15.7,15.75,15.8,15.85,15.9,15.95,16,16.05,16.1,16.15,
16.2,16.25,16.3,16.35,16.4,16.45,16.5,16.55,16.6,16.65,16.7,
16.75,16.8,16.85,16.9,16.95,17,17.05,17.1,17.15,17.2,17.25,17.3,
17.35,17.4,17.45,17.5,17.55,17.6,17.65,17.7,17.75,17.8,17.85,
17.9,17.95,18,18.05,18.1,18.15,18.2,18.25,18.3,18.35,18.4,18.45,
18.5,18.55,18.6,18.65,18.7,18.75,18.8,18.85,18.9,18.95,19,19.05,
19.1,19.15,19.2,19.25,19.3,19.35,19.4,19.45,19.5,19.55,19.6,
19.65,19.7,19.75,19.8,19.85,19.9,19.95,20,20.05,20.1,20.15,20.2,
20.25,20.3,20.35,20.4,20.45,20.5,20.55,20.6,20.65,20.7,20.75,
20.8,20.85,20.9,20.95,21,21.05,21.1,21.15,21.2,21.25,21.3,21.35,
21.4,21.45,21.5,21.55,21.6,21.65,21.7,21.75,21.8,21.85,21.9,
21.95,22,22.05,22.1,22.15,22.2,22.25,22.3,22.35,22.4,22.45,22.5,
22.55,22.6,22.65,22.7,22.75,22.8,22.85,22.9,22.95,23,23.05,23.1,
23.15,23.2,23.25,23.3,23.35,23.4,23.45,23.5,23.55,23.6,23.65,
23.7,23.75,23.8,23.85,23.9,23.95,24,24.05,24.1,24.15,24.2,24.25,
24.3,24.35,24.4,24.45,24.5,24.55,24.6,24.65,24.7,24.75,24.8,
24.85,24.9,24.95,25,25.05,25.1,25.15,25.2,25.25,25.3,25.35,25.4,
25.45,25.5,25.55,25.6,25.65,25.7,25.75,25.8,25.85,25.9,25.95,
26,26.05,26.1,26.15,26.2,26.25,26.3,26.35,26.4,26.45,26.5,26.55,
26.6,26.65,26.7,26.75,26.8,26.85,26.9,26.95,27,27.05,27.1,27.15,
27.2,27.25,27.3,27.35,27.4,27.45,27.5,27.55,27.6,27.65,27.7,
27.75,27.8,27.85,27.9,27.95,28,28.05,28.1,28.15,28.2,28.25,28.3,
28.35,28.4,28.45,28.5,28.55,28.6,28.65,28.7,28.75,28.8,28.85,
28.9,28.95,29,29.05,29.1,29.15,29.2,29.25,29.3,29.35,29.4,29.45,
29.5,29.55,29.6,29.65,29.7,29.75,29.8,29.85,29.9,29.95,30,30.05,
30.1,30.15,30.2,30.25,30.3,30.35,30.4,30.45,30.5,30.55,30.6,
30.65,30.7,30.75,30.8,30.85,30.9,30.95,31,31.05,31.1,31.15,31.2,
31.25,31.3,31.35,31.4,31.45,31.5,31.55,31.6,31.65,31.7,31.75,
31.8,31.85,31.9,31.95,32,32.05,32.1,32.15,32.2,32.25,32.3,32.35,
32.4,32.45,32.5,32.55,32.6,32.65,32.7,32.75,32.8,32.85,32.9,
32.95,33,33.05,33.1,33.15,33.2,33.25,33.3,33.35,33.4,33.45,33.5,
33.55,33.6,33.65,33.7,33.75,33.8,33.85,33.9,33.95,34,34.05,34.1,
34.15,34.2,34.25,34.3,34.35,34.4,34.45,34.5,34.55,34.6,34.65,
34.7,34.75,34.8,34.85,34.9,34.95,35,35.05,35.1,35.15,35.2,35.25,
35.3,35.35,35.4,35.45,35.5,35.55,35.6,35.65,35.7,35.75,35.8,
35.85,35.9,35.95,36,36.05,36.1,36.15,36.2,36.25,36.3,36.35,36.4,
36.45,36.5,36.55,36.6,36.65,36.7,36.75,36.8,36.85,36.9,36.95,
37,37.05,37.1,37.15,37.2,37.25,37.3,37.35,37.4,37.45,37.5,37.55,
37.6,37.65,37.7,37.75,37.8,37.85,37.9,37.95,38,38.05,38.1,38.15,
38.2,38.25,38.3,38.35,38.4,38.45,38.5,38.55,38.6,38.65,38.7,
38.75,38.8,38.85,38.9,38.95,39,39.05,39.1,39.15,39.2,39.25,39.3,
39.35,39.4,39.45,39.5,39.55,39.6,39.65,39.7,39.75,39.8,39.85,
39.9,39.95,40,40.05];
u = [0,0.10362676056338,0.10362676056338,0.10362676056338,0.103626760563381,
0.103626760563381,0.103626760563381,0.103626760563381,0.103626760563381,
0.103626760563381,0.103626760563381,0.103626760563381,0.103626760563381,
0.103626760563381,0.103626760563381,0.103626760563381,0.103626760563381,
0.103626760563381,0.103626760563381,0.103626760563382,0.103626760563382,
0.103626760563382,0.103626760563381,0.103626760563381,0.103626760563381,
0.103626760563381,0.103626760563381,0.103626760563381,0.103626760563381,
0.103626760563381,0.103626760563381,0.10362676056338,0.10362676056338,
0.10362676056338,0.10362676056338,0.10362676056338,0.10362676056338,
0.10362676056338,0.10362676056338,0.103626760563379,0.103626760563379,
0.103626760563379,0.103626760563379,0.103626760563379,0.103626760563379,
0.103626760563379,0.103626760563379,0.103626760563379,0.103626760563378,
0.103626760563378,0.103626760563378,0.103626760563378,0.103626760563378,
0.103626760563378,0.103626760563378,0.103626760563378,0.103626760563378,
0.103626760563377,0.103626760563377,0.103626760563377,0.103626760563377,
0.103626760563377,0.103626760563377,0.103626760563377,0.103626760563377,
0.103626760563376,0.103626760563376,0.103626760563376,0.103626760563376,
0.103626760563376,0.103626760563376,0.103626760563376,0.103626760563376,
0.103626760563376,0.103626760563375,0.103626760563375,0.103626760563375,
0.103626760563375,0.103626760563375,0.103626760563375,0.103626760563375,
0.103626760563375,0.103626760563375,0.103626760563374,0.103626760563374,
0.103626760563374,0.103626760563374,0.103626760563374,0.103626760563374,
0.103626760563374,0.103626760563374,0.103626760563373,0.103626760563373,
0.103626760563373,0.103626760563373,0.103626760563373,0.103626760563373,
0.103626760563373,0.103626760563373,0.103626760563373,0.103626760563372,
0.103626760563372,0.103626760563372,0.103626760563372,0.103626760563372,
0.103626760563372,0.103626760563372,0.103626760563372,0.103626760563372,
0.103626760563371,0.103626760563371,0.103626760563371,0.103626760563371,
0.103626760563371,0.103626760563371,0.103626760563371,0.103626760563371,
0.103626760563370,0.10362676056337,0.10362676056337,0.10362676056337,
0.10362676056337,0.10362676056337,0.10362676056337,0.10362676056337,
0.10362676056337,0.103626760563369,0.103626760563369,0.103626760563369,
0.103626760563369,0.103626760563369,0.103626760563369,0.103626760563369,
0.103626760563369,0.103626760563369,0.103626760563368,0.103626760563368,
0.103626760563368,0.103626760563368,0.103626760563368,0.103626760563368,
0.103626760563368,0.103626760563368,0.103626760563368,0.103626760563367,
0.103626760563367,0.103626760563367,0.103626760563367,0.103626760563367,
0.103626760563367,0.103626760563367,0.103626760563367,0.103626760563366,
0.103626760563366,0.103626760563366,0.103626760563366,0.103626760563366,
0.103626760563366,0.103626760563366,0.103626760563366,0.103626760563366,
0.103626760563365,0.103626760563365,0.103626760563365,0.103626760563365,
0.103626760563365,0.103626760563365,0.103626760563365,0.103626760563365,
0.103626760563365,0.103626760563364,0.103626760563364,0.103626760563364,
0.103626760563364,0.103626760563364,0.103626760563364,0.103626760563364,
0.103626760563364,0.103626760563364,0.103626760563363,0.103626760563363,
0.103626760563363,0.103626760563363,0.103626760563363,0.103626760563363,
0.103626760563363,0.103626760563363,0.103626760563362,0.103626760563362,
0.103626760563362,0.103626760563362,0.103626760563362,0.103626760563362,
0.103626760563362,0.103626760563362,0.103626760563362,0.103626760563361,
0.103626760563361,0.103626760563361,0.103626760563361,0.103626760563361,
0.103626760563361,0.103626760563361,0.103626760563361,0.103626760563361,
0.10362676056336,0.10362676056336,0.10362676056336,0.10362676056336,
0.10362676056336,0.10362676056336,0.10362676056336,0.10362676056336,
0.10362676056336,0.103626760563359,0.103626760563359,0.103626760563359,
0.103626760563359,0.103626760563359,0.103626760563359,0.103626760563359,
0.103626760563359,0.103626760563358,0.103626760563358,0.103626760563358,
0.103626760563358,0.103626760563358,0.103626760563358,0.103626760563358,
0.103626760563358,0.103626760563358,0.103626760563357,0.103626760563357,
0.103626760563357,0.103626760563357,0.103626760563357,0.103626760563357,
0.103626760563357,0.103626760563357,0.103626760563357,0.103626760563356,
0.103626760563356,0.103626760563356,0.103626760563356,0.103626760563356,
0.103626760563356,0.103626760563356,0.103626760563356,0.103626760563356,
0.103626760563355,0.103626760563355,0.103626760563355,0.103626760563355,
0.103626760563355,0.103626760563355,0.103626760563355,0.103626760563355,
0.103626760563355,0.103626760563354,0.103626760563354,0.103626760563354,
0.103626760563354,0.103626760563354,0.103626760563354,0.103626760563354,
0.103626760563354,0.103626760563353,0.103626760563353,0.103626760563353,
0.103626760563353,0.103626760563353,0.103626760563353,0.103626760563353,
0.103626760563353,0.103626760563353,0.103626760563352,0.103626760563352,
0.103626760563352,0.103626760563352,0.103626760563352,0.103626760563352,
0.103626760563352,0.103626760563352,0.103626760563352,0.103626760563351,
0.103626760563351,0.103626760563351,0.103626760563351,0.103626760563351,
0.103626760563351,0.103626760563351,0.103626760563351,0.103626760563351,
0.10362676056335,0.10362676056335,0.10362676056335,0.10362676056335,
0.10362676056335,0.10362676056335,0.10362676056335,0.10362676056335,
0.10362676056335,0.103626760563349,0.103626760563349,0.103626760563349,
0.103626760563349,0.103626760563349,0.103626760563349,0.103626760563349,
0.103626760563349,0.103626760563348,0.103626760563348,0.103626760563348,
0.103626760563348,0.103626760563348,0.103626760563348,0.103626760563348,
0.103626760563348,0.103626760563348,0.103626760563347,0.103626760563347,
0.103626760563347,0.103626760563347,0.103626760563347,0.103626760563347,
0.103626760563347,0.103626760563347,0.103626760563347,0.103626760563346,
0.103626760563346,0.103626760563346,0.103626760563346,0.103626760563346,
0.103626760563346,0.103626760563346,0.103626760563346,0.103626760563346,
0.103626760563345,0.103626760563345,0.103626760563345,0.103626760563345,
0.103626760563345,0.103626760563345,0.103626760563345,0.103626760563345,
0.103626760563345,0.103626760563344,0.103626760563344,0.103626760563344,
0.103626760563344,0.103626760563344,0.103626760563344,0.103626760563344,
0.103626760563344,0.103626760563344,0.103626760563343,0.103626760563343,
0.103626760563343,0.103626760563343,0.103626760563343,0.103626760563343,
0.103626760563343,0.103626760563343,0.103626760563342,0.103626760563342,
0.103626760563342,0.103626760563342,0.103626760563342,0.103626760563342,
0.103626760563342,0.103626760563342,0.103626760563342,0.103626760563341,
0.103626760563341,0.103626760563341,0.103626760563341,0.103626760563341,
0.103626760563341,0.103626760563341,0.103626760563341,0.103626760563341,
0.10362676056334,0.10362676056334,0.10362676056334,0.10362676056334,
0.10362676056334,0.10362676056334,0.10362676056334,0.10362676056334,
0.10362676056334,0.10362676056333,0.103626760563339,0.103626760563339,
0.103626760563339,0.103626760563339,0.103626760563339,0.103626760563339,
0.103626760563339,0.103626760563339,0.103626760563338,0.103626760563338,
0.103626760563338,0.103626760563338,0.103626760563338,0.103626760563338,
0.103626760563338,0.103626760563338,0.103626760563338,0.103626760563337,
0.103626760563337,0.103626760563337,0.103626760563337,0.103626760563337,
0.103626760563337,0.103626760563337,0.103626760563337,0.103626760563337,
0.103626760563336,0.103626760563336,0.103626760563336,0.103626760563336,
0.103626760563336,0.103626760563336,0.103626760563336,0.103626760563336,
0.103626760563336,0.103626760563335,0.103626760563335,0.103626760563335,
0.103626760563335,0.103626760563335,0.103626760563335,0.103626760563335,
0.103626760563335,0.103626760563335,0.103626760563334,0.103626760563334,
0.103626760563334,0.103626760563334,0.103626760563334,0.103626760563334,
0.103626760563334,0.103626760563334,0.103626760563334,0.103626760563333,
0.103626760563333,0.103626760563333,0.103626760563333,0.103626760563333,
0.103626760563333,0.103626760563333,0.103626760563333,0.103626760563333,
0.103626760563332,0.103626760563332,0.103626760563332,0.103626760563332,
0.103626760563332,0.103626760563332,0.103626760563332,0.103626760563332,
0.103626760563332,0.103626760563331,0.103626760563331,0.103626760563331,
0.103626760563331,0.103626760563331,0.103626760563331,0.103626760563331,
0.103626760563331,0.103626760563330,0.10362676056333,0.10362676056333,
0.10362676056333,0.10362676056333,0.10362676056333,0.10362676056333,
0.10362676056333,0.10362676056333,0.10362676056333,0.103626760563329,
0.103626760563329,0.103626760563329,0.103626760563329,0.103626760563329,
0.103626760563329,0.103626760563329,0.103626760563329,0.103626760563329,
0.103626760563328,0.103626760563328,0.103626760563328,0.103626760563328,
0.103626760563328,0.103626760563328,0.103626760563328,0.103626760563328,
0.103626760563328,0.103626760563327,0.103626760563327,0.103626760563327,
0.103626760563327,0.103626760563327,0.103626760563327,0.103626760563327,
0.103626760563327,0.103626760563327,0.103626760563326,0.103626760563326,
0.103626760563326,0.103626760563326,0.103626760563326,0.103626760563326,
0.103626760563326,0.103626760563326,0.103626760563325,0.103626760563325,
0.103626760563325,0.103626760563325,0.103626760563325,0.103626760563325,
0.103626760563325,0.103626760563325,0.103626760563325,0.103626760563324,
0.103626760563324,0.103626760563324,0.103626760563324,0.103626760563324,
0.103626760563324,0.103626760563324,0.103626760563324,0.103626760563324,
0.103626760563323,0.103626760563323,0.103626760563323,0.103626760563323,
0.103626760563323,0.103626760563323,0.103626760563323,0.103626760563323,
0.103626760563323,0.103626760563322,0.103626760563322,0.103626760563322,
0.103626760563322,0.103626760563322,0.103626760563322,0.103626760563322,
0.103626760563322,0.103626760563322,0.103626760563321,0.103626760563321,
0.103626760563321,0.103626760563321,0.103626760563321,0.103626760563321,
0.103626760563321,0.103626760563321,0.103626760563321,0.10362676056332,
0.10362676056332,0.10362676056332,0.10362676056332,0.10362676056332,
0.10362676056332,0.10362676056332,0.10362676056332,0.10362676056332,
0.10362676056331,0.103626760563319,0.103626760563319,0.103626760563319,
0.103626760563319,0.103626760563319,0.103626760563319,0.103626760563319,
0.103626760563319,0.103626760563319,0.103626760563318,0.103626760563318,
0.103626760563318,0.103626760563318,0.103626760563318,0.103626760563318,
0.103626760563318,0.103626760563318,0.103626760563317,0.103626760563317,
0.103626760563317,0.103626760563317,0.103626760563317,0.103626760563317,
0.103626760563317,0.103626760563317,0.103626760563317,0.103626760563317,
0.103626760563316,0.103626760563316,0.103626760563316,0.103626760563316,
0.103626760563316,0.103626760563316,0.103626760563316,0.103626760563316,
0.103626760563315,0.103626760563315,0.103626760563315,0.103626760563315,
0.103626760563315,0.103626760563315,0.103626760563315,0.103626760563315,
0.103626760563315,0.103626760563314,0.103626760563314,0.103626760563314,
0.103626760563314,0.103626760563314,0.103626760563314,0.103626760563314,
0.103626760563314,0.103626760563314,0.103626760563314,0.103626760563313,
0.103626760563313,0.103626760563313,0.103626760563313,0.103626760563313,
0.103626760563313,0.103626760563313,0.103626760563313,0.103626760563313,
0.103626760563312,0.103626760563312,0.103626760563312,0.103626760563312,
0.103626760563312,0.103626760563312,0.103626760563312,0.103626760563312,
0.103626760563312,0.103626760563311,0.103626760563311,0.103626760563311,
0.103626760563311,0.103626760563311,0.103626760563311,0.103626760563311,
0.103626760563311,0.103626760563311,0.10362676056331,0.10362676056331,
0.10362676056331,0.10362676056331,0.10362676056331,0.10362676056331,
0.10362676056331,0.10362676056331,0.10362676056331,0.103626760563309,
0.103626760563309,0.103626760563309,0.103626760563309,0.103626760563309,
0.103626760563309,0.103626760563309,0.103626760563309,0.103626760563309,
0.103626760563308,0.103626760563308,0.103626760563308,0.103626760563308,
0.103626760563308,0.103626760563308,0.103626760563308,0.103626760563308,
0.103626760563308,0.103626760563307,0.103626760563307,0.103626760563307,
0.103626760563307,0.103626760563307,0.103626760563307,0.103626760563307,
0.103626760563307,0.103626760563307,0.103626760563306,0.103626760563306,
0.103626760563306,0.103626760563306,0.103626760563306,0.103626760563306,
0.103626760563306,0.103626760563306,0.103626760563306,0.103626760563305,
0.103626760563305,0.103626760563305,0.103626760563305,0.103626760563305,
0.103626760563305,0.103626760563305,0.103626760563305,0.103626760563305,
0.103626760563304,0.103626760563304,0.103626760563304,0.103626760563304,
0.103626760563304,0.103626760563304,0.103626760563304,0.103626760563304,
0.103626760563304,0.103626760563303,0.103626760563303,0.103626760563303,
0.103626760563303,0.103626760563303,0.103626760563303,0.103626760563303,
0.103626760563303,0.103626760563303,0.103626760563303,0.103626760563302,
0.103626760563302,0.103626760563302,0.103626760563302,0.103626760563302,
0.103626760563302,0.103626760563302,0.103626760563302,0.103626760563302,
0.103626760563301,0.103626760563301,0.103626760563301,0.103626760563301,
0.103626760563301,0.103626760563301,0.103626760563301,0.103626760563301,
0.103626760563301,0.1036267605633,0.1036267605633,0.1036267605633,
0.1036267605633,0.1036267605633,0.1036267605633,0.1036267605633,
0.1036267605633,0.1036267605633,0.103626760563299,0.103626760563299,
0.103626760563299,0.103626760563299,0.103626760563299,0.103626760563299,
0.103626760563299,0.103626760563299,0.103626760563299,0.103626760563298,
0.103626760563298,0.103626760563298,0.103626760563298,0.103626760563298,
0.103626760563298,0.103626760563298,0.103626760563298,0.103626760563298,
0.103626760563297,0.103626760563297,0.103626760563297,0.103626760563297,
0.103626760563297,0.103626760563297,0.103626760563297,0.103626760563297,
0.103626760563297,0.103626760563296,0.103626760563296,0.103626760563296,
0.103626760563296,0.103626760563296,0.103626760563296,0.103626760563296,
0.103626760563296,0.103626760563296,0.103626760563296,0.103626760563295,
0.103626760563295,0.103626760563295,0.103626760563295,0.103626760563295,
0.103626760563295,0.103626760563295,0.103626760563295,0.103626760563295,
0.103626760563294,0.103626760563294,0.103626760563294,0.103626760563294,
0.103626760563294];
y = [0,-1.424644993119122e-3,-2.849289986238245e-3,-4.748646931435499e-3,
-6.647858420887235e-3,-8.546924465732681e-3,-1.044584507711022e-2,
-1.234462026615737e-2,-1.424325004401081e-2,-1.614173442180635e-2,
-1.804007341067896e-2,-1.993826702176274e-2,-2.183631526619097e-2,
-2.373421815509605e-2,-2.563197569960953e-2,-2.752958791086211e-2,
-2.942705479998365e-2,-3.132437637810315e-2,-3.322155265634874e-2,
-3.511858364584772e-2,-3.701546935772653e-2,-3.63216399877823e-2,
-3.303729393705551e-2,-2.975319940672058e-2,-2.646935637751580e-2,
-2.318576483018080e-2,-1.990242474545672e-2,-1.661933610408613e-2,
-1.333649888681313e-2,-1.005391307438325e-2,-6.771578647543512e-3,
-3.48949558704241e-3,-2.076638736299356e-4,3.073916511942492e-3,
6.355245588921946e-3,9.63632337655403e-3,1.291714989408289e-2,
1.619772516075117e-2,1.947804919580007e-2,2.275812201846930e-2,
2.603794364799709e-2,2.931751410362021e-2,3.259683340457396e-2,
3.587590157009214e-2,3.91547186194071e-2,4.243328457174974e-2,
4.571159944634942e-2,4.898966326243408e-2,5.226747603923020e-2,
5.554503779596275e-2,5.882234855185524e-2,6.20994083261297e-2,
6.53762171380067e-2,6.865277500670537e-2,7.192908195144330e-2,
7.520513799143665e-2,7.84809431459000e-2,8.175649743404685e-2,
8.503180087508866e-2,8.830685348823575e-2,9.158165529269700e-2,
9.485620630767964e-2,9.813050655238960e-2,0.101404556046031,
0.104678354807807,0.10795190285692,0.111225200212568,0.11449824689395,
0.117771042920265,0.121043588310706,0.124315883084468,0.127587927260745,
0.130859720858726,0.134131263897602,0.13740255639656,0.140673598374789,
0.143944389851472,0.147214930845793,0.150485221376936,0.153755261464081,
0.157025051126406,0.160294590383091,0.163563879253312,0.166832917756243,
0.170101705911058,0.17337024373693,0.176638531253028,0.179906568478522,
0.18317435543258,0.186441892134367,0.189709178603049,0.192976214857789,
0.196243000917748,0.199509536802087,0.202775822529964,0.206041858120538,
0.209307643592963,0.212573178966394,0.215838464259985,0.219103499492887,
0.22236828468425,0.225632819853222,0.22889710501895,0.232161140200581,
0.235424925417258,0.238688460688124,0.241951746032321,0.245214781468987,
0.248477567017262,0.251740102696283,0.255002388525184,0.258264424523099,
0.261526210709161,0.264787747102502,0.26804903372225,0.271310070587533,
0.274570857717479,0.277831395131212,0.281091682847856,0.284351720886533,
0.287611509266363,0.290871048006467,0.294130337125962,0.297389376643964,
0.300648166579589,0.303906706951949,0.307164997780156,0.310423039083321,
0.313680830880554,0.316938373190961,0.320195666033648,0.323452709427721,
0.326709503392283,0.329966047946434,0.333222343109276,0.336478388899907,
0.339734185337425,0.342989732440925,0.346245030229502,0.349500078722248,
0.352754877938256,0.356009427896615,0.359263728616413,0.362517780116738,
0.365771582416676,0.36902513553531,0.372278439491724,0.375531494304997,
0.378784299994212,0.382036856578444,0.385289164076773,0.388541222508271,
0.391793031892015,0.395044592247076,0.398295903592525,0.401546965947432,
0.404797779330865,0.40804834376189,0.411298659259573,0.414548725842977,
0.417798543531165,0.421048112343197,0.424297432298133,0.427546503415031,
0.430795325712947,0.434043899210935,0.43729222392805,0.440540299883343,
0.443788127095866,0.447035705584667,0.450283035368793,0.453530116467291,
0.456776948899207,0.460023532683582,0.463269867839459,0.466515954385878,
0.469761792341878,0.473007381726497,0.476252722558771,0.479497814857733,
0.482742658642418,0.485987253931856,0.489231600745079,0.492475699101114,
0.495719549018989,0.498963150517729,0.502206503616359,0.505449608333903,
0.50869246468938,0.511935072701812,0.515177432390216,0.518419543773611,
0.52166140687101,0.524903021701429,0.52814438828388,0.531385506637375,
0.534626376780923,0.537866998733532,0.541107372514209,0.544347498141961,
0.547587375635789,0.550827005014698,0.554066386297689,0.55730551950375,
0.560544404651909,0.563783041761134,0.56702143085043,0.570259571938791,
0.573497465045208,0.576735110188673,0.579972507388175,0.583209656662702,
0.58644655803124,0.589683211512775,0.59291961712629,0.596155774890767,
0.599391684825187,0.602627346948529,0.605862761279771,0.609097927837889,
0.612332846641858,0.615567517710651,0.618801941063241,0.622036116718598,
0.62527004469569,0.628503725013486,0.631737157690952,0.634970342747052,
0.638203280200749,0.641435970071006,0.644668412376783,0.647900607137038,
0.651132554370729,0.654364254096812,0.657595706334241,0.66082691110197,
0.66405786841895,0.667288578304132,0.670519040776463,0.673749255854892,
0.676979223558364,0.680208943905823,0.683438416916213,0.686667642608474,
0.689896621001548,0.693125352114372,0.696353835965883,0.699582072575018,
0.70281006196071,0.706037804141892,0.709265299137496,0.712492546966451,
0.715719547647686,0.718946301200127,0.722172807642701,0.725399066994331,
0.72862507927394,0.731850844500449,0.735076362692778,0.738301633869845,
0.741526658050566,0.744751435253858,0.747975965498634,0.751200248803807,
0.754424285188287,0.757648074670985,0.760871617270808,0.764094913006663,
0.767317961897455,0.770540763962088,0.773763319219465,0.776985627688486,
0.780207689388051,0.783429504337057,0.786651072554402,0.78987239405898,
0.793093468869685,0.796314297005409,0.799534878485043,0.802755213327477,
0.805975301551597,0.809195143176291,0.812414738220444,0.815634086702939,
0.818853188642658,0.822072044058481,0.825290652969289,0.828509015393958,
0.831727131351365,0.834945000860385,0.838162623939892,0.841380000608756,
0.84459713088585,0.847814014790041,0.851030652340198,0.854247043555186,
0.857463188453871,0.860679087055115,0.863894739377781,0.867110145440729,
0.870325305262817,0.873540218862904,0.876754886259845,0.879969307472495,
0.883183482519708,0.886397411420334,0.889611094193225,0.892824530857229,
0.896037721431193,0.899250665933964,0.902463364384385,0.905675816801301,
0.908888023203553,0.91209998360998,0.915311698039422,0.918523166510716,
0.921734389042698,0.924945365654202,0.928156096364061,0.931366581191108,
0.934576820154170,0.937786813272079,0.94099656056366,0.94420606204773,
0.947415317743142,0.95062432766869,0.953833091843205,0.957041610285507,
0.960249883014415,0.963457910048746,0.966665691407315,0.969873227108936,
0.973080517172424,0.976287561616588,0.979494360460239,0.982700913722185,
0.985907221421233,0.98911328357618,0.992319100205858,0.995524671329041,
0.99872999696454,1.001935077131155,1.005139911847684,1.008344501132925,
1.011548845005672,1.01475294348472,1.017956796588861,1.021160404336887,
1.024363766747587,1.02756688383975,1.030769755632163,1.033972382143611,
1.037174763392877,1.040376899398745,1.043578790179996,1.04678043575541,
1.049981836143763,1.053182991363835,1.056383901434399,1.05958456637423,
1.0627849862021,1.06598516093678,1.069185090597041,1.07238477520164,
1.075584214769373,1.078783409318976,1.081982358869224,1.085181063438878,
1.0883795230467,1.091577737711449,1.094775707451883,1.097973432286759,
1.101170912234832,1.104368147314856,1.107565137545583,1.110761882945764,
1.11395838353414,1.117154639329486,1.120350650350522,1.123546416616001,
1.126741938144668,1.129937214955264,1.133132247066531,1.136327034497209,
1.139521577266034,1.142715875391745,1.145909928893075,1.149103737788758,
1.152297302097528,1.155490621838115,1.158683697029247,1.161876527689654,
1.165069113838062,1.168261455493195,1.171453552673778,1.174645405398533,
1.17783701368618,1.181028377555439,1.184219497025028,1.187410372113663,
1.19060100284006,1.193791389222933,1.196981531280992,1.20017142903294,
1.203361082497515,1.206550491693395,1.209739656639297,1.212928577353926,
1.216117253855985,1.219305686164178,1.222493874297203,1.225681818273761,
1.228869518112551,1.232056973832266,1.235244185451605,1.238431152989259,
1.241617876463920,1.244804355894281,1.247990591299029,1.251176582696853,
1.25436233010644,1.257547833546473,1.260733093035638,1.263918108592615,
1.267102880236086,1.27028740798473,1.273471691857225,1.276655731872247,
1.279839528048471,1.283023080404571,1.286206388959218,1.289389453731084,
1.292572274738838,1.295754852001148,1.29893718553668,1.302119275364099,
1.305301121502069,1.308482723969251,1.311664082784307,1.314845197965895,
1.318026069532674,1.3212066975033,1.324387081896428,1.327567222730712,
1.330747120024802,1.333926773797352,1.337106184067008,1.34028535085242,
1.343464274172234,1.346642954045095,1.349821390489646,1.352999583524529,
1.356177533168386,1.359355239439854,1.362532702357573,1.365709921940178,
1.368886898206306,1.372063631174588,1.375240120863657,1.378416367292145,
1.38159237047868,1.384768130441890,1.387943647200402,1.391118920772840,
1.394293951177829,1.39746873843399,1.400643282559943,1.40381758357431,
1.406991641495706,1.410165456342749,1.413339028134054,1.416512356888234,
1.419685442623901,1.422858285359666,1.426030885114139,1.429203241905927,
1.432375355753637,1.435547226675874,1.438718854691241,1.441890239818341,
1.445061382075775,1.448232281482141,1.451402938056038,1.454573351816062,
1.457743522780808,1.460913450968870,1.464083136398841,1.46725257908931,
1.470421779058868,1.473590736326101,1.476759450909598,1.479927922827942,
1.483096152099718,1.486264138743508,1.489431882777892,1.49259938422145,
1.495766643092761,1.4989336594103,1.502100433192942,1.505266964458962,
1.508433253227031,1.511599299515722,1.514765103343602,1.51793066472924,
1.521095983691204,1.524261060248057,1.527425894418364,1.530590486220686,
1.533754835673586,1.536918942795622,1.540082807605353,1.543246430121335,
1.546409810362123,1.549572948346271,1.552735844092332,1.555898497618857,
1.559060908944395,1.562223078087494,1.565385005066701,1.568546689900562,
1.57170813260761,1.574869333206416,1.578030291715494,1.581191008153392,
1.584351482538648,1.5875117148898,1.590671705225382,1.593831453563929,
1.596990959923973,1.600150224324045,1.603309246782674,1.60646802731839,
1.609626565949719,1.612784862695185,1.615942917573315,1.619100730602629,
1.622258301801649,1.625415631188895,1.628572718782885,1.631729564602136,
1.634886168665164,1.638042530990482,1.641198651596603,1.644354530502038,
1.647510167725298,1.650665563284891,1.653820717199323,1.6569756294871,
1.660130300166728,1.663284729256707,1.666438916775539,1.669592862741725,
1.672746567173763,1.67590003009014,1.67905325150938,1.68220623144995,
1.685358969930351,1.688511466969076,1.691663722584613,1.694815736795452,
1.697967509620080,1.701119041076982,1.704270331184643,1.707421379961546,
1.710572187426171,1.713722753597,1.716873078492511,1.720023162131181,
1.723173004531485,1.7263226057119,1.729471965690896,1.732621084486947,
1.735769962118521,1.738918598604088,1.742066993962116,1.74521514821107,
1.748363061369414,1.751510733455612,1.754658164488126,1.757805354485415,
1.76095230346593,1.764099011448155,1.76724547845051,1.770391704491486,
1.773537689589509,1.776683433763039,1.779828937030527,1.782974199410422,
1.786119220921171,1.789264001581222,1.792408541409017,1.795552840423001,
1.798696898641616,1.801840716083302,1.804984292766498,1.808127628709642,
1.81127072393117,1.814413578449517,1.817556192283116,1.8206985654504,
1.823840697969799,1.826982589859742,1.830124241138657,1.83326565182497,
1.836406821937107,1.83954775149349,1.842688440512542,1.845828889012684,
1.848969097012336,1.852109064529914,1.855248791583835,1.858388278192515,
1.861527524374368,1.864666530147804,1.867805295531236,1.870943820543073,
1.874082105201723,1.877220149525592,1.880357953533085,1.883495517242607,
1.886632840672560,1.889769923841345,1.892906766767361,1.896043369469007,
1.899179731964679,1.902315854272772,1.905451736411682,1.9085873783997,
1.911722780255516,1.914857941997222,1.917992863643305,1.921127545212152,
1.924261986722149,1.92739618819168,1.930530149639127,1.933663871082872,
1.936797352541294,1.939930594032773,1.943063595575684,1.946196357188404,
1.949328878889308,1.952461160696767,1.955593202629153,1.958725004704836,
1.961856566942186,1.964987889359568,1.968118971975349,1.971249814807893,
1.974380417875564,1.977510781196722,1.980640904789728,1.983770788672941,
1.986900432864718,1.990029837383415,1.993159002247386,1.996287927474985,
1.999416613084564,2.002545059094472,2.005673265523058,2.008801232388671,
2.011928959709656,2.015056447504359,2.018183695791121,2.021310704588286,
2.024437473914193,2.027564003787182,2.03069029422559,2.033816345247755,
2.036942156872009,2.040067729116688,2.043193062000123,2.046318155540644,
2.049443009756582,2.052567624666263,2.055692000288015,2.058816136640162,
2.061940033741028,2.065063691608936,2.068187110262205,2.071310289719155,
2.074433229998106,2.077555931117372,2.08067839309527,2.083800615950113,
2.086922599700213,2.090044344363882,2.09316584995943,2.096287116505164,
2.099408144019392,2.102528932520418,2.105649482026547,2.108769792556081,
2.111889864127321,2.115009696758568,2.118129290468120,2.121248645274274,
2.124367761195324,2.127486638249567,2.130605276455293,2.133723675830796,
2.136841836394363,2.139959758164286,2.14307744115884,2.14619488539634,
2.149312090895044,2.152429057673241,2.155545785749215,2.158662275141245,
2.161778525867611,2.164894537946589,2.168010311396456,2.171125846235486,
2.174241142481952,2.177356200154127,2.180471019270280,2.183585599848681,
2.186699941907597,2.189814045465294,2.192927910540038,2.196041537150092,
2.199154925313716,2.202268075049174,2.205380986374722,2.20849365930862,
2.211606093869123,2.214718290074487,2.217830247942965,2.220941967492809,
2.22405344874227,2.2271646917095,2.230275696413043,2.233386462870847,
2.236496991101258,2.23960728112251,2.242717332952874,2.245827146610562,
2.248936722113824,2.252046059480897,2.255155158730019,2.258264019879425,
2.261372642947349,2.264481027952024,2.267589174911681,2.270697083844551,
2.27380475476886,2.276912187702837,2.280019382664707,2.283126339672694,
2.286233058745021,2.28933953989991,2.292445783155581,2.295551788530252,
2.298657556042141,2.301763085709463,2.304868377550434,2.307973431583266,
2.311078247826172,2.314182826297360,2.317287167015042,2.320391269997422,
2.32349513526270,2.326598762829107,2.329702152714819,2.332805304938046,
2.33590821951699,2.339010896469851,2.342113335814825,2.345215537570108,
2.348317501753897,2.351419228384385,2.354520717479763,2.357621969058222,
2.360722983137953,2.363823759737142,2.366924298873978,2.370024600566644,
2.373124664833325,2.376224491692204,2.379324081161461,2.382423433259275,
2.385522548003826,2.388621425413290,2.391720065505843,2.394818468299658,
2.397916633812909,2.401014562063766,2.4041122530704,2.407209706850979,
2.410306923423671,2.413403902806641,2.416500645018053,2.419597150076071,
2.422693417998856,2.425789448804568,2.428885242511366,2.431980799137407,
2.435076118700848,2.438171201219843,2.441266046712545,2.444360655197106,
2.447455026691677,2.450549161214407];
GM = 44.65368938193523;
PM = 88.88984990496089;
DM = 7.757102762225679e-2;
Ms = 1.032844094674588;
w1 = 5e-2;
ws = 0.5865879252153;
wpi = 1.572312260347582;
wL = [5e-2,5.013269997815586e-2,5.026575214199575e-2,5.039915742622032e-2,
5.053291676801096e-2,5.066703110703627e-2,5.080150138545877e-2,
5.093632854794146e-2,5.107151354165447e-2,5.120705731628170e-2,
5.134296082402761e-2,5.147922501962370e-2,5.161585086033537e-2,
5.175283930596860e-2,5.189019131887667e-2,5.202790786396701e-2,
5.216598990870786e-2,5.230443842313512e-2,5.24432543798591e-2,
5.258243875407172e-2,5.272199252355265e-2,5.28619166686768e-2,
5.300221217242099e-2,5.314288002037081e-2,5.328392120072765e-2,
5.342533670431549e-2,5.356712752458812e-2,5.37092946576357e-2,
5.385183910219248e-2,5.399476185964272e-2,5.41380639340287e-2,
5.42817463320576e-2,5.44258100631081e-2,5.457025613923794e-2,
5.471508557519065e-2,5.486029938840310e-2,5.500589859901235e-2,
5.515188422986297e-2,5.529825730651410e-2,5.544501885724670e-2,
5.559216991307083e-2,5.573971150773281e-2,5.588764467772259e-2,
5.60359704622808e-2,5.61846899034066e-2,5.633380404586409e-2,
5.648331393719050e-2,5.663322062770319e-2,5.678352517050701e-2,
5.693422862150177e-2,5.708533203938962e-2,5.723683648568253e-2,
5.738874302470970e-2,5.75410527236250e-2,5.769376665241487e-2,
5.784688588390494e-2,5.800041149376849e-2,5.815434456053354e-2,
5.830868616559051e-2,5.84634373931999e-2,5.861859933049975e-2,
5.877417306751342e-2,5.893015969715715e-2,5.908656031524778e-2,
5.924337602051052e-2,5.940060791458652e-2,5.955825710204069e-2,
5.971632469036951e-2,5.987481179000866e-2,6.003371951434104e-2,
6.019304897970437e-2,6.035280130539918e-2,6.051297761369657e-2,
6.06735790298461e-2,6.083460668208413e-2,6.099606170164077e-2,
6.115794522274876e-2,6.132025838265106e-2,6.148300232160882e-2,
6.164617818290945e-2,6.18097871128747e-2,6.197383026086861e-2,
6.213830877930563e-2,6.230322382365873e-2,6.246857655246748e-2,
6.263436812734623e-2,6.28005997129922e-2,6.296727247719405e-2,
6.31343875908391e-2,6.330194622792291e-2,6.346994956555623e-2,
6.363839878397425e-2,6.380729506654437e-2,6.397663959977464e-2,
6.414643357332212e-2,6.431667818000119e-2,6.448737461579203e-2,
6.46585240798488e-2,6.483012777450858e-2,6.500218690529893e-2,
6.517470268094723e-2,6.534767631338870e-2,6.552110901777512e-2,
6.569500201248323e-2,6.58693565191233e-2,6.604417376254785e-2,
6.621945497086001e-2,6.639520137542252e-2,6.657141421086594e-2,
6.674809471509765e-2,6.692524412931038e-2,6.710286369799105e-2,
6.728095466892938e-2,6.74595182932267e-2,6.76385558253050e-2,
6.781806852291529e-2,6.799805764714653e-2,6.817852446243482e-2,
6.835947023657206e-2,6.85408962407148e-2,6.87228037493933e-2,
6.890519404052036e-2,6.908806839540035e-2,6.92714280987383e-2,
6.945527443864884e-2,6.963960870666516e-2,6.982443219774827e-2,
7.0009746210295e-2,7.0195552046151e-2,7.038185101061522e-2,7.056864441244873e-2,
7.075593356388911e-2,7.094371978065558e-2,7.11320043819593e-2,
7.132078869051263e-2,7.15100740325383e-2,7.16998617377792e-2,
7.189015313950680e-2,7.208094957453145e-2,7.227225238321127e-2,
7.24640629094617e-2,7.265638250076515e-2,7.284921250817982e-2,
7.304255428634993e-2,7.32364091935147e-2,7.343077859151863e-2,
7.362566384581984e-2,7.382106632550083e-2,7.401698740327752e-2,
7.4213428455509e-2,7.441039086220731e-2,7.460787600704697e-2,
7.480588527737474e-2,7.500442006421946e-2,7.520348176230172e-2,
7.540307177004373e-2,7.560319148957905e-2,7.580384232676261e-2,
7.600502569118043e-2,7.62067429961594e-2,7.640899565877785e-2,
7.66117850998744e-2,7.681511274405906e-2,7.701898001972256e-2,
7.72233883590466e-2,7.74283391980139e-2,7.763383397641826e-2,
7.783987413787475e-2,7.804646112982973e-2,7.825359640357111e-2,
7.84612814142385e-2,7.866951762083344e-2,7.887830648622974e-2,
7.908764947718357e-2,7.929754806434394e-2,7.950800372226296e-2,
7.971901792940609e-2,7.993059216816283e-2,8.014272792485678e-2,
8.035542668975633e-2,8.056868995708502e-2,8.078251922503197e-2,
8.099691599576267e-2,8.121188177542922e-2,8.14274180741811e-2,
8.164352640617570e-2,8.186020828958902e-2,8.207746524662622e-2,
8.229529880353247e-2,8.251371049060361e-2,8.273270184219681e-2,
8.295227439674148e-2,8.317242969674996e-2,8.33931692888284e-2,
8.361449472368793e-2,8.383640755615482e-2,8.405890934518215e-2,
8.428200165386034e-2,8.450568604942823e-2,8.47299641032842e-2,
8.495483739099732e-2,8.518030749231767e-2,8.540637599118843e-2,
8.563304447575644e-2,8.58603145383834e-2,8.608818777565735e-2,
8.63166657884034e-2,8.65457501816955e-2,8.677544256486740e-2,
8.700574455152379e-2,8.723665775955216e-2,8.74681838111338e-2,
8.770032433275517e-2,8.79330809552194e-2,8.816645531365816e-2,
8.840044904754211e-2,8.86350638006936e-2,8.887030122129749e-2,
8.91061629619128e-2,8.934265067948478e-2,8.957976603535579e-2,
8.981751069527774e-2,9.005588632942323e-2,9.029489461239760e-2,
9.05345372232505e-2,9.0774815845488e-2,9.101573216708397e-2,
9.125728788049215e-2,9.14994846826582e-2,9.17423242750313e-2,
9.198580836357663e-2,9.222993865878651e-2,9.247471687569316e-2,
9.272014473388061e-2,9.296622395749645e-2,9.321295627526426e-2,
9.346034342049563e-2,9.370838713110233e-2,9.395708914960865e-2,
9.420645122316342e-2,9.445647510355248e-2,9.470716254721086e-2,
9.495851531523515e-2,9.5210535173395e-2,9.546322389215029e-2,
9.571658324665378e-2,9.597061501677343e-2,9.622532098709994e-2,
9.648070294696047e-2,9.67367626904309e-2,9.699350201634866e-2,
9.725092272832521e-2,9.750902663475882e-2,9.776781554884742e-2,
9.802729128860093e-2,9.82874556768544e-2,9.854831054128064e-2,
9.880985771440304e-2,9.907209903360868e-2,9.933503634116096e-2,
9.959867148421258e-2,9.986300631481869e-2,0.10012804268995,0.100393782471505,
0.100660227526324,0.100927379726202,0.101195240947902,0.101463813073167,
0.101733097988735,0.102003097586352,0.102273813762782,0.102545248419827,
0.102817403464333,0.103090280808208,0.103363882368435,0.103638210067083,
0.103913265831323,0.104189051593441,0.104465569290852,0.10474282086611,
0.105020808266929,0.105299533446187,0.10557899836195,0.105859204977477,
0.106140155261239,0.106421851186931,0.106704294733487,0.106987487885093,
0.107271432631199,0.107556130966537,0.107841584891133,0.108127796410319,
0.108414767534753,0.108702500280426,0.10899099666868,0.109280258726222,
0.109570288485139,0.109861087982909,0.110152659262419,0.110445004371978,
0.110738125365329,0.111032024301669,0.111326703245658,0.111622164267435,
0.111918409442635,0.1122154408524,0.112513260583398,0.112811870727831,
0.113111273383457,0.1134114706536,0.113712464647167,0.114014257478662,
0.114316851268199,0.114620248141522,0.114924450230014,0.115229459670716,
0.11553527860634,0.115841909185286,0.116149353561654,0.116457613895263,
0.116766692351663,0.11707659110215,0.117387312323787,0.117698858199409,
0.11801123091765,0.118324432672948,0.118638465665568,0.118953332101614,
0.119269034193043,0.119585574157684,0.119902954219254,0.120221176607368,
0.120540243557561,0.120860157311301,0.121180920116004,0.12150253422505,
0.1218250018978,0.122148325399614,0.12247250700186,0.122797548981937,
0.123123453623286,0.123450223215412,0.123777860053892,0.124106366440399,
0.124435744682712,0.124765997094736,0.125097125996517,0.125429133714259,
0.125762022580339,0.126095794933324,0.126430453117988,0.126765999485327,
0.127102436392579,0.127439766203236,0.127777991287063,0.128117114020115,
0.128457136784752,0.128798061969658,0.129139891969856,0.129482629186725,
0.129826276028018,0.130170834907877,0.130516308246853,0.13086269847192,
0.131210008016493,0.131558239320445,0.131907394830126,0.132257476998377,
0.13260848828454,0.132960431154522,0.133313308080718,0.133667121542122,
0.134021874024298,0.134377568019406,0.134734206026223,0.135091790550153,
0.135450324103254,0.135809809204248,0.136170248378543,0.136531644158249,
0.136893999082197,0.137257315695954,0.137621596551846,0.13798684420897,
0.138353061233216,0.138720250197285,0.139088413680704,0.139457554269847,
0.139827674557953,0.140198777145141,0.140570864638434,0.140943939651771,
0.141318004806031,0.141693062729047,0.142069116055626,0.14244616742757,
0.142824219493691,0.143203274909829,0.143583336338877,0.143964406450791,
0.144346487922616,0.1447295834385,0.145113695689716,0.145498827374679,
0.145884981198965,0.146272159875332,0.146660366123738,0.147049602671356,
0.147439872252603,0.147831177609147,0.148223521489937,0.148616906651215,
0.149011335856539,0.149406811876801,0.149803337490249,0.150200915482502,
0.150599548646572,0.150999239782886,0.1513999916993,0.151801807211126,
0.152204689141145,0.15260864031963,0.153013663584366,0.15341976178067,
0.153826937761409,0.154235194387023,0.154644534525544,0.155054961052613,
0.155466476851505,0.155879084813149,0.156292787836142,0.156707588826777,
0.157123490699061,0.157540496374731,0.157958608783283,0.158377830861984,
0.158798165555899,0.159219615817908,0.159642184608729,0.160065874896935,
0.160490689658982,0.160916631879221,0.161343704549927,0.161771910671314,
0.16220125325156,0.162631735306827,0.16306335986128,0.163496129947112,
0.163930048604563,0.164365118881941,0.164801343835645,0.165238726530186,
0.165677270038207,0.166116977440507,0.16655785182606,0.16699989629204,
0.16744311394384,0.167887507895094,0.1683330812677,0.168779837191843,
0.169227778806013,0.169676909257031,0.17012723170007,0.170578749298677,
0.171031465224792,0.171485382658778,0.171940504789435,0.172396834814029,
0.172854375938308,0.173313131376531,0.173773104351486,0.174234298094517,
0.174696715845539,0.175160360853071,0.175625236374251,0.17609134567486,
0.17655869202935,0.17702727872086,0.177497109041245,0.177968186291095,
0.17844051377976,0.178914094825374,0.179388932754876,0.179865030904036,
0.180342392617475,0.180821021248693,0.18130092016009,0.181782092722987,
0.182264542317656,0.182748272333339,0.183233286168272,0.183719587229711,
0.184207178933955,0.184696064706368,0.185186247981408,0.185677732202646,
0.186170520822793,0.186664617303721,0.187160025116495,0.187656747741387,
0.188154788667908,0.188654151394831,0.189154839430213,0.189656856291423,
0.190160205505162,0.190664890607495,0.191170915143869,0.191678282669141,
0.192186996747604,0.192697060953009,0.193208478868592,0.1937212540871,
0.194235390210814,0.194750890851575,0.195267759630812,0.195786000179563,
0.196305616138503,0.196826611157972,0.197348988897995,0.197872753028312,
0.198397907228402,0.198924455187509,0.19945240060467,0.199981747188738,
0.200512498658408,0.201044658742247,0.201578231178716,0.202113219716198,
0.202649628113025,0.203187460137502,0.203726719567938,0.204267410192667,
0.204809535810077,0.205353100228639,0.20589810726693,0.206444560753663,
0.206992464527711,0.207541822438136,0.208092638344216,0.208644916115469,
0.209198659631686,0.209753872782953,0.210310559469681,0.210868723602632,
0.211428369102949,0.211989499902178,0.212552119942304,0.213116233175771,
0.213681843565512,0.214248955084981,0.214817571718175,0.215387697459664,
0.215959336314623,0.216532492298853,0.217107169438815,0.217683371771655,
0.218261103345235,0.218840368218158,0.219421170459802,0.22000351415034,
0.22058740338078,0.221172842252981,0.221759834879694,0.222348385384581,
0.222938497902252,0.223530176578286,0.224123425569268,0.224718249042813,
0.225314651177597,0.225912636163387,0.226512208201067,0.227113371502673,
0.227716130291419,0.228320488801727,0.228926451279257,0.229534021980938,
0.230143205174996,0.230754005140985,0.231366426169816,0.231980472563791,
0.232596148636627,0.233213458713491,0.23383240713103,0.234452998237398,
0.235075236392291,0.235699125966976,0.23632467134431,0.236951876918821,
0.237580747096643,0.238211286295643,0.238843498945401,0.239477389487255,
0.240112962374331,0.240750222071571,0.241389173055769,0.2420298198156,
0.242672166851652,0.243316218676457,0.243961979814523,0.244609454802368,
0.245258648188548,0.245909564533691,0.246562208410529,0.247216584403932,
0.247872697110935,0.248530551140776,0.249190151114925,0.249851501667117,
0.250514607443386,0.251179473102095,0.251846103313971,0.252514502762139,
0.253184676142151,0.25385662816202,0.254530363542256,0.255205887015897,
0.255883203328542,0.256562317238385,0.257243233516248,0.257925956945615,
0.258610492322665,0.259296844456307,0.259985018168211,0.260675018292846,
0.261366849677511,0.262060517182368,0.26275602568048,0.263453380057843,
0.264152585213418,0.26485364605917,0.265556567520101,0.266261354534282,
0.266968012052891,0.267676545040246,0.268386958473839,0.269099257344375,
0.269813446655802,0.27052953142534,0.271247516683563,0.271967407474337,
0.272689208854956,0.273412925896124,0.274138563682002,0.274866127310248,
0.275595621892045,0.276327052552143,0.277060424428894,0.277795742674285,
0.278533012453978,0.279272238947345,0.280013427347502,0.280756582861349,
0.281501710709605,0.282248816126845,0.282997904361536,0.283748980676074,
0.284502050346823,0.285257118664149,0.28601419093246,0.28677327247024,
0.28753436861008,0.288297484698762,0.2890626260972,0.289829798180575,
0.290599006338325,0.291370255974189,0.292143552506249,0.292918901366968,
0.293696308003225,0.294475777876354,0.295257316462187,0.296040929251084,
0.296826621747981,0.297614399472422,0.298404267958599,0.299196232755393,
0.299990299426412,0.300786473550029,0.301584760719422,0.302385166542614,
0.303187696642511,0.303992356656943,0.304799152238701,0.305608089055581,
0.306419172790420,0.307232409141136,0.308047803820772,0.308865362557531,
0.309685091094821,0.31050699519129,0.311331080620872,0.312157353172825,
0.312985818651769,0.313816482877733,0.314649351686189,0.315484430928099,
0.316321726469952,0.317161244193808,0.318002989997336,0.318846969793859,
0.319693189512393,0.32054165509769,0.32139237251028,0.322245347726511,
0.323100586738594,0.323958095554641,0.324817880198711,0.325679946710851,
0.326544301147137,0.32741094957972,0.328279898096864,0.329151152802993,
0.330024719818732,0.330900605280948,0.331778815342799,0.33265935617377,
0.333542233959722,0.334427454902932,0.335315025222138,0.336204951152584,
0.337097238946061,0.337991894870952,0.338888925212276,0.339788336271735,
0.340690134367752,0.341594325835522,0.342500917027053,0.34340991431121,
0.344321324073762,0.345235152717425,0.34615140666191,0.347070092343963,
0.347991216217414,0.348914784753224,0.349840804439524,0.350769281781667,
0.35170022330227,0.352633635541262,0.353569525055929,0.354507898420959,
0.355448762228489,0.356392123088154,0.357337987627128,0.358286362490176,
0.359237254339695,0.360190669855768,0.361146615736204,0.362105098696589,
0.363066125470332,0.364029702808713,0.364995837480929,0.365964536274142,
0.36693580599353,0.367909653462329,0.368886085521884,0.369865109031699,
0.370846730869481,0.371830957931192,0.372817797131095,0.373807255401803,
0.374799339694329,0.375794056978134,0.376791414241176,0.377791418489958,
0.37879407674958,0.379799396063784,0.38080738349501,0.381818046124437,
0.382831391052041,0.383847425396641,0.384866156295947,0.385887590906615,
0.386911736404293,0.387938599983675,0.388968188858548,0.390000510261844,
0.391035571445695,0.392073379681475,0.393113942259859,0.394157266490872,
0.395203359703938,0.396252229247934,0.397303882491242,0.398358326821798,
0.399415569647147,0.400475618394493,0.401538480510751,0.402604163462601,
0.40367267473654,0.404744021838933,0.405818212296067,0.406895253654206,
0.407975153479638,0.409057919358736,0.410143558898003,0.411232079724134,
0.412323489484061,0.413417795845014,0.414515006494572,0.415615129140714,
0.416718171511878,0.417824141357013,0.418933046445634,0.420044894567876,
0.421159693534549,0.422277451177192,0.42339817534813,0.424521873920528,
0.425648554788447,0.426778225866897,0.427910895091895,0.429046570420522,
0.430185259830975,0.431326971322625,0.432471712916076,0.433619492653215,
0.434770318597276,0.435924198832889,0.437081141466144,0.438241154624641,
0.439404246457555,0.440570425135685,0.441739698851517,0.44291207581928,
0.444087564275004,0.445266172476575,0.446447908703799,0.447632781258453,
0.44882079846435,0.450011968667392,0.451206300235632,0.452403801559333,
0.453604481051024,0.454808347145561,0.456015408300187,0.45722567299459,
0.458439149730963,0.459655847034065,0.460875773451278,0.462098937552668,
0.46332534793105,0.46455501320204,0.465787942004121,0.467024142998706,
0.468263624870189,0.469506396326018,0.470752466096748,0.472001842936104,
0.473254535621047,0.474510552951828,0.475769903752057,0.477032596868759,
0.478298641172441,0.479568045557152,0.480840818940545,0.482116970263942,
0.483396508492394,0.484679442614745,0.485965781643696,0.487255534615868,
0.488548710591865,0.489845318656337,0.491145367918045,0.492448867509926,
0.493755826589155,0.495066254337209,0.496380159959934,0.497697552687607,
0.499018441775004,0.500342836501463,0.501670746170946,0.503002180112112,
0.504337147678376,0.505675658247978,0.507017721224047,0.508363346034668,
0.509712542132949,0.511065318997085,0.512421686130427,0.513781653061549,
0.515145229344311,0.516512424557933,0.517883248307054,0.519257710221806,
0.52063581995788,0.522017587196591,0.52340302164495,0.52479213303573,
0.526184931127533,0.527581425704864,0.528981626578194,0.530385543584029,
0.531793186584985,0.53320456546985,0.534619690153658,0.53603857057776,
0.537461216709887,0.538887638544227,0.540317846101492,0.54175184942899,
0.543189658600692,0.544631283717308,0.546076734906353,0.547526022322223,
0.548979156146261,0.550436146586833,0.551897003879398,0.55336173828658,
0.554830360098238,0.556302879631542,0.557779307231045,0.559259653268752,
0.560743928144196,0.562232142284511,0.563724306144504,0.56522043020673,
0.566720524981563,0.568224601007273,0.569732668850099,0.57124473910432,
0.572760822392336,0.574280929364735,0.575805070700376,0.577333257106455,
0.578865499318588,0.580401808100883,0.581942194246015,0.583486668575303,
0.585035241938786,0.5865879252153,0.588144729312550,0.589705665167195,
0.591270743744916,0.592839976040499,0.594413373077909,0.595990945910368,
0.597572705620436,0.599158663320083,0.600748830150772,0.602343217283535,
0.603941835919052,0.605544697287729,0.607151812649778,0.608763193295296,
0.610378850544343,0.611998795747024,0.613623040283564,0.615251595564395,
0.61688447303023,0.618521684152145,0.620163240431663,0.62180915340083,
0.623459434622298,0.625114095689406,0.626773148226264,0.62843660388783,
0.630104474359995,0.631776771359664,0.633453506634840,0.635134691964703,
0.636820339159698,0.638510460061612,0.640205066543661,0.641904170510572,
0.64360778389867,0.645315918675956,0.647028586842194,0.648745800428997,
0.65046757149990,0.652193912150492,0.653924834508407,0.655660350733503,
0.657400473017903,0.659145213586085,0.660894584694973,0.662648598634019,
0.664407267725294,0.666170604323569,0.667938620816404,0.66971132962424,
0.671488743200477,0.673270874031569,0.675057734637108,0.676849337569913,
0.67864569541612,0.680446820795265,0.682252726360380,0.684063424798075,
0.685878928828633,0.687699251206096,0.689524404718352,0.691354402187233,
0.693189256468597,0.695028980452422,0.696873587062896,0.698723089258508,
0.700577500032140,0.702436832411154,0.704301099457491,0.706170314267754,
0.708044489973306,0.709923639740362,0.711807776770079,0.713696914298650,
0.715591065597397,0.717490243972862,0.719394462766906,0.721303735356799,
0.72321807515531,0.72513749561081,0.727062010207361,0.72899163246481,
0.730926375938887,0.732866254221299,0.734811280939826,0.736761469758413,
0.738716834377274,0.740677388532977,0.742643145998554,0.744614120583586,
0.746590326134306,0.748571776533693,0.750558485701575,0.75255046759472,
0.75454773620694,0.756550305569184,0.75855818974964,0.760571402853834,
0.762589959024727,0.764613872442816,0.766643157326233,0.768677827930843,
0.770717898550349,0.772763383516387,0.774814297198632,0.776870654004894,
0.778932468381221,0.780999754812003,0.783072527820068,0.785150801966791,
0.787234591852192,0.789323912115038,0.791418777432949,0.793519202522498,
0.795625202139317,0.797736791078199,0.799853984173203,0.801976796297756,
0.80410524236476,0.806239337326696,0.808379096175728,0.810524533943811,
0.812675665702794,0.814832506564524,0.81699507168096,0.81916337624427,
0.821337435486943,0.823517264681897,0.825702879142582,0.82789429422309,
0.830091525318265,0.832294587863806,0.834503497336381,0.836718269253732,
0.838938919174782,0.841165462699754,0.843397915470268,0.84563629316946,
0.847880611522087,0.850130886294642,0.85238713329546,0.854649368374832,
0.856917607425117,0.85919186638085,0.861472161218858,0.86375850795837,
0.86605092266113,0.86834942143151,0.870654020416622,0.872964735806433,
0.87528158383388,0.877604580774978,0.879933742948944,0.882269086718303,
0.884610628489005,0.886958384710543,0.889312371876067,0.8916726065225,
0.894039105230654,0.896411884625346,0.898790961375514,0.901176352194337,
0.903568073839352,0.905966143112568,0.908370576860588,0.910781391974724,
0.913198605391119,0.915622234090866,0.918052295100123,0.920488805490237,
0.922931782377862,0.925381242925080,0.927837204339519,0.930299683874479,
0.93276869882905,0.935244266548231,0.937726404423058,0.940215129890719,
0.942710460434685,0.945212413584824,0.947721006917531,0.950236258055846,
0.952758184669584,0.955286804475453,0.957822135237182,0.960364194765645,
0.962913000918986,0.965468571602744,0.968030924769980,0.970600078421403,
0.973176050605495,0.975758859418638,0.978348523005242,0.980945059557873,
0.983548487317382,0.986158824573026,0.988776089662606,0.991400300972591,
0.994031476938246,0.996669636043764,0.999314796822396,1.001966977856579,
1.004626197778068,1.007292475268066,1.009965829057358,1.012646277926439,
1.015333840705648,1.018028536275298,1.020730383565813,1.023439401557856,
1.026155609282467,1.028879025821193,1.031609670306222,1.034347561920522,
1.03709271989797,1.039845163523490,1.042604912133191,1.045371985114496,
1.048146401906284,1.050928181999026,1.053717344934918,1.056513910308023,
1.059317897764408,1.062129327002276,1.064948217772114,1.067774589876822,
1.070608463171863,1.07344985756539,1.076298793018396,1.07915528954485,
1.082019367211837,1.084891046139701,1.087770346502185,1.090657288526573,
1.093551892493833,1.096454178738757,1.099364167650106,1.102281879670756,
1.105207335297834,1.108140555082868,1.111081559631930,1.114030369605779,
1.116987005720012,1.1199514887452,1.122923839507041,1.125904078886507,
1.128892227819983,1.131888307299423,1.134892338372492,1.137904342142717,
1.140924339769633,1.143952352468931,1.146988401512609,1.150032508229123,
1.153084694003533,1.156144980277655,1.159213388550212,1.162289940376983,
1.165374657370958,1.168467561202488,1.171568673599436,1.17467801634733,
1.177795611289518,1.180921480327321,1.184055645420185,1.187198128585836,
1.190348951900436,1.193508137498736,1.196675707574234,1.199851684379328,
1.203036090225476,1.206228947483348,1.209430278582988,1.212640106013966,
1.215858452325545,1.21908534012683,1.222320792086928,1.225564830935116,
1.228817479460989,1.232078760514628,1.235348697006759,1.238627311908912,
1.241914628253583,1.245210669134396,1.248515457706266,1.251829017185563,
1.255151370850271,1.258482542040153,1.261822554156917,1.26517143066438,
1.268529195088631,1.271895871018197,1.27527148210420,1.27865605206056,
1.282049604664114,1.285452163754787,1.288863753235799,1.292284397073804,
1.295714119299061,1.299152944005605,1.302600895351417,1.306057997558595,
1.309524274913520,1.312999751767032,1.316484452534594,1.319978401696470,
1.323481623797896,1.326994143449249,1.330515985326222,1.334047174169997,
1.337587734787422,1.341137692051177,1.34469707089996,1.348265896338653,
1.351844193438501,1.355431987337289,1.359029303239516,1.362636166416576,
1.366252602206933,1.369878636016298,1.373514293317808,1.377159599652207,
1.380814580628026,1.384479261921758,1.388153669278043,1.391837828509846,
1.39553176549863,1.399235506194588,1.402949076616726,1.406672502853142,
1.410405811061163,1.414149027467536,1.417902178368616,1.421665290130549,
1.425438389189454,1.429221502051612,1.433014655293655,1.436817875562743,
1.440631189576765,1.444454624124514,1.448288206065883,1.452131962332049,
1.455985919925666,1.459850105921052,1.463724547464382,1.467609271773876,
1.47150430613999,1.47540967792561,1.479325414566242,1.483251543570208,
1.487188092518836,1.491135089066653,1.495092560941584,1.499060535945142,
1.503039041952626,1.507028106913315,1.511027758850668,1.515038025862515,
1.519058936121259,1.523090517874073,1.527132799443098,1.531185809225641,
1.535249575694377,1.539324127397545,1.543409492959152,1.547505701079176,
1.551612780533761,1.555730760175424,1.559859668933257,1.563999535813128,
1.568150389897891,1.572312260347582,1.576485176399627,1.580669167369052,
1.584864262648681,1.58907049170935,1.593287884100108,1.597516469448429,
1.601756277460417,1.606007337921016,1.61026968069422,1.614543335723283,
1.618828333030926,1.623124702719551,1.627432474971452,1.631751680049028,
1.636082348294993,1.640424510132591,1.644778196065809,1.649143436679592,
1.653520262640055,1.657908704694707,1.662308793672654,1.666720560484826,
1.671144036124191,1.67557925166596,1.680026238267858,1.684485027170245,
1.688955649696432,1.69343813725285,1.697932521329284,1.702438833499093,
1.706957105419433,1.711487368831475,1.716029655560633,1.720583997516787,
1.725150426694502,1.729728975173259,1.73431967511767,1.738922558777746,
1.743537658489036,1.748165006672944,1.752804635836909,1.757456578574649,
1.762120867566383,1.766797535579063,1.771486615466606,1.77618814017012,
1.780902142718145,1.785628656226873,1.790367713900387,1.795119349030898,
1.799883594998967,1.804660485273755,1.809450053413246,1.814252333064486,
1.819067357963823,1.82389516193713,1.82873577890009,1.833589242858347,
1.838455587907828,1.843334848234945,1.848227058116839,1.853132251921621,
1.858050464108618,1.862981729228611,1.867926081924079,1.87288355692944,
1.877854189071299,1.88283801326869,1.887835064533325,1.892845377969833,
1.897868988776012,1.902905932243077,1.907956243755901,1.913019958793275,
1.918097112928146,1.923187741827873,1.928291881254476,1.933409567064886,
1.938540835211202,1.943685721740936,1.948844262797273,1.95401649461932,
1.959202453542361,1.96440217599812,1.969615698515005,1.974843057718371,
1.98008429033078,1.985339433172252,1.990608523160529,1.995891597311334,
2.001188692738626,2.006499846654869,2.011825096371285,2.01716447929812,
2.022518032944912,2.027885794920744,2.033267802934514,2.038664094795202,
2.044074708412130,2.049499681795233,2.054939053055325,2.060392860404366,
2.065861142155728,2.071343936724469,2.076841282627599,2.082353218484356,
2.087879783016468,2.093421015048434,2.098976953507792,2.104547637425393,
2.110133105935678,2.11573339827695,2.121348553791648,2.126978611926630,
2.132623612233440,2.138283594368600,2.143958598093874,2.149648663276556,
2.155353829889746,2.161074138012636,2.166809627830784,2.172560339636404,
2.178326313828643,2.18410759091387,2.189904211505956,2.19571621632655,
2.201543646205418,2.20738654208063,2.213244944998942,2.219118896116039,
2.225008436696835,2.230913608115759,2.236834451857049,2.242771009515042,
2.248723322794466,2.254691433510733,2.260675383590232,2.26667521507063,
2.272690970101155,2.278722690942903,2.284770419969130,2.290834199665548,
2.296914072630634,2.303010081575912,2.309122269326268,2.315250678820243,
2.321395353110337,2.327556335363313,2.333733668860497,2.339927396998084,
2.346137563287441,2.352364211355418,2.358607384944646,2.364867127913853,
2.371143484238165,2.377436498009421,2.383746213436475,2.390072674845516,
2.396415926680373,2.402776013502829,2.409152979992933,2.415546870949316,
2.421957731289503,2.428385606050231,2.434830540387768,2.44129257957822,
2.447771769017861,2.454268154223444,2.460781780832523,2.467312694603779,
2.473860941417329,2.480426567275062,2.487009618300954,2.493610140741390,
2.500228180965502,2.506863785465476,2.513517000856895,2.520187873879056,
2.526876451395302,2.533582780393355,2.540306907985639,2.547048881409615,
2.553808748028113,2.560586555329664,2.567382350928830,2.57419618256654,
2.581028098110457,2.587878145555234,2.594746373022938,2.601632828763338,
2.608537561154266,2.615460618701943,2.622402050041327,2.629361903936453,
2.636340229280777,2.643337075097514,2.650352490539993,2.657386524891991,
2.664439227568087,2.671510648114004,2.678600836206959,2.685709841656017,
2.69283771440243,2.699984504519998,2.707150262215416,2.714335037828626,
2.721538881833176,2.728761844836566,2.736003977580612,2.743265330941797,
2.750545955931628,2.757845903697003,2.765165225520559,2.772503972821036,
2.779862197153642,2.787239950210413,2.794637283820572,2.802054249950901,
2.809490900706101,2.816947288329155,2.824423465201704,2.831919483844404,
2.839435396917309,2.846971257220226,2.854527117693094,2.862103031416357,
2.86969905161133,2.877315231640583,2.884951625008306,2.89260828536069,
2.900285266486306,2.907982622316475,2.915700406925652,2.923438674531812,
2.931197479496818,2.938976876326812,2.946776919672593,2.954597664330006,
2.962439165240324,2.97030147749063,2.978184656314216,2.986088757090955,
2.9940138353477,3.00195994675867,3.009927147145871,3.01791549247941,
3.025925038877975,3.03395584260918,3.042007960089978,3.050081447887056,
3.058176362717219,3.066292761447805,3.074430701097075,3.082590238834618,
3.090771431981753,3.098974338011926,3.10719901455112,3.115445519378256,
3.1237139104255,3.13200424577916,3.140316583679147,3.14865098252028,
3.157007500852296,3.165386197380314,3.173787130965255,3.182210360624263,
3.190655945531105,3.199123945016601,3.207614418569031,3.216127425834559,
3.224663026617652,3.233221280881494,3.241802248748413,3.250405990500302,
3.25903256657904,3.267682037586924,3.276354464287085,3.28504990760391,
3.293768428623516,3.30251008859409,3.311274948926406,3.320063071194216,
3.328874517134686,3.337709348648832,3.346567627801957,3.355449416824082,
3.364354778110393,3.373283774221668,3.382236467884721,3.391212921992845,
3.40021319960625,3.409237363952507,3.418285478426998,3.427357606593352,
3.436453812183896,3.445574159100103,3.454718711413039,3.463887533363821,
3.473080689364054,3.482298243996295,3.491540262014504,3.500806808344493,
3.510097948084395,3.519413746505108,3.528754269050760,3.538119581339167,
3.547509749162295,3.556924838486724,3.566364915454107,3.575830046381637,
3.585320297762514,3.59483573626640,3.604376428739935,3.613942442207119,
3.623533843869866,3.633150701108435,3.642793081481914,3.65246105272869,
3.662154682766933,3.671874039695063,3.681619191792233,3.691390207518812,
3.701187155516860,3.711010104610614,3.720859123806972,3.730734282295975,
3.740635649451293,3.750563294830716,3.760517288176636,3.770497699416550,
3.780504598663534,3.790538056216748,3.800598142561925,3.810684928371865,
3.82079848450693,3.830938882015578,3.841106192134775,3.851300486290585,
3.861521836098630,3.871770313364601,3.88204599008476,3.892348938446444,
3.90267923082857,3.913036939802183,3.923422138130875,3.933834898771397,
3.94427529487411,3.954743399783518,3.965239287038782,3.975763030374235,
3.986314703719904,3.996894381202023,4.007502137143557,4.018138046064725,
4.028802182683524,4.039494621916248,4.050215438878026,4.060964708883338,
4.071742507446546,4.082548910282433,4.093383993306724,4.104247832636628,
4.115140504591369,4.126062085692719,4.13701265266554,4.147992282438321,
4.159001052143723,4.170039039119115,4.181106320907117,4.192202975256150,
4.203329080120974,4.214484713663251,4.225669954252076,4.236884880464536,
4.248129571086265,4.259404105111991,4.270708561746094,4.282043020403167,
4.293407560708565,4.304802262498967,4.316227205822944,4.327682470941509,
4.339168138328695,4.35068428867211,4.362231002873505,4.373808362049345,
4.385416447531381,4.397055340867212,4.408725123820874,4.420425878373396,
4.432157686723389,4.443920631287618,4.455714794701578,4.46754025982008,
4.479397109717858,4.491285427690076,4.503205297252998,4.515156802144530,
4.527140026324826,4.53915505397686,4.551201969507034,4.563280857545762,
4.575391802948065,4.587534890794177,4.599710206390128,4.611917835268351,
4.624157863188283,4.636430376136968,4.648735460329654,4.661073202210415,
4.673443688452737,4.685847005960141,4.698283241866791,4.710752483538102,
4.723254818571363,4.735790334796341,4.748359120275903,4.760961263306636,
4.773596852419468,4.786265976380283,4.798968724190556,4.811705185087969,
4.824475448547040,4.837279604279751,4.850117742236180,4.862989952605140,
4.875896325814795,4.888836952533311,4.901811923669483,4.91482133037338,
4.927865264036988,4.94094381629484,4.954057079024671,4.967205144348058,
4.980388104631066,4.993606052484910,5.006859080766584,5.020147282579523,
5.033470751274274,5.046829580449114,5.060223863950748,5.073653695874949,
5.087119170567205,5.100620382623415,5.114157426890519,5.127730398467195,
5.141339392704511,5.15498450520658,5.168665831831275,5.182383468690849,
5.196137512152660,5.209928058839806,5.223755205631833,5.237619049665412,
5.251519688334994,5.265457219293536,5.279431740453149,5.293443349985813,
5.307492146324062,5.321578228161649,5.335701694454284,5.349862644420285,
5.364061177541308,5.378297393563037,5.392571392495862,5.406883274615625,
5.421233140464276,5.43562109085061,5.450047226851008,5.464511649810034,
5.479014461341279,5.493555763327986,5.508135657923813,5.522754247553534,
5.537411634913739,5.552107922973601,5.566843214975547,5.58161761443602,
5.596431225146230,5.61128415117277,5.626176496858517,5.641108366823194,
5.65607986596424,5.67109109945746,5.686142172757818,5.701233191600129,
5.716364261999865,5.731535490253826,5.746746982940951,5.761998846923017,
5.777291189345432,5.79262411763795,5.807997739515464,5.82341216297871,
5.838867496315116,5.85436384809943,5.86990132719460,5.88548004275252,
5.901100104214719,5.916761621313211,5.932464704071246,5.948209462804053,
5.963996008119665,5.979824450919641,5.995694902399900,6.011607474051448,
6.02756227766120,6.043559425312776,6.05959902938722,6.075681202563883,
6.091806057821127,6.107973708437173,6.124184267990897,6.140437850362588,
6.156734569734799,6.173074540593098,6.189457877726923,6.20588469623033,
6.222355111502881,6.238869239250365,6.255427195485681,6.272029096529605,
6.288675059011654,6.305365199870851,6.322099636356603,6.33887848602947,
6.355701866762046,6.372569896739730,6.389482694461605,6.406440378741245,
6.423443068707562,6.440490883805614,6.457583943797494,6.474722368763119,
6.491906279101122,6.509135795529648,6.526411039087255,6.543732131133710,
6.561099193350895,6.578512347743604,6.595971716640477,6.61347742269476,
6.631029588885286,6.648628338517198,6.666273795222952,6.683966082963087,
6.701705326027162,6.719491649034572,6.73732517693547,6.755206035011632,
6.77313434887732,6.79111024448016,6.809133848102099,6.827205286360163,
6.845324686207474,6.863492174934058,6.881707880167792,6.89997192987525,
6.918284452362661,6.936645576276745,6.955055430605677,6.973514144679954,
6.992021848173326,7.010578671103677,7.029184743833986,7.047840197073185,
7.066545161877137,7.085299769649500,7.104104152142705,7.122958441458824,
7.141862770050551,7.160817270722102,7.179822076630160,7.198877321284790,
7.217983138550414,7.23713966264670,7.25634702814959,7.275605369992120,
7.29491482346549,7.31427552421994,7.33368760826573,7.353151211974100,
7.372666472078214,7.392233525674112,7.41185251022171,7.431523563545722,
7.451246823836668,7.471022429651802,7.490850519916137,7.510731233923364,
7.530664711336888,7.550651092190751,7.570690516890668,7.590783126214985,
7.610929061315677,7.631128463719318,7.651381475328121,7.671688238420878,
7.692048895654019,7.712463590062553,7.732932465061137,7.753455664445016,
7.774033332391103,7.794665613458912,7.815352652591677,7.836094595117255,
7.856891586749242,7.877743773587926,7.898651302121378,7.919614319226416,
7.9406329721697,7.961707408608705,7.982837776592821,8.004024224564316,
8.025266901359490,8.046565956209590,8.067921538741964,8.08933379898104,
8.110802887349446,8.132328954668995,8.153912152161812,8.17555263145133,
8.197250544563452,8.219006043927478,8.240819282377310,8.262690413152460,
8.28461958989914,8.306606966671317,8.328652697931850,8.35075693855350,
8.372919843820127,8.395141569427634,8.417422271485202,8.439762106516289,
8.462161231459788,8.4846198036711,8.507137980923261,8.529715921408,
8.552353783736933,8.575051726942586,8.5978099104795,8.62062849422576,
8.64350763848324,8.666447503979567,8.689448251868908,8.712510043733081,
8.735633041582802,8.758817407858707,8.782063305432588,8.805370897608465,
8.828740348123805,8.85217182115059,8.875665481296564,8.89922149360629,
8.922840023562406,8.946521237086697,8.970265300541335,8.994072380730010,
9.017942644899111,9.041876260738881,9.065873396384642,9.089934220417914,
9.114058901867668,9.138247610211442,9.1625005153765,9.186817787741462,
9.211199598136566,9.235646117845787,9.260157518607655,9.284733972616429,
9.309375652523412,9.334082731438094,9.358855382929432,9.383693781026995,
9.408598100222267,9.433568515469794,9.458605202188486,9.483708336262774,
9.508878094043947,9.534114652351266,9.559418188473316,9.584788880169170,
9.610226905669710,9.635732443678806,9.661305673374645,9.686946774410913,
9.71265592691814,9.738433311504879,9.76427910925904,9.79019350174916,
9.816176671025644,9.842228799622018,9.868350070556315,9.89454066733225,
9.920800773940596,9.947130574860398,9.97353025506034,10,10.046204213468126,
10.092621909870473,10.139254075588153,10.186101701559758,10.233165783302448,
10.280447320933092,10.327947319189513,10.375666787451859,10.423606739764016,
10.471768194855203,10.520152176161586,10.56875971184804,10.61759183483,
10.666649582795393,10.71593399822671,10.765446128423153,10.815187025522881,
10.865157746525383,10.915359353313915,10.965792912678098,11.016459496336564,
11.067360180959733,11.118496048192710,11.169868184678231,11.221477682079802,
11.273325637104864,11.325413151528115,11.377741332214913,11.43031129114479,
11.483124145435111,11.536181017364778,11.589483034398107,11.64303132920876,
11.696827039703853,11.750871309048076,11.80516528568804,11.859710123376693,
11.914506981197760,11.96955702359043,12.024861420374122,12.08042134677328,
12.136237983442411,12.192312516491107,12.248646137509313,12.305240043592615,
12.362095437367685,12.41921352701784,12.4765955263086,12.534242654614,
12.592156136941509,12.65033720395903,12.708787092020589,12.767507043192656,
12.826498305280605,12.88576213185518,12.945299782279153,13.005112521734092,
13.06520162124721,13.125568357718433,13.186214013947484,13.247139878661167,
13.308347246540753,13.369837418249465,13.43161170046015,13.49367140588306,
13.55601785329368,13.61865236756081,13.681576279674718,13.744790926775372,
13.80829765218092,13.872097805416203,13.936192742241427,14.000583824680974,
14.065272421052371,14.130259905995336,14.19554766050101,14.261137071941289,
14.32702953409831,14.393226447194072,14.459729217920195,14.526539259467812,
14.59365799155756,14.661086840469844,14.728827239075025,14.796880626863963,
14.86524844997857,14.933932161242525,15.002933220192183,15.072253093107562,
15.14189325304351,15.211855179861048,15.2821403602587,15.352750287804227,
15.42368646296628,15.49495039314631,15.56654359271061,15.638467583022469,
15.710723892474504,15.783314056521172,15.856239617711372,15.929502125721230,
16.00310313738700,16.077044216738237,16.151326935030905,16.225952870780872,
16.300923609797411,16.37624074521688,16.451905877536624,16.52792061464894,
16.604286571875295,16.681005372000591,16.758078645307680,16.835508029612022,
16.913295170296478,16.99144172034625,17.06994934038407,17.1488196987053,
17.228054471313939,17.30765534195725,17.38762400216250,17.467962151272455,
17.548671496481510,17.629753752872058,17.711210643450876,17.793043899185772,
17.875255259042354,17.957846470020957,18.040819287193826,18.124175473742365,
18.207916800994624,18.292045048462938,18.376562003881716,18.461469463245474,
18.546769230846983,18.632463119315598,18.718552949655791,18.80504055128582,
18.891927762076662,18.979216428391005,19.066908405122518,19.155005555735279,
19.243509752303314,19.332422875550452,19.421746814890255,19.511483468466163,
19.60163474319185,19.692202554791723,19.78318882784164,19.874595495809828,
19.966424501097932,20.058677795082338,20.151357338155573,20.244465099768039,
20.338003058469809,20.4319732019527,20.526377527092520,20.62121803999143,
20.716496756020688,20.812215699863383,20.9083769055574,21.004982416539153,
21.102034285685956,21.199534575360711,21.2974853574551,21.39588871343421,
21.494746734379805,21.59406152103566,21.693835183851842,21.794069843029546,
21.894767628566206,21.995930680300748,22.097561147959019,22.199661191199549,
22.302232979659375,22.405278693000180,22.508800520954618,22.61280066337278,
22.717281330269049,22.82224474186897,22.927693128656486,23.03362873142131,
23.14005380130652,23.246970599856478,23.35438139906479,23.46228848142262,
23.57069413996727,23.679600678330775,23.78901041078893,23.898925662310503,
24.009348768606518,24.120282076180068,24.231727942375993,24.3436887354311,
24.45616683452446,24.5691646298279,24.68268452255692,24.796728925021589,
24.91130026067788,25.026400964179192,25.14203348142797,25.258200269627845,
25.3749037973357,25.492146544514231,25.60993100258459,25.72825967447933,
25.847135074695636,25.96655972934870,26.08653617622547,26.207066964838524,
26.328154656480212,26.449801824277198,26.572011053245052,26.694784940343208,
26.818126094530157,26.942037136818836,27.06652070033241,27.19157943036017,
27.317215984413763,27.44343303228365,27.57023325609583,27.697619350368910,
27.825594022071243,27.95415999067856,28.083319988231725,28.213076759394720,
28.343433061513092,28.47439166467246,28.605955351757419,28.73812691851066,
28.870909173592362,29.00430493863991,29.138317048327870,29.272948350428158,
29.40820170587063,29.544079988803812,29.68058608665602,29.817722900196717,
29.95549334359813,30.093900344497210,30.232946844057778,30.37263579703311,
30.51297017182869,30.653952950565265,30.79558712914226,30.93787571730138,
31.08082173869063,31.224428230928563,31.368698245668763,31.5136348486647,
31.659241119835222,31.805520153329197,31.95247505759212,32.100108955431714,
32.24842498408442,32.397426295281974,32.54711605531848,32.69749744511766,
32.84857366030043,33.000347911252852,33.15282342319424,33.30600343624588,
33.45989120549972,33.61449000108765,33.76980310825091,33.925833827409938,
34.08258547423452,34.240061379714255,34.39826489022924,34.55719936762139,
34.7168681892656,34.877274748141772,35.03842245290675,35.20031472796679,
35.362955013550426,35.526346765781411,35.6904934567522,35.855398574598169,
36.021065623570699,36.187498124112806,36.3546996129331,36.52267364308175,
36.69142378402494,36.860953621721577,37.03126675869926,37.20236681413067,
37.37425742391064,37.54694224073336,37.72042493416997,37.89470919074667,
38.06979871402285,38.24569722466998,38.42240846055060,38.599936176797669,
38.778284145894573,38.95745615775503,39.13745601980384,39.31828755705770,
39.499954612206430,39.682461045694815,39.86581073580440,40.05000757873611,
40.23505548869292,40.420958397963062,40.607720257003656,40.795345034524508,
40.983836717572614,41.17319931161679,41.363436840632736,41.55455334718875,
41.746552892531369,41.93943955667186,42.133217438472890,42.32789065573548,
42.52346334528682,42.7199396630677,42.917323784221572,43.115619903182285,
43.31483223376398,43.51496500925049,43.71602248248504,43.91800892596086,
44.12092863191190,44.32478591240396,44.52958509942655,44.73533054498465,
44.94202662119142,45.14967772036101,45.35828825510186,45.56786265841063,
45.77840538376618,45.98992090522438,46.20241371751313,46.41588833612777,
46.63034929742731,46.84580115873047,47.06224849841281,47.27969591600390,
47.49814803228499,47.71760948938745,47.9380849508910,48.1595791019235,
48.38209664925957,48.60564232142133,48.8302208687787,49.05583706365047,
49.28249570040513,49.51020159556351,49.73895958790062,49.96877453854884,
50.19965133110081,50.43159487171358,50.66461008921268,50.89870193519679,
51.13387538414325,51.37013543351341,51.60748710385907,51.84593543892913,
52.0854855057766,52.32614239486662,52.56791122018422,52.81079711934330,
53.05480525369573,53.29994080844090,53.54620899273607,53.79361503980700,
54.04216420705915,54.29186177618942,54.54271305329833,54.79472336900287,
55.04789807854970,55.302242561928,55.55776222398877,55.81446249454963,
56.07234882852032,56.33142670601354,56.59170163246242,56.85317913873753,
57.1158647812643,57.37976414214134,57.64488282925876,57.91122647641758,
58.17880074344935,58.44761131633634,58.71766390733255,58.98896425508496,
59.26151812475552,59.5353313081437,59.81040962380941,60.08675891719686,
60.36438506075867,60.64329395408061,60.92349152400711,61.204983724766,
61.48777653810022,61.77187597338494,62.057288067765,62.34401888627863,
62.63207452198689,62.92146109610344,63.21218475812455,63.50425168595962,
63.79766808606282,64.09244019356454,64.38857427240419,64.68607661546327,
64.98495354469888,65.28521141127846,65.58685659571432,65.8898955079994,
66.19433458774395,66.50018030431118,66.80743915695614,67.11611767496283,
67.42622241778342,67.73775997517752,68.05073696735206,68.36516004510238,
68.68103588995303,68.99837121430017,69.31717276155407,69.63744730628222,
69.95920165435374,70.2824426430834,70.60717714137773,70.93341204987996,
71.26115430111745,71.5904108596488,71.92118872221189,72.25349491787214,
72.58733650817252,72.92272058728312,73.25965428215229,73.5981447526576,
73.93819919175865,74.2798248256491,74.62302891391107,74.96781874966876,
75.31420165974371,75.66218500481055,76.0117761795533,76.3629826128224,
76.71581176779302,77.07027114212299,77.42636826811269,77.7841107128649,
78.14350607844542,78.5045620020450,78.86728615614151,79.23168624866254,
79.59777002314986,79.96554525892345,80.33501977124734,80.70620141149503,
81.0790980673168,81.45371766280744,81.83006815867389,82.20815755240541,
82.58799387844267,82.96958520834907,83.35293965098195,83.7380653526648,
84.12497049736118,84.51366330684717,84.90415204088746,85.29644499741024,
85.69055051268347,86.08647696149245,86.48423275731721,86.88382635251184,
87.28526623848379,87.68856094587427,88.09371904473991,88.50074914473434,
88.90965989529158,89.3204599858096,89.73315814583520,90.14776314524917,
90.56428379445289,90.9827289445555,91.40310748756232,91.82542835656282,
92.24970052592173,92.67593301146878,93.10413487069075,93.53431520292386,
93.96648314954695,94.40064789417603,94.8368186628592,95.27500472427290,
95.71521538991865,96.15746001432100,96.60174799522646,97.04808877380301,
97.49649183484086,97.94696670695395,98.39952296278231,98.85417021919573,
99.31091813749794,99.76977642363200,100.23075482838653,100.69386314760271,
101.15911122238297,101.6265089392995,102.09606623060464,102.56779307444219,
103.04169949505875,103.5177955630176,103.99609139541203,104.47659715608041,
104.95932305582276,105.44427935261684,105.93147635183700,106.42092440647246,
106.91263391734760,107.40661533334333,107.90287915161836,108.40143591783309,
108.90229622637305,109.40547072057424,109.9109700929497,110.41880508541602,
110.92898648952227,111.44152514667881,111.95643194838783,112.47371783647518,
112.99339380332216,113.51547089209989,114.0399601970033,114.56687286348714,
115.09622008850323,115.62801312073753,116.16226326085018,116.69898186171474,
117.23818032865997,117.7798701197119,118.32406274583780,118.8707697711903,
119.42000281335324,119.97177354358855,120.52609368708425,121.08297502320394,
121.6424293857368,122.20446866314887,122.76910479883603,123.33634979137760,
123.9062156947915,124.4787146187906,125.05385872903913,125.63166024741214,
126.21213145225473,126.79528467864339,127.38113231864784,127.96968682159416,
128.56096069432965,129.15496650148838,129.7517168657586,130.3512244681508,
130.95350204826675,131.55856240457052,132.16641839466052,132.7770829355428,
133.39056900390588,134.00688963639507,134.6260579298910,135.24808704178752,
135.8729901902709,136.50078065460138,137.13147177539457,137.7650769549055,
138.4016096573131,139.04108340900697,139.683511798873,140.32890847858732,
140.97728716289677,141.6286616299198,142.2830457214352,142.94045334317610,
143.60089846512607,144.26439512181588,144.9309574126216,145.60059950206485,
146.273335620112,146.94918006248173,147.62814719093910,148.31025143361043,
148.99550728528535,149.68392930772554,150.3755321299738,151.0703304486655,
151.76833902834053,152.46957270175730,153.174046370207,153.88177500383463,
154.59277364194784,155.30705739334601,156.02464143663678,156.74554102055950,
157.46977146430867,158.19734815786014,158.9282865622977,159.66260221014252,
160.40031070568198,161.14142772530198,161.88596901781991,162.63395040481921,
163.38538778098603,164.14029711444663,164.89869444710649,165.66059589499153,
166.42601764859034,167.19497597319883,167.96748720926532,168.7435677727375,
169.5232341554121,170.30650292528443,171.09339072690133,171.88391428171456,
172.67809038843560,173.47593592339325,174.27746784089191,175.08270317357232,
175.89165903277324,176.70435260889465,177.52080117176359,178.34102207100082,
179.16503273638994,179.99285067824763,180.82449348779516,181.65997883753286,
182.49932448161524,183.34254825622889,184.18966807997108,185.0407019542302,
185.8956679635688,186.75458427610760,187.617469143911,188.48434090337954,
189.35521797562952,190.23011886689457,191.1090621689137,191.99206655932829,
192.87915080207775,193.77033374779890,194.66563433422632,195.56507158659491,
196.46866461804444,197.37643263002553,198.28839491270713,199.20457084538713,
200.12497989690371,201.04964162604969,201.97857568198784,202.91180180466781,
203.84933982524643,204.79120966650853,205.7374313432911,206.68802496290820,
207.64301072557748,208.60240892485049,209.56623994804328,210.53452427667039,
211.50728248687946,212.48453524988829,213.46630333242455,214.45260759716674,
215.44346900318822,216.438908606402,217.43894756000798,218.44360711494283,
219.4529086203313,220.46687352394076,221.48552337263592,222.50887981283693,
223.53696459097966,224.56979955397738,225.6074066496859,226.64980792736929,
227.697025538167,228.7490817355703,229.80599887588510,230.86779941871674,
231.9345059274427,233.00614106969246,234.08272761782941,235.16428844943484,
236.25084654779450,237.3424250023866,238.43904700937204,239.54073587208793,
240.64751500154241,241.7594079169128,242.87643824604504,243.99862972595502,
245.126006203333,246.25859163505467,247.3964100886811,248.53948574297984,
249.68784288843266,250.8415059277541,252.0004993764092,253.1648478631352,
254.33457613046482,255.5097090352506,256.6902715491951,257.87628875938008,
259.0677858688006,260.26478819690044,261.46732118010919,262.6754103723838,
263.889081445751,265.10836019085360,266.33327251749807,267.56384445520450,
268.8001021537607,270.04207188377728,271.2897800372464,272.5432531281027,
273.8025177927857,275.0676007908067,276.33852900531695,277.6153294436800,
278.8980292380439,280.1866556459195,281.4812360507581,282.78179796253408,
284.0883690183304,285.40097698292373,286.71964974937696,288.0444153396297,
289.3753019050950,290.7123377272578,292.0555512182745,293.40497092157869,
294.7606255124858,296.12254379880346,297.4907547214440,298.8652873550382,
300.24617090855491,301.63343472591969,303.0271082866396,304.4272212064302,
305.8338032378431,307.2468842709003,308.66649433372742,310.09266359319263,
311.5254223555488,312.964801067075,314.4108303147264,315.86354082678190,
317.3229634734976,318.7891292677645,320.26206936576500,321.7418150676371,
323.2283978181380,324.72184920731285,326.22220097116701,327.72948499233820,
329.24373330077690,330.7649780744242,332.29325163989716,333.8285864731760,
335.371015200292,336.92057059802669,338.4772855945982,340.04119327037062,
341.61232685855281,343.19071974590428,344.7764054734464,346.36941773717342,
347.96979038876912,349.57755743632753,351.19275304507277,352.8154115380883,
354.4455673970435,356.08325526292776,357.7285099367873,359.3813663804625,
361.0418597173337,362.7100252330648,364.3858983763544,366.06951475969026,
367.7609101601030,369.4601205199302,371.1671819475766,372.8821307182837,
374.6050032748992,376.3358362286532,378.0746663599348,379.8215306190735,
381.5764661271252,383.3395101766601,385.1107002325568,386.8900739327975,
388.6776690892667,390.4735236885563,392.2776758927719,394.0901640403447,
395.91102664684586,397.74030240580367,399.5780301895273,401.42424904993220,
403.27899821937052,405.1423171114647,407.01424532194386,408.8948226294864,
410.7840889965646,412.6820845702951,414.58884968329113,416.5044248545185,
418.4288507901584,420.36216838447137,422.3044187206672,424.25564307177768,
426.21588290153249,428.1851798652415,430.16357581067950,432.1511127789761,
434.1478330055092,436.1537789208005,438.16899315141944,440.1935185208874,
442.2273980505897,444.2706749606882,446.32339267103975,448.38559480211910,
450.4573251759458,452.5386278170166,454.62954695323,456.7301270168746,
458.8404126454761,460.9604486828433,463.0902801799736,465.2299523960189,
467.3795107992463,469.5390010680062,471.7084690917017,473.8879609717650,
476.0775230226367,478.2772017727485,480.4870439655134,482.7070965603182,
484.9374067335232,487.1780218794630,489.4289896114531,491.6903577628031,
493.962174387832,496.2444877628913,498.5373463873893,500.8407989848212,
503.1548945038056,505.4796821191240,507.8152112327670,510.1615314749833,
512.5186927053332,514.8867450137497,517.2657387216019,519.6557243827656,
522.0567527846975,524.4688749495119,526.8921421350677,529.3266058360561,
531.7723177850966,534.2293299538351,536.6976945540476,539.1774640387504,
541.6686911033151,544.1714286865887,546.6857299720180,549.2116483887789,
551.7492376129129,554.2985515684669,556.8596444286408,559.4325706169377,
562.0173848083187,564.6141419303672,567.2228971644543,569.8437059469135,
572.4766239702178,575.1217071841613,577.7790117970506,580.4485942768977,
583.1305113526218,585.8248200152536,588.5315775191450,591.2508413831881,
593.9826693920356,596.727119597331,599.484250318940,602.2541201461928,
605.0367879391224,607.8323128297230,610.6407542232036,613.4621717992506,
616.2966255132942,619.1441755977847,622.0048825634711,624.8788072006888,
627.76601058065,630.6665540567405,633.5804992658254,636.5079081295571,
639.4488428556936,642.4033659394191,645.3715401646701,648.3534286054726,
651.3490946272802,654.3586018883229,657.3820143409585,660.4193962330305,
663.470812109235,666.5363268124913,669.6160054853215,672.7099135712336,
675.8181168161110,678.9406812696112,682.0776732865684,685.2291595284057,
688.3952069645496,691.5758828738524,694.7712548460240,697.9813907830659,
701.2063589007176,704.4462277299037,707.701066118188,710.9709432312438,
714.2559285543126,717.5560918936921,720.8715033782135,724.2022334607315,
727.5483529196233,730.909932860291,734.287044716675,737.6797602527731,
741.088151564156,744.5122910795142,747.9522515621821,751.4081061116961,
754.879928165343,758.367791499719,761.8717702322,765.3919388230148,
768.9283720758305,772.48114514034,776.0503335133571,779.6360130405237,
783.2382599179196,786.8571506936843,790.4927622696420,794.1451719029339,
797.814457207662,801.5006961565404,805.203967082547,808.9243486805937,
812.6619200091945,816.4167604921472,820.1889499202203,823.9785684528511,
827.7856966198472,831.6104153230961,835.4528058382871,839.3129498166364,
843.190929286625,847.0868266557401,851.0007247122246,854.9327066268384,
858.882855954624,862.8512566366887,866.8379930019773,870.8431497690723,
874.8668120479914,878.9090653419954,882.9699955494091,887.04968896544,
891.1482322840201,895.2657125996400,899.4022174092044,903.557834613892,
907.7326525210223,911.92675984592,916.1402457138520,920.3731996618221,
924.6257116405743,928.8978720164498,933.189771573323,937.5015015145289,
941.8331534647951,946.1848194722001,950.5565920101191,954.9485639791965,
959.3608287093146,963.7934799615785,968.2466119303123,972.7203192450537,
977.2146969725724,981.729840618884,986.265846131282,990.8228099003797,
995.4008287621518,1000];
Ljw = [-1.363766027302648e-2-0.70376302719496j,-1.375159933010178e-2-0.701899001158654j,
-1.386493629257228e-2-0.70003986922135j,-1.397767432747549e-2-0.698185618613514j,
-1.408981658520602e-2-0.696336236597612j,-1.420136619960196e-2-0.694491710468031j,
-1.431232628803112e-2-0.692652027551013j,-1.44226999514767e-2-0.690817175204581j,
-1.453249027462241e-2-0.688987140818466j,-1.46417003259374e-2-0.687161911814042j,
-1.475033315776062e-2-0.685341475644249j,-1.48583918063846e-2-0.683525819793526j,
-1.496587929213906e-2-0.681714931777736j,-1.507279861947398e-2-0.679908799144101j,
-1.517915277704215e-2-0.678107409471127j,-1.528494473778154e-2-0.676310750368535j,
-1.539017745899688e-2-0.674518809477191j,-1.549485388244121e-2-0.672731574469035j,
-1.559897693439672e-2-0.670949033047009j,-1.570254952575530e-2-0.669171172944991j,
-1.580557455209878e-2-0.66739798192772j,-1.590805489377841e-2-0.665629447790732j,
-1.600999341599434e-2-0.663865558360284j,-1.611139296887446e-2-0.662106301493288j,
-1.621225638755282e-2-0.660351665077238j,-1.631258649224775e-2-0.658601637030146j,
-1.641238608833963e-2-0.656856205300466j,-1.651165796644795e-2-0.655115357867029j,
-1.661040490250835e-2-0.653379082738972j,-1.670862965784904e-2-0.651647367955668j,
-1.680633497926691e-2-0.649920201586659j,-1.690352359910322e-2-0.648197571731584j,
-1.700019823531885e-2-0.646479466520114j,-1.709636159156927e-2-0.644765874111879j,
-1.719201635727903e-2-0.643056782696402j,-1.728716520771592e-2-0.641352180493029j,
-1.73818108040647e-2-0.63965205575086j,-1.747595579350059e-2-0.637956396748684j,
-1.756960280926206e-2-0.636265191794904j,-1.766275447072367e-2-0.634578429227476j,
-1.775541338346813e-2-0.632896097413836j,-1.784758213935831e-2-0.631218184750835j,
-1.793926331660871e-2-0.629544679664666j,-1.803045947985652e-2-0.627875570610802j,
-1.812117318023248e-2-0.626210846073926j,-1.821140695543123e-2-0.624550494567861j,
-1.830116332978131e-2-0.622894504635508j,-1.839044481431493e-2-0.62124286484877j,
-1.847925390683720e-2-0.619595563808493j,-1.856759309199512e-2-0.617952590144395j,
-1.865546484134613e-2-0.616313932514998j,-1.874287161342643e-2-0.614679579607563j,
-1.882981585381879e-2-0.613049520138022j,-1.891629999522017e-2-0.61142374285090j,
-1.900232645750882e-2-0.609802236519299j,-1.908789764781118e-2-0.608184989944736j,
-1.917301596056833e-2-0.606571991957166j,-1.925768377760219e-2-0.604963231414877j,
-1.934190346818128e-2-0.603358697204426j,-1.942567738908623e-2-0.601758378240574j,
-1.950900788467486e-2-0.600162263466223j,-1.959189728694699e-2-0.598570341852348j,
-1.96743479156089e-2-0.59698260239793j,-1.975636207813743e-2-0.59539903412989j,
-1.983794206984381e-2-0.593819626103028j,-1.991909017393706e-2-0.59224436739995j,
-1.999980866158713e-2-0.59067324713101j,-2.008009979198772e-2-0.589106254434237j,
-2.015996581241875e-2-0.587543378475278j,-2.023940895830852e-2-0.585984608447326j,
-2.031843145329547e-2-0.584429933571056j,-2.039703550928977e-2-0.582879343094564j,
-2.047522332653447e-2-0.5813328262933j,-2.055299709366634e-2-0.579790372470001j,
-2.063035898777649e-2-0.578251970954627j,-2.070731117447057e-2-0.576717611104302j,
-2.078385580792867e-2-0.575187282303241j,-2.085999503096497e-2-0.573660973962693j,
-2.093573097508705e-2-0.572138675520870j,-2.101106576055484e-2-0.570620376442892j,
-2.108600149643941e-2-0.569106066220713j,-2.11605402806812e-2-0.567595734373063j,
-2.123468420014823e-2-0.566089370445384j,-2.130843533069386e-2-0.564586964009764j,
-2.138179573721419e-2-0.563088504664876j,-2.145476747370533e-2-0.561593982035913j,
-2.152735258332027e-2-0.560103385774524j,-2.159955309842539e-2-0.558616705558753j,
-2.167137104065684e-2-0.557133931092974j,-2.174280842097651e-2-0.555655052107829j,
-2.181386723972771e-2-0.554180058360166j,-2.188454948669065e-2-0.552708939632971j,
-2.195485714113749e-2-0.551241685735315j,-2.202479217188725e-2-0.549778286502282j,
-2.209435653736034e-2-0.548318731794912j,-2.216355218563278e-2-0.546863011500135j,
-2.223238105449035e-2-0.545411115530714j,-2.23008450714821e-2-0.543963033825177j,
-2.236894615397393e-2-0.54251875634776j,-2.243668620920161e-2-0.541078273088341j,
-2.250406713432379e-2-0.539641574062382j,-2.257109081647451e-2-0.538208649310863j,
-2.263775913281556e-2-0.536779488900225j,-2.270407395058849e-2-0.535354082922307j,
-2.277003712716646e-2-0.533932421494281j,-2.283565051010567e-2-0.532514494758598j,
-2.290091593719663e-2-0.53110029288292j,-2.29658352365152e-2-0.529689806060064j,
-2.303041022647317e-2-0.528283024507936j,-2.309464271586883e-2-0.526879938469478j,
-2.315853450393705e-2-0.525480538212598j,-2.322208738039926e-2-0.524084814030117j,
-2.328530312551307e-2-0.522692756239705j,-2.334818351012174e-2-0.521304355183822j,
-2.34107302957032e-2-0.519919601229656j,-2.347294523441903e-2-0.518538484769065j,
-2.353483006916306e-2-0.517160996218516j,-2.359638653360973e-2-0.515787126019028j,
-2.365761635226224e-2-0.514416864636104j,-2.371852124050039e-2-0.513050202559682j,
-2.377910290462822e-2-0.511687130304070j,-2.383936304192136e-2-0.510327638407884j,
-2.389930334067421e-2-0.508971717433996j,-2.395892548024673e-2-0.507619357969468j,
-2.401823113111113e-2-0.506270550625497j,-2.407722195489826e-2-0.504925286037354j,
-2.413589960444372e-2-0.503583554864327j,-2.419426572383381e-2-0.502245347789661j,
-2.425232194845113e-2-0.500910655520498j,-2.431006990502010e-2-0.499579468787822j,
-2.436751121165204e-2-0.498251778346399j,-2.442464747789019e-2-0.496927574974717j,
-2.448148030475442e-2-0.495606849474931j,-2.453801128478569e-2-0.494289592672804j,
-2.459424200209027e-2-0.492975795417645j,-2.465017403238389e-2-0.491665448582259j,
-2.470580894303535e-2-0.490358543062883j,-2.476114829311014e-2-0.489055069779131j,
-2.481619363341388e-2-0.487755019673935j,-2.487094650653524e-2-0.48645838371349j,
-2.492540844688894e-2-0.485165152887195j,-2.497958098075837e-2-0.483875318207596j,
-2.503346562633803e-2-0.482588870710331j,-2.508706389377565e-2-0.48130580145407j,
-2.514037728521429e-2-0.48002610152046j,-2.519340729483408e-2-0.478749762014068j,
-2.52461554088937e-2-0.477476774062326j,-2.529862310577174e-2-0.476207128815471j,
-2.535081185600784e-2-0.474940817446492j,-2.540272312234356e-2-0.473677831151073j,
-2.545435835976305e-2-0.472418161147536j,-2.550571901553355e-2-0.471161798676786j,
-2.555680652924558e-2-0.469908735002254j,-2.560762233285305e-2-0.468658961409842j,
-2.565816785071306e-2-0.46741246920787j,-2.570844449962554e-2-0.466169249727013j,
-2.575845368887263e-2-0.464929294320256j,-2.580819682025791e-2-0.463692594362828j,
-2.585767528814544e-2-0.462459141252156j,-2.590689047949847e-2-0.461228926407804j,
-2.595584377391811e-2-0.460001941271421j,-2.600453654368167e-2-0.458778177306684j,
-2.605297015378093e-2-0.457557625999244j,-2.610114596195998e-2-0.456340278856675j,
-2.614906531875318e-2-0.455126127408414j,-2.619672956752259e-2-0.453915163205708j,
-2.624414004449548e-2-0.452707377821564j,-2.629129807880149e-2-0.451502762850688j,
-2.63382049925095e-2-0.450301309909437j,-2.638486210066493e-2-0.449103010635761j,
-2.643127071132543e-2-0.447907856689152j,-2.64774321255981e-2-0.446715839750589j,
-2.652334763767577e-2-0.445526951522484j,-2.656901853487215e-2-0.444341183728629j,
-2.661444609765859e-2-0.443158528114143j,-2.665963159969936e-2-0.441978976445418j,
-2.670457630788712e-2-0.440802520510067j,-2.674928148237824e-2-0.43962915211686j,
-2.67937483766278e-2-0.438458863095719j,-2.683797823742498e-2-0.437291645297572j,
-2.688197230492684e-2-0.436127490594393j,-2.692573181269378e-2-0.434966390879103j,
-2.696925798772348e-2-0.433808338065525j,-2.701255205048513e-2-0.432653324088337j,
-2.705561521495345e-2-0.431501340903013j,-2.709844868864252e-2-0.430352380485775j,
-2.714105367263942e-2-0.429206434833541j,-2.718343136163765e-2-0.428063495963871j,
-2.72255829439705e-2-0.426923555914917j,-2.726750960164409e-2-0.425786606745371j,
-2.730921251037037e-2-0.424652640534411j,-2.735069283959981e-2-0.423521649381655j,
-2.739195175255405e-2-0.422393625407103j,-2.743299040625829e-2-0.421268560751091j,
-2.74738099515735e-2-0.420146447574237j,-2.751441153322885e-2-0.419027278057392j,
-2.755479628985282e-2-0.417911044401586j,-2.759496535400574e-2-0.416797738827981j,
-2.763491985221103e-2-0.415687353577818j,-2.767466090498655e-2-0.414579880912366j,
-2.771418962687599e-2-0.413475313112874j,-2.775350712647982e-2-0.412373642480517j,
-2.779261450648626e-2-0.41127486133635j,-2.783151286370202e-2-0.410178962021254j,
-2.787020328908287e-2-0.409085936895888j,-2.790868686776406e-2-0.40799577834064j,
-2.79469646790906e-2-0.406908478755575j,-2.798503779664732e-2-0.405824030560386j,
-2.802290728828885e-2-0.404742426194344j,-2.806057421616937e-2-0.40366365811625j,
-2.809803963677228e-2-0.402587718804386j,-2.813530460093961e-2-0.401514600756462j,
-2.817237015390134e-2-0.400444296489571j,-2.820923733530461e-2-0.399376798540138j,
-2.824590717924264e-2-0.398312099463870j,-2.828238071428366e-2-0.397250191835712j,
-2.83186589634995e-2-0.39619106824979j,-2.835474294449428e-2-0.395134721319371j,
-2.839063366943261e-2-0.39408114367681j,-2.8426332145068e-2-0.3930303279735j,
-2.846183937277087e-2-0.391982266879829j,-2.849715634855651e-2-0.390936953085127j,
-2.853228406311282e-2-0.38989437929762j,-2.856722350182804e-2-0.388854538244382j,
-2.860197564481817e-2-0.387817422671287j,-2.863654146695439e-2-0.386783025342961j,
-2.867092193789024e-2-0.385751339042734j,-2.870511802208861e-2-0.384722356572594j,
-2.873913067884882e-2-0.383696070753137j,-2.87729608623332e-2-0.382672474423523j,
-2.88066095215938e-2-0.381651560441426j,-2.884007760059921e-2-0.380633321682987j,
-2.88733660382600e-2-0.37961775104277j,-2.890647576845625e-2-0.378604841433711j,
-2.893940772006225e-2-0.377594585787073j,-2.897216281697344e-2-0.376586977052402j,
-2.900474197813176e-2-0.375582008197475j,-2.90371461175514e-2-0.374579672208258j,
-2.906937614434429e-2-0.373579962088857j,-2.91014329627455e-2-0.372582870861473j,
-2.913331747213850e-2-0.371588391566357j,-2.916503056708025e-2-0.37059651726176j,
-2.919657313732617e-2-0.369607241023891j,-2.922794606785508e-2-0.36862055594687j,
-2.925915023889375e-2-0.367636455142681j,-2.929018652594164e-2-0.366654931741128j,
-2.932105579979523e-2-0.365675978889789j,-2.935175892657241e-2-0.364699589753969j,
-2.938229676773671e-2-0.363725757516657j,-2.941267018012121e-2-0.362754475378479j,
-2.94428800159526e-2-0.361785736557656j,-2.947292712287497e-2-0.360819534289952j,
-2.950281234397347e-2-0.35985586182864j,-2.953253651779781e-2-0.358894712444445j,
-2.956210047838581e-2-0.357936079425507j,-2.959150505528655e-2-0.356979956077337j,
-2.962075107358367e-2-0.356026335722768j,-2.964983935391830e-2-0.355075211701912j,
-2.967877071251216e-2-0.354126577372117j,-2.970754596119019e-2-0.353180426107922j,
-2.973616590740331e-2-0.352236751301015j,-2.976463135425099e-2-0.351295546360184j,
-2.979294310050366e-2-0.350356804711279j,-2.982110194062506e-2-0.349420519797162j,
-2.984910866479445e-2-0.348486685077669j,-2.987696405892863e-2-0.347555294029565j,
-2.990466890470394e-2-0.346626340146496j,-2.993222397957815e-2-0.345699816938953j,
-2.995963005681208e-2-0.344775717934224j,-2.998688790549135e-2-0.343854036676349j,
-3.001399829054776e-2-0.342934766726083j,-3.00409619727807e-2-0.342017901660847j,
-3.006777970887845e-2-0.341103435074691j,-3.009445225143931e-2-0.340191360578244j,
-3.012098034899263e-2-0.339281671798679j,-3.014736474601973e-2-0.338374362379663j,
-3.017360618297471e-2-0.337469425981322j,-3.019970539630522e-2-0.336566856280192j,
-3.022566311847294e-2-0.33566664696918j,-3.025148007797407e-2-0.334768791757523j,
-3.027715699935983e-2-0.333873284370742j,-3.030269460325655e-2-0.332980118550604j,
-3.032809360638589e-2-0.332089288055077j,-3.035335472158493e-2-0.33120078665829j,
-3.0378478657826e-2-0.330314608150491j,-3.040346612023658e-2-0.329430746338006j,
-3.0428317810118e-2-0.328549195043195j,-3.045303442497e-2-0.327669948104413j,
-3.047761665850034e-2-0.326792999375969j,-3.05020652006541e-2-0.325918342728082j,
-3.0526380737628e-2-0.325045972046844j,-3.055056395189067e-2-0.324175881234175j,
-3.057461552220158e-2-0.323308064207783j,-3.059853612363021e-2-0.322442514901126j,
-3.062232642757476e-2-0.321579227263368j,-3.064598710178106e-2-0.32071819525934j,
-3.066951881036116e-2-0.319859412869499j,-3.069292221381195e-2-0.319002874089886j,
-3.071619796903361e-2-0.31814857293209j,-3.073934672934805e-2-0.317296503423203j,
-3.076236914451707e-2-0.316446659605783j,-3.078526586076067e-2-0.315599035537811j,
-3.080803752077502e-2-0.314753625292655j,-3.083068476375048e-2-0.313910422959027j,
-3.085320822538952e-2-0.313069422640943j,-3.087560853792444e-2-0.312230618457686j,
-3.08978863301350e-2-0.311394004543766j,-3.092004222736651e-2-0.310559575048875j,
-3.094207685154632e-2-0.309727324137858j,-3.096399082120221e-2-0.308897245990662j,
-3.098578475147924e-2-0.308069334802306j,-3.100745925415699e-2-0.307243584782839j,
-3.102901493766678e-2-0.306419990157296j,-3.105045240710857e-2-0.305598545165669j,
-3.107177226426803e-2-0.304779244062858j,-3.109297510763328e-2-0.303962081118640j,
-3.111406153241168e-2-0.303147050617624j,-3.113503213054647e-2-0.30233414685922j,
-3.11558874907334e-2-0.301523364157592j,-3.117662819843711e-2-0.300714696841627j,
-3.119725483590757e-2-0.299908139254891j,-3.121776798219638e-2-0.299103685755595j,
-3.123816821317296e-2-0.298301330716554j,-3.12584561015406e-2-0.297501068525151j,
-3.127863221685295e-2-0.296702893583299j,-3.1298697125529e-2-0.295906800307401j,
-3.131865139086992e-2-0.295112783128314j,-3.133849557307429e-2-0.294320836491313j,
-3.135823022925398e-2-0.293530954856049j,-3.137785591344966e-2-0.292743132696516j,
-3.139737317664636e-2-0.29195736450101j,-3.141678256678884e-2-0.291173644772095j,
-3.143608462879703e-2-0.290391968026563j,-3.145527990458115e-2-0.2896123287954j,
-3.147436893305704e-2-0.288834721623746j,-3.149335225016111e-2-0.288059141070858j,
-3.151223038886545e-2-0.287285581710076j,-3.153100387919266e-2-0.286514038128784j,
-3.154967324823082e-2-0.285744504928376j,-3.15682390201481e-2-0.284976976724214j,
-3.158670171620756e-2-0.284211448145597j,-3.160506185478168e-2-0.283447913835722j,
-3.162331995136690e-2-0.282686368451649j,-3.16414765185980e-2-0.281926806664263j,
-3.165953206626282e-2-0.281169223158239j,-3.167748710131573e-2-0.280413612632008j,
-3.169534212789269e-2-0.279659969797716j,-3.17130976473249e-2-0.278908289381192j,
-3.1730754158153e-2-0.278158566121913j,-3.174831215614091e-2-0.277410794772964j,
-3.176577213428990e-2-0.276664970101006j,-3.17831345828522e-2-0.275921086886241j,
-3.180039998934492e-2-0.275179139922374j,-3.181756883856353e-2-0.274439124016577j,
-3.183464161259561e-2-0.273701033989458j,-3.185161879083424e-2-0.272964864675023j,
-3.186850084999143e-2-0.272230610920639j,-3.188528826411161e-2-0.271498267587004j,
-3.190198150458472e-2-0.270767829548108j,-3.191858104015957e-2-0.270039291691199j,
-3.193508733695687e-2-0.26931264891675j,-3.19515008584823e-2-0.268587896138422j,
-3.196782206563988e-2-0.267865028283031j,-3.198405141674396e-2-0.267144040290513j,
-3.200018936753309e-2-0.26642492711389j,-3.201623637118216e-2-0.265707683719234j,
-3.203219287831535e-2-0.264992305085636j,-3.204805933701867e-2-0.264278786205168j,
-3.206383619285257e-2-0.263567122082852j,-3.207952388886435e-2-0.262857307736626j,
-3.209512286560067e-2-0.262149338197306j,-3.211063356111985e-2-0.261443208508557j,
-3.212605641100412e-2-0.260738913726857j,-3.214139184837192e-2-0.260036448921465j,
-3.215664030388996e-2-0.259335809174385j,-3.217180220578528e-2-0.258636989580333j,
-3.218687797985734e-2-0.257939985246707j,-3.220186804948987e-2-0.257244791293547j,
-3.221677283566280e-2-0.256551402853509j,-3.223159275696404e-2-0.255859815071828j,
-3.224632822960119e-2-0.255170023106285j,-3.226097966741324e-2-0.254482022127175j,
-3.22755474818821e-2-0.253795807317272j,-3.229003208214452e-2-0.253111373871801j,
-3.230443387500274e-2-0.252428716998398j,-3.231875326493674e-2-0.251747831917086j,
-3.233299065411517e-2-0.251068713860234j,-3.234714644240666e-2-0.25039135807253j,
-3.236122102739112e-2-0.249715759810947j,-3.23752148043708e-2-0.249041914344709j,
-3.238912816638148e-2-0.248369816955262j,-3.240296150420335e-2-0.24769946293624j,
-3.241671520637211e-2-0.247030847593432j,-3.243038965918978e-2-0.24636396624475j,
-3.244398524673558e-2-0.245698814220202j,-3.245750235087665e-2-0.245035386861851j,
-3.247094135127886e-2-0.244373679523792j,-3.248430262541731e-2-0.243713687572115j,
-3.249758654858710e-2-0.243055406384876j,-3.251079349391367e-2-0.242398831352064j,
-3.252392383236342e-2-0.24174395787557j,-3.253697793275403e-2-0.241090781369154j,
-3.254995616176487e-2-0.240439297258418j,-3.256285888394719e-2-0.239789500980771j,
-3.257568646173445e-2-0.239141387985398j,-3.258843925545247e-2-0.23849495373323j,
-3.260111762332944e-2-0.237850193696915j,-3.261372192150613e-2-0.237207103360781j,
-3.262625250404577e-2-0.236565678220812j,-3.263870972294401e-2-0.235925913784614j,
-3.265109392813886e-2-0.235287805571383j,-3.266340546752036e-2-0.234651349111877j,
-3.267564468694053e-2-0.234016539948383j,-3.268781193022296e-2-0.233383373634691j,
-3.26999075391724e-2-0.232751845736057j,-3.271193185358476e-2-0.232121951829179j,
-3.272388521125586e-2-0.231493687502161j,-3.273576794799171e-2-0.230867048354489j,
-3.27475803976175e-2-0.230242029996995j,-3.275932289198710e-2-0.229618628051831j,
-3.277099576099234e-2-0.228996838152439j,-3.278259933257230e-2-0.228376655943516j,
-3.27941339327225e-2-0.227758077080993j,-3.280559988550406e-2-0.227141097231997j,
-3.281699751305277e-2-0.226525712074825j,-3.282832713558820e-2-0.225911917298916j,
-3.283958907142263e-2-0.225299708604818j,-3.285078363697e-2-0.224689081704161j,
-3.286191114675485e-2-0.224080032319626j,-3.287297191342104e-2-0.223472556184919j,
-3.288396624774068e-2-0.222866649044738j,-3.28948944586227e-2-0.222262306654744j,
-3.290575685312168e-2-0.221659524781535j,-3.291655373644632e-2-0.221058299202615j,
-3.292728541196817e-2-0.220458625706366j,-3.293795218123003e-2-0.219860500092018j,
-3.294855434395447e-2-0.21926391816962j,-3.295909219805225e-2-0.218668875760014j,
-3.29695660396307e-2-0.218075368694803j,-3.297997616300202e-2-0.217483392816325j,
-3.299032286069152e-2-0.216892943977622j,-3.300060642344592e-2-0.216304018042416j,
-3.301082714024147e-2-0.215716610885075j,-3.302098529829205e-2-0.21513071839059j,
-3.30310811830573e-2-0.214546336454542j,-3.304111507825057e-2-0.213963460983078j,
-3.305108726584695e-2-0.213382087892881j,-3.306099802609123e-2-0.212802213111142j,
-3.307084763750565e-2-0.212223832575532j,-3.308063637689786e-2-0.211646942234175j,
-3.309036451936862e-2-0.211071538045621j,-3.310003233831958e-2-0.210497615978815j,
-3.310964010546094e-2-0.209925172013073j,-3.311918809081912e-2-0.209354202138052j,
-3.312867656274430e-2-0.208784702353725j,-3.313810578791802e-2-0.208216668670351j,
-3.314747603136065e-2-0.207650097108448j,-3.315678755643886e-2-0.207084983698769j,
-3.316604062487303e-2-0.206521324482271j,-3.317523549674455e-2-0.205959115510088j,
-3.318437243050326e-2-0.205398352843506j,-3.319345168297459e-2-0.204839032553937j,
-3.320247350936686e-2-0.204281150722887j,-3.321143816327844e-2-0.203724703441936j,
-3.32203458967049e-2-0.203169686812703j,-3.322919696004608e-2-0.202616096946829j,
-3.323799160211314e-2-0.202063929965942j,-3.324673007013557e-2-0.201513182001635j,
-3.325541260976814e-2-0.200963849195436j,-3.326403946509782e-2-0.200415927698788j,
-3.327261087865067e-2-0.199869413673014j,-3.328112709139861e-2-0.199324303289298j,
-3.32895883427663e-2-0.198780592728654j,-3.329799487063773e-2-0.198238278181903j,
-3.33063469113630e-2-0.197697355849644j,-3.331464469976532e-2-0.197157821942232j,
-3.332288846914675e-2-0.196619672679747j,-3.333107845129565e-2-0.196082904291972j,
-3.333921487649277e-2-0.195547513018366j,-3.334729797351791e-2-0.195013495108036j,
-3.335532796965618e-2-0.194480846819717j,-3.336330509070460e-2-0.193949564421739j,
-3.33712295609783e-2-0.193419644192007j,-3.337910160331701e-2-0.192891082417974j,
-3.338692143909113e-2-0.192363875396614j,-3.339468928820816e-2-0.191838019434398j,
-3.340240536911879e-2-0.191313510847269j,-3.341006989882312e-2-0.190790345960617j,
-3.34176830928767e-2-0.190268521109252j,-3.342524516539669e-2-0.18974803263738j,
-3.343275632906784e-2-0.189228876898577j,-3.344021679514851e-2-0.188711050255767j,
-3.344762677347664e-2-0.188194549081194j,-3.345498647247566e-2-0.187679369756398j,
-3.346229609916032e-2-0.187165508672191j,-3.346955585914263e-2-0.18665296222863j,
-3.347676595663756e-2-0.186141726834997j,-3.348392659446888e-2-0.185631798909768j,
-3.349103797407482e-2-0.185123174880594j,-3.349810029551381e-2-0.184615851184274j,
-3.35051137574700e-2-0.18410982426673j,-3.351207855725937e-2-0.183605090582985j,
-3.35189948908342e-2-0.183101646597136j,-3.352586295279008e-2-0.182599488782333j,
-3.353268293637e-2-0.182098613620752j,-3.353945503347076e-2-0.18159901760357j,
-3.354617943464804e-2-0.181100697230945j,-3.355285632912178e-2-0.18060364901199j,
-3.355948590478153e-2-0.180107869464749j,-3.356606834819185e-2-0.179613355116171j,
-3.35726038445975e-2-0.179120102502091j,-3.357909257792866e-2-0.178628108167202j,
-3.358553473080622e-2-0.178137368665034j,-3.35919304845468e-2-0.177647880557928j,
-3.35982800191682e-2-0.177159640417015j,-3.360458351339410e-2-0.176672644822192j,
-3.361084114465913e-2-0.176186890362096j,-3.361705308911426e-2-0.175702373634084j,
-3.36232195216315e-2-0.175219091244209j,-3.362934061580888e-2-0.174737039807194j,
-3.363541654397543e-2-0.174256215946412j,-3.364144747719599e-2-0.173776616293863j,
-3.364743358527614e-2-0.173298237490148j,-3.365337503676689e-2-0.17282107618444j,
-3.365927199896956e-2-0.172345129034505j,-3.366512463794047e-2-0.171870392706587j,
-3.367093311849566e-2-0.17139686387548j,-3.367669760421555e-2-0.170924539224455j,
-3.368241825744959e-2-0.170453415445252j,-3.368809523932083e-2-0.16998348923805j,
-3.369372870973056e-2-0.169514757311453j,-3.369931882736275e-2-0.169047216382459j,
-3.370486574968866e-2-0.168580863176445j,-3.371036963297119e-2-0.168115694427139j,
-3.371583063226944e-2-0.167651706876601j,-3.372124890144298e-2-0.167188897275201j,
-3.372662459315633e-2-0.166727262381592j,-3.373195785888323e-2-0.166266798962695j,
-3.373724884891098e-2-0.165807503793672j,-3.374249771234469e-2-0.165349373657903j,
-3.374770459711152e-2-0.16489240534697j,-3.375286964996488e-2-0.164436595660629j,
-3.375799301648862e-2-0.16398194140679j,-3.376307484110113e-2-0.163528439401498j,
-3.376811526705956e-2-0.163076086468908j,-3.377311443646372e-2-0.162624879441262j,
-3.377807249026026e-2-0.162174815158874j,-3.378298956824666e-2-0.161725890470099j,
-3.378786580907517e-2-0.161278102231322j,-3.37927013502567e-2-0.160831447306926j,
-3.37974963281652e-2-0.160385922569279j,-3.380225087804062e-2-0.159941524898709j,
-3.380696513399364e-2-0.159498251183482j,-3.381163922900913e-2-0.159056098319783j,
-3.381627329494997e-2-0.158615063211692j,-3.382086746256085e-2-0.158175142771167j,
-3.382542186147192e-2-0.157736333918019j,-3.382993662020262e-2-0.157298633579893j,
-3.383441186616526e-2-0.156862038692247j,-3.383884772566866e-2-0.15642654619833j,
-3.384324432392185e-2-0.155992153049162j,-3.384760178503753e-2-0.155558856203514j,
-3.385192023203571e-2-0.155126652627886j,-3.385619978684720e-2-0.154695539296486j,
-3.386044057031707e-2-0.154265513191211j,-3.386464270220820e-2-0.153836571301626j,
-3.386880630120461e-2-0.153408710624943j,-3.387293148491493e-2-0.152981928166j,
-3.387701836987575e-2-0.152556220937241j,-3.388106707155493e-2-0.152131585958698j,
-3.3885077704354e-2-0.151708020257967j,-3.388905038161637e-2-0.151285520870191j,
-3.389298521562061e-2-0.150864084838036j,-3.389688231759368e-2-0.150443709211675j,
-3.390074179770911e-2-0.150024391048766j,-3.390456376509123e-2-0.149606127414433j,
-3.390834832781824e-2-0.149188915381244j,-3.391209559292534e-2-0.148772752029193j,
-3.391580566640786e-2-0.14835763444568j,-3.391947865322425e-2-0.147943559725489j,
-3.392311465729915e-2-0.147530524970773j,-3.392671378152638e-2-0.147118527291028j,
-3.393027612777194e-2-0.14670756380308j,-3.393380179687686e-2-0.146297631631061j,
-3.393729088866025e-2-0.145888727906389j,-3.394074350192209e-2-0.145480849767754j,
-3.394415973444611e-2-0.145073994361092j,-3.394753968300266e-2-0.144668158839568j,
-3.395088344335146e-2-0.144263340363561j,-3.395419111024445e-2-0.143859536100637j,
-3.395746277742845e-2-0.143456743225536j,-3.396069853764794e-2-0.143054958920151j,
-3.39638984826478e-2-0.142654180373506j,-3.396706270317586e-2-0.142254404781743j,
-3.397019128898566e-2-0.141855629348098j,-3.397328432883898e-2-0.141457851282883j,
-3.397634191050849e-2-0.14106106780347j,-3.397936412078026e-2-0.140665276134267j,
-3.39823510454563e-2-0.140270473506705j,-3.398530276935734e-2-0.139876657159215j,
-3.398821937632463e-2-0.139483824337212j,-3.399110094922312e-2-0.139091972293075j,
-3.399394756994356e-2-0.138701098286128j,-3.399675931940491e-2-0.138311199582624j,
-3.399953627755675e-2-0.137922273455721j,-3.400227852338163e-2-0.137534317185473j,
-3.400498613489745e-2-0.137147328058802j,-3.400765918915962e-2-0.136761303369484j,
-3.40102977622635e-2-0.136376240418133j,-3.40129019293465e-2-0.135992136512179j,
-3.401547176459043e-2-0.135608988965849j,-3.401800734122360e-2-0.135226795100156j,
-3.402050873152303e-2-0.134845552242871j,-3.402297600681661e-2-0.134465257728514j,
-3.40254092374852e-2-0.134085908898329j,-3.402780849296471e-2-0.133707503100273j,
-3.403017384174817e-2-0.133330037688992j,-3.403250535138788e-2-0.132953510025806j,
-3.403480308849724e-2-0.13257791747869j,-3.403706711875289e-2-0.132203257422261j,
-3.403929750689665e-2-0.131829527237752j,-3.404149431673742e-2-0.131456724313003j,
-3.404365761115312e-2-0.131084846042436j,-3.404578745209263e-2-0.130713889827045j,
-3.40478839005776e-2-0.130343853074372j,-3.404994701670431e-2-0.129974733198494j,
-3.405197685964553e-2-0.129606527620001j,-3.405397348765227e-2-0.129239233765986j,
-3.405593695805555e-2-0.12887284907002j,-3.405786732726819e-2-0.128507370972141j,
-3.405976465078650e-2-0.128142796918831j,-3.406162898319196e-2-0.127779124363007j,
-3.4063460378152e-2-0.127416350763994j,-3.406525888842646e-2-0.127054473587516j,
-3.406702456585946e-2-0.126693490305676j,-3.406875746139075e-2-0.126333398396939j,
-3.407045762505248e-2-0.125974195346116j,-3.407212510597168e-2-0.125615878644345j,
-3.40737599523718e-2-0.12525844578908j,-3.407536221157418e-2-0.124901894284066j,
-3.407693192999961e-2-0.124546221639329j,-3.407846915316973e-2-0.124191425371157j,
-3.407997392570847e-2-0.123837503002084j,-3.40814462913435e-2-0.123484452060873j,
-3.408288629290761e-2-0.123132270082499j,-3.408429397234002e-2-0.122780954608134j,
-3.408566937068780e-2-0.12243050318513j,-3.408701252810714e-2-0.122080913367003j,
-3.408832348386468e-2-0.121732182713416j,-3.408960227633875e-2-0.121384308790164j,
-3.409084894302062e-2-0.121037289169158j,-3.40920635205157e-2-0.120691121428407j,
-3.409324604454509e-2-0.120345803152002j,-3.409439654994596e-2-0.120001331930104j,
-3.409551507067353e-2-0.119657705358923j,-3.409660163980182e-2-0.119314921040705j,
-3.40976562895247e-2-0.118972976583717j,-3.40986790511575e-2-0.118631869602226j,
-3.409966995513711e-2-0.118291597716492j,-3.410062903102394e-2-0.117952158552742j,
-3.410155630750254e-2-0.117613549743164j,-3.410245181238265e-2-0.117275768925884j,
-3.410331557260014e-2-0.116938813744955j,-3.410414761421806e-2-0.11660268185034j,
-3.410494796242746e-2-0.116267370897896j,-3.410571664154838e-2-0.11593287854936j,
-3.410645367503075e-2-0.11559920247233j,-3.410715908545513e-2-0.115266340340257j,
-3.41078328945337e-2-0.114934289832420j,-3.410847512311103e-2-0.114603048633922j,
-3.410908579116483e-2-0.114272614435662j,-3.41096649178067e-2-0.113942984934333j,
-3.41102125212832e-2-0.113614157832396j,-3.411072861897615e-2-0.113286130838073j,
-3.411121322740334e-2-0.112958901665326j,-3.411166636221970e-2-0.112632468033845j,
-3.411208803821754e-2-0.112306827669036j,-3.411247826932732e-2-0.111981978301998j,
-3.411283706861831e-2-0.111657917669518j,-3.411316444829910e-2-0.111334643514048j,
-3.411346041971829e-2-0.111012153583695j,-3.411372499336492e-2-0.110690445632206j,
-3.411395817886915e-2-0.110369517418952j,-3.411415998500267e-2-0.110049366708913j,
-3.411433041967921e-2-0.109729991272666j,-3.411446948995506e-2-0.109411388886368j,
-3.411457720202943e-2-0.109093557331743j,-3.411465356124502e-2-0.108776494396067j,
-3.411469857208829e-2-0.108460197872156j,-3.411471223818988e-2-0.108144665558346j,
-3.411469456232506e-2-0.107829895258487j,-3.411464554641393e-2-0.107515884781919j,
-3.41145651915219e-2-0.107202631943469j,-3.411445349785985e-2-0.106890134563426j,
-3.41143104647845e-2-0.106578390467537j,-3.411413609079861e-2-0.106267397486983j,
-3.411393037355131e-2-0.105957153458375j,-3.41136933098382e-2-0.105647656223732j,
-3.411342489560166e-2-0.105338903630471j,-3.411312512593088e-2-0.105030893531395j,
-3.411279399506217e-2-0.104723623784675j,-3.411243149637902e-2-0.104417092253837j,
-3.41120376224121e-2-0.104111296807753j,-3.411161236483985e-2-0.103806235320622j,
-3.411115571448763e-2-0.103501905671957j,-3.411066766132866e-2-0.103198305746577j,
-3.41101481944836e-2-0.102895433434585j,-3.410959730222071e-2-0.102593286631362j,
-3.410901497195572e-2-0.10229186323755j,-3.410840119025194e-2-0.101991161159038j,
-3.410775594282002e-2-0.101691178306953j,-3.410707921451812e-2-0.101391912597641j,
-3.410637098935163e-2-0.101093361952658j,-3.410563125047307e-2-0.100795524298755j,
-3.410485998018205e-2-0.100498397567867j,-3.410405715992506e-2-0.100201979697096j,
-3.410322277029524e-2-9.990626862870154e-2j,-3.410235679103235e-2-9.961126231008742e-2j,
-3.410145920102233e-2-9.9316958693787e-2j,-3.410052997829725e-2-9.902335573745174e-2j,
-3.409956910003494e-2-9.87304514038377e-2j,-3.409857654255880e-2-9.843824366079363e-2j,
-3.409755228133742e-2-9.814673048124712e-2j,-3.409649629098431e-2-9.785590984319286e-2j,
-3.409540854525758e-2-9.75657797296795e-2j,-3.409428901705953e-2-9.72763381287975e-2j,
-3.409313767843632e-2-9.698758303366622e-2j,-3.409195450057755e-2-9.669951244242144e-2j,
-3.409073945381583e-2-9.641212435820314e-2j,-3.408949250762637e-2-9.61254167891432e-2j,
-3.408821363062656e-2-9.583938774835274e-2j,-3.408690279057535e-2-9.555403525390993e-2j,
-3.408555995437295e-2-9.526935732884792e-2j,-3.408418508806015e-2-9.498535200114249e-2j,
-3.408277815681788e-2-9.470201730369986e-2j,-3.40813391249665e-2-9.441935127434462e-2j,
-3.407986795596576e-2-9.41373519558077e-2j,-3.407836461241320e-2-9.38560173957145e-2j,
-3.407682905604452e-2-9.357534564657274e-2j,-3.407526124773244e-2-9.329533476576022e-2j,
-3.407366114748615e-2-9.301598281551376e-2j,-3.407202871445070e-2-9.273728786291663e-2j,
-3.407036390690620e-2-9.24592479798871e-2j,-3.406866668226714e-2-9.218186124316684e-2j,
-3.406693699708176e-2-9.190512573430883e-2j,-3.406517480703113e-2-9.162903953966608e-2j,
-3.406338006692851e-2-9.135360075037986e-2j,-3.406155273071849e-2-9.107880746236821e-2j,
-3.405969275147624e-2-9.080465777631447e-2j,-3.405780008140657e-2-9.053114979765574e-2j,
-3.405587467184326e-2-9.025828163657164e-2j,-3.4053916473248e-2-8.998605140797275e-2j,
-3.405192543520963e-2-8.97144572314894e-2j,-3.404990150644320e-2-8.944349723146054e-2j,
-3.404784463478901e-2-8.917316953692221e-2j,-3.404575476721173e-2-8.89034722815967e-2j,
-3.404363184979939e-2-8.863440360388132e-2j,-3.40414758277623e-2-8.836596164683712e-2j,
-3.403928664543256e-2-8.80981445581782e-2j,-3.403706424626205e-2-8.78309504902605e-2j,
-3.403480857282237e-2-8.756437760007120e-2j,-3.403251956680327e-2-8.72984240492170e-2j,
-3.403019716901173e-2-8.703308800391466e-2j,-3.40278413193707e-2-8.676836763497867e-2j,
-3.402545195691849e-2-8.650426111781172e-2j,-3.402302901980670e-2-8.624076663239350e-2j,
-3.402057244529998e-2-8.597788236326991e-2j,-3.401808216977441e-2-8.571560649954289e-2j,
-3.401555812871642e-2-8.545393723485947e-2j,-3.401300025672156e-2-8.519287276740156e-2j,
-3.401040848749322e-2-8.49324112998753e-2j,-3.400778275384150e-2-8.467255103950082e-2j,
-3.400512298768184e-2-8.441329019800168e-2j,-3.400242912003378e-2-8.415462699159473e-2j,
-3.399970108101967e-2-8.389655964097977e-2j,-3.399693879986332e-2-8.363908637132952e-2j,
-3.399414220488867e-2-8.3382205412278e-2j,-3.399131122351845e-2-8.312591499791588e-2j,
-3.398844578227275e-2-8.287021336677035e-2j,-3.398554580676772e-2-8.261509876180475e-2j,
-3.398261122171406e-2-8.236056943040402e-2j,-3.397964195091562e-2-8.21066236243654e-2j,
-3.397663791726801e-2-8.185325959988913e-2j,-3.397359904275704e-2-8.160047561756776e-2j,
-3.397052524845728e-2-8.13482699423771e-2j,-3.396741645453052e-2-8.109664084366627e-2j,
-3.396427258022436e-2-8.084558659514803e-2j,-3.39610935438704e-2-8.059510547488887e-2j,
-3.39578792628833e-2-8.03451957653e-2j,-3.395462965375821e-2-8.00958557531272e-2j,
-3.395134463207006e-2-7.984708372944181e-2j,-3.394802411247158e-2-7.959887798963104e-2j,
-3.394466800869169e-2-7.935123683338866e-2j,-3.394127623353385e-2-7.910415856470560e-2j,
-3.393784869887446e-2-7.885764149186083e-2j,-3.393438531566111e-2-7.861168392741196e-2j,
-3.39308859939109e-2-7.836628418818603e-2j,-3.392735064270869e-2-7.812144059527056e-2j,
-3.392377917020543e-2-7.787715147400422e-2j,-3.392017148361636e-2-7.763341515396803e-2j,
-3.391652748921923e-2-7.739022996897621e-2j,-3.391284709235251e-2-7.71475942570672e-2j,
-3.390913019741360e-2-7.6905506360495e-2j,-3.390537670785702e-2-7.666396462572010e-2j,
-3.390158652619250e-2-7.642296740340078e-2j,-3.38977595539832e-2-7.618251304838430e-2j,
-3.38938956918437e-2-7.594259991969845e-2j,-3.38899948394385e-2-7.570322638054264e-2j,
-3.388605689547935e-2-7.54643907982793e-2j,-3.388208175772408e-2-7.52260915444256e-2j,
-3.387806932297426e-2-7.498832699464485e-2j,-3.387401948707334e-2-7.475109552873787e-2j,
-3.386993214490465e-2-7.451439553063486e-2j,-3.386580719038937e-2-7.427822538838697e-2j,
-3.386164451648459e-2-7.404258349415803e-2j,-3.38574440151811e-2-7.380746824421626e-2j,
-3.385320557750187e-2-7.357287803892619e-2j,-3.384892909349902e-2-7.333881128274043e-2j,
-3.384461445225266e-2-7.310526638419172e-2j,-3.384026154186835e-2-7.287224175588474e-2j,
-3.383587024947507e-2-7.26397358144883e-2j,-3.383144046122306e-2-7.24077469807272e-2j,
-3.382697206228168e-2-7.217627367937484e-2j,-3.382246493683732e-2-7.194531433924464e-2j,
-3.381791896809105e-2-7.171486739318295e-2j,-3.381333403825658e-2-7.148493127806105e-2j,
-3.380871002855796e-2-7.125550443476751e-2j,-3.380404681922737e-2-7.102658530820061e-2j,
-3.379934428950285e-2-7.07981723472608e-2j,-3.379460231762609e-2-7.057026400484313e-2j,
-3.378982078084006e-2-7.034285873782986e-2j,-3.378499955538680e-2-7.011595500708308e-2j,
-3.378013851650503e-2-6.988955127743726e-2j,-3.377523753842788e-2-6.966364601769214e-2j,
-3.377029649438052e-2-6.943823770060532e-2j,-3.376531525657778e-2-6.92133248028852e-2j,
-3.376029369622179e-2-6.89889058051837e-2j,-3.37552316834996e-2-6.876497919208944e-2j,
-3.375012908758072e-2-6.85415434521203e-2j,-3.374498577661475e-2-6.83185970777172e-2j,
-3.373980161772894e-2-6.809613856523632e-2j,-3.373457647702564e-2-6.787416641494256e-2j,
-3.372931021957995e-2-6.765267913100307e-2j,-3.372400270943718e-2-6.743167522148011e-2j,
-3.371865380961031e-2-6.721115319832456e-2j,-3.371326338207756e-2-6.69911115773691e-2j,
-3.370783128777973e-2-6.677154887832195e-2j,-3.37023573866178e-2-6.655246362475979e-2j,
-3.369684153745023e-2-6.633385434412185e-2j,-3.36912835980904e-2-6.61157195677032e-2j,
-3.368568342530438e-2-6.589805783064868e-2j,-3.368004087480746e-2-6.56808676719459e-2j,
-3.367435580126245e-2-6.546414763441994e-2j,-3.366862805827655e-2-6.524789626472634e-2j,
-3.36628574983988e-2-6.503211211334553e-2j,-3.365704397311744e-2-6.481679373457641e-2j,
-3.365118733285717e-2-6.460193968653048e-2j,-3.36452874269765e-2-6.438754853112584e-2j,
-3.363934410376505e-2-6.417361883408126e-2j,-3.363335721044078e-2-6.396014916491037e-2j,
-3.362732659314726e-2-6.37471380969158e-2j,-3.362125209695094e-2-6.353458420718357e-2j,
-3.36151335658384e-2-6.332248607657723e-2j,-3.360897084271353e-2-6.311084228973244e-2j,
-3.36027637693947e-2-6.289965143505122e-2j,-3.359651218661207e-2-6.268891210469655e-2j,
-3.359021593400466e-2-6.247862289458701e-2j,-3.358387485011754e-2-6.22687824043910e-2j,
-3.357748877239903e-2-6.205938923752227e-2j,-3.357105753719776e-2-6.185044200113336e-2j,
-3.356458097975985e-2-6.164193930611166e-2j,-3.355805893422604e-2-6.143387976707357e-2j,
-3.35514912336287e-2-6.122626200235938e-2j,-3.354487770988900e-2-6.101908463402861e-2j,
-3.353821819381396e-2-6.081234628785479e-2j,-3.353151251509348e-2-6.060604559332056e-2j,
-3.35247605022974e-2-6.040018118361296e-2j,-3.351796198287263e-2-6.019475169561845e-2j,
-3.351111678313997e-2-5.998975576991828e-2j,-3.350422472829132e-2-5.978519205078385e-2j,
-3.349728564238656e-2-5.95810591861720e-2j,-3.349029934835060e-2-5.937735582772083e-2j,
-3.348326566797029e-2-5.917408063074450e-2j,-3.347618442189145e-2-5.897123225422942e-2j,
-3.34690554296158e-2-5.876880936082972e-2j,-3.346187850949783e-2-5.856681061686299e-2j,
-3.345465347874185e-2-5.83652346923058e-2j,-3.344738015339882e-2-5.81640802607901e-2j,
-3.344005834836328e-2-5.796334599959823e-2j,-3.343268787737023e-2-5.776303058965971e-2j,
-3.342526855299206e-2-5.756313271554681e-2j,-3.341780018663535e-2-5.736365106547081e-2j,
-3.341028258853777e-2-5.716458433127804e-2j,-3.3402715567765e-2-5.696593120844613e-2j,
-3.339509893220738e-2-5.676769039608033e-2j,-3.3387432488577e-2-5.65698605969096e-2j,
-3.337971604240429e-2-5.637244051728366e-2j,-3.337194939803496e-2-5.617542886716852e-2j,
-3.336413235862675e-2-5.597882436014376e-2j,-3.335626472614626e-2-5.578262571339889e-2j,
-3.334834630136568e-2-5.558683164772988e-2j,-3.334037688385961e-2-5.539144088753612e-2j,
-3.33323562720018e-2-5.519645216081705e-2j,-3.332428426296192e-2-5.500186419916910e-2j,
-3.331616065270224e-2-5.480767573778263e-2j,-3.33079852359745e-2-5.461388551543882e-2j,
-3.329975780631649e-2-5.442049227450686e-2j,-3.32914781560488e-2-5.422749476094108e-2j,
-3.328314607627186e-2-5.403489172427803e-2j,-3.327476135686187e-2-5.384268191763384e-2j,
-3.326632378646833e-2-5.36508640977016e-2j,-3.325783315251027e-2-5.345943702474858e-2j,
-3.3249289241173e-2-5.326839946261389e-2j,-3.32406918374049e-2-5.307775017870599e-2j,
-3.323204072491392e-2-5.288748794400021e-2j,-3.322333568616438e-2-5.269761153303656e-2j,
-3.321457650237354e-2-5.250811972391728e-2j,-3.320576295350822e-2-5.231901129830488e-2j,
-3.319689481828158e-2-5.213028504141996e-2j,-3.318797187414960e-2-5.194193974203910e-2j,
-3.317899389730774e-2-5.175397419249295e-2j,-3.316996066268768e-2-5.156638718866441e-2j,
-3.316087194395376e-2-5.137917752998659e-2j,-3.315172751349966e-2-5.119234401944126e-2j,
-3.314252714244508e-2-5.10058854635571e-2j,-3.313327060063222e-2-5.081980067240814e-2j,
-3.31239576566224e-2-5.063408845961213e-2j,-3.311458807769294e-2-5.04487476423290e-2j,
-3.310516162983305e-2-5.026377704126e-2j,-3.309567807774112e-2-5.007917548064544e-2j,
-3.308613718482100e-2-4.989494178826437e-2j,-3.307653871317856e-2-4.971107479543292e-2j,
-3.306688242361830e-2-4.952757333700327e-2j,-3.305716807563993e-2-4.93444362513627e-2j,
-3.30473954274349e-2-4.916166238043285e-2j,-3.3037564235883e-2-4.897925056966822e-2j,
-3.30276742565489e-2-4.879719966805608e-2j,-3.301772524367868e-2-4.861550852811537e-2j,
-3.300771695019645e-2-4.843417600589612e-2j,-3.299764912770082e-2-4.825320096097902e-2j,
-3.298752152646155e-2-4.807258225647472e-2j,-3.2977333895416e-2-4.789231875902362e-2j,
-3.296708598216578e-2-4.77124093387953e-2j,-3.29567775329731e-2-4.753285286948879e-2j,
-3.294640829275783e-2-4.735364822833146e-2j,-3.29359780050932e-2-4.717479429607990e-2j,
-3.292548641220313e-2-4.699628995701938e-2j,-3.291493325495841e-2-4.681813409896398e-2j,
-3.290431827287334e-2-4.664032561325677e-2j,-3.289364120410223e-2-4.646286339477006e-2j,
-3.288290178543598e-2-4.628574634190568e-2j,-3.287209975229868e-2-4.610897335659529e-2j,
-3.286123483874407e-2-4.593254334430097e-2j,-3.28503067774521e-2-4.575645521401571e-2j,
-3.283931529972586e-2-4.558070787826389e-2j,-3.282826013548731e-2-4.540530025310227e-2j,
-3.281714101327472e-2-4.523023125812054e-2j,-3.280595766023877e-2-4.505549981644231e-2j,
-3.279470980213923e-2-4.488110485472609e-2j,-3.278339716334155e-2-4.470704530316614e-2j,
-3.277201946681345e-2-4.453332009549383e-2j,-3.276057643412144e-2-4.435992816897871e-2j,
-3.274906778542748e-2-4.418686846442985e-2j,-3.273749323948558e-2-4.401413992619722e-2j,
-3.272585251363833e-2-4.384174150217297e-2j,-3.271414532381362e-2-4.366967214379336e-2j,
-3.270237138452113e-2-4.349793080604003e-2j,-3.269053040884906e-2-4.332651644744185e-2j,
-3.267862210846069e-2-4.315542803007682e-2j,-3.266664619359108e-2-4.298466451957373e-2j,
-3.265460237304363e-2-4.281422488511439e-2j,-3.264249035418681e-2-4.26441080994355e-2j,
-3.263030984295080e-2-4.2474313138830e-2j,-3.261806054382415e-2-4.230483898315407e-2j,
-3.260574215985048e-2-4.21356846158197e-2j,-3.259335439262515e-2-4.196684902380691e-2j,
-3.258089694229196e-2-4.179833119766138e-2j,-3.25683695075398e-2-4.16301301314980e-2j,
-3.25557717855998e-2-4.14622448230038e-2j,-3.25431034722411e-2-4.129467427344031e-2j,
-3.253036426176893e-2-4.112741748764649e-2j,-3.251755384701998e-2-4.096047347404211e-2j,
-3.250467191936026e-2-4.079384124463047e-2j,-3.249171816868134e-2-4.062751981500154e-2j,
-3.247869228339726e-2-4.04615082043354e-2j,-3.246559395044145e-2-4.02958054354053e-2j,
-3.24524228552633e-2-4.013041053458151e-2j,-3.243917868182556e-2-3.99653225318341e-2j,
-3.242586111260027e-2-3.980054046073764e-2j,-3.241246982856655e-2-3.963606335847372e-2j,
-3.239900450920705e-2-3.947189026583568e-2j,-3.238546483250489e-2-3.930802022723204e-2j,
-3.237185047494066e-2-3.914445229069068e-2j,-3.235816111148932e-2-3.898118550786283e-2j,
-3.234439641561718e-2-3.881821893402737e-2j,-3.23305560592789e-2-3.8655551628095e-2j,
-3.231663971291443e-2-3.849318265261262e-2j,-3.230264704544614e-2-3.8331111073768e-2j,
-3.22885777242757e-2-3.816933596139416e-2j,-3.227443141528137e-2-3.800785638897416e-2j,
-3.226020778281482e-2-3.784667143364580e-2j,-3.224590648969847e-2-3.768578017620654e-2j,
-3.22315271972225e-2-3.752518170111853e-2j,-3.221706956514203e-2-3.73648750965135e-2j,
-3.220253325167428e-2-3.720485945419848e-2j,-3.218791791349582e-2-3.704513386966013e-2j,
-3.217322320573974e-2-3.688569744207106e-2j,-3.215844878199296e-2-3.672654927429474e-2j,
-3.214359429429345e-2-3.65676884728914e-2j,-3.212865939312762e-2-3.640911414812357e-2j,
-3.211364372742753e-2-3.625082541396186e-2j,-3.20985469445684e-2-3.609282138809103e-2j,
-3.208336869036584e-2-3.593510119191566e-2j,-3.206810860907345e-2-3.577766395056666e-2j,
-3.20527663433800e-2-3.562050879290721e-2j,-3.203734153440749e-2-3.546363485153917e-2j,
-3.202183382170771e-2-3.530704126280949e-2j,-3.20062428432607e-2-3.51507271668168e-2j,
-3.199056823547184e-2-3.499469170741788e-2j,-3.197480963316959e-2-3.483893403223460e-2j,
-3.195896666960315e-2-3.46834532926606e-2j,-3.194303897644004e-2-3.452824864386871e-2j,
-3.192702618376395e-2-3.437331924481711e-2j,-3.191092792007239e-2-3.421866425825735e-2j,
-3.189474381227451e-2-3.406428285074137e-2j,-3.187847348568891e-2-3.39101741926288e-2j,
-3.186211656404151e-2-3.375633745809454e-2j,-3.18456726694635e-2-3.360277182513648e-2j,
-3.182914142248918e-2-3.344947647558298e-2j,-3.1812522442054e-2-3.329645059510098e-2j,
-3.179581534549261e-2-3.314369337320384e-2j,-3.177901974853683e-2-3.299120400325939e-2j,
-3.176213526531388e-2-3.283898168249819e-2j,-3.174516150834441e-2-3.268702561202163e-2j,
-3.172809808854077e-2-3.253533499681064e-2j,-3.171094461520526e-2-3.238390904573399e-2j,
-3.169370069602832e-2-3.2232746971557e-2j,-3.167636593708695e-2-3.208184799095027e-2j,
-3.16589399428431e-2-3.193121132449866e-2j,-3.164142231614199e-2-3.178083619671002e-2j,
-3.162381265821071e-2-3.163072183602458e-2j,-3.160611056865668e-2-3.148086747482402e-2j,
-3.158831564546626e-2-3.133127234944086e-2j,-3.15704274850032e-2-3.118193570016785e-2j,
-3.155244568200793e-2-3.103285677126756e-2j,-3.153436982959525e-2-3.088403481098215e-2j,
-3.151619951925411e-2-3.073546907154312e-2j,-3.149793434084596e-2-3.058715880918124e-2j,
-3.147957388260376e-2-3.043910328413661e-2j,-3.146111773113094e-2-3.029130176066886e-2j,
-3.144256547140038e-2-3.014375350706737e-2j,-3.142391668675355e-2-2.999645779566177e-2j,
-3.140517095889962e-2-2.984941390283243e-2j,-3.138632786791462e-2-2.970262110902113e-2j,
-3.136738699224077e-2-2.95560786987418e-2j,-3.134834790868572e-2-2.940978596059174e-2j,
-3.132921019242202e-2-2.926374218726190e-2j,-3.13099734169865e-2-2.911794667554886e-2j,
-3.129063715427984e-2-2.897239872636566e-2j,-3.127120097456614e-2-2.882709764475336e-2j,
-3.125166444647254e-2-2.868204273989239e-2j,-3.123202713698900e-2-2.853723332511443e-2j,
-3.121228861146803e-2-2.839266871791407e-2j,-3.119244843362462e-2-2.824834823996071e-2j,
-3.117250616553612e-2-2.810427121711067e-2j,-3.115246136764227e-2-2.796043697941918e-2j,
-3.113231359874531e-2-2.781684486115291e-2j,-3.111206241601008e-2-2.767349420080225e-2j,
-3.10917073749643e-2-2.753038434109383e-2j,-3.107124802949893e-2-2.738751462900326e-2j,
-3.105068393186847e-2-2.7244884415768e-2j,-3.103001463269146e-2-2.710249305690003e-2j,
-3.100923968095108e-2-2.696033991219926e-2j,-3.098835862399577e-2-2.681842434576652e-2j,
-3.096737100753994e-2-2.667674572601692e-2j,-3.09462763756647e-2-2.653530342569338e-2j,
-3.092507427081917e-2-2.639409682188006e-2j,-3.090376423382063e-2-2.625312529601628e-2j,
-3.088234580385644e-2-2.611238823391027e-2j,-3.086081851848477e-2-2.597188502575318e-2j,
-3.083918191363594e-2-2.58316150661332e-2j,-3.081743552361374e-2-2.569157775404983e-2j,
-3.079557888109694e-2-2.555177249292821e-2j,-3.077361151714073e-2-2.541219869063377e-2j,
-3.075153296117845e-2-2.527285575948678e-2j,-3.072934274102323e-2-2.513374311627721e-2j,
-3.070704038286990e-2-2.499486018227965e-2j,-3.068462541129686e-2-2.485620638326832e-2j,
-3.066209734926812e-2-2.471778114953237e-2j,-3.06394557181354e-2-2.457958391589118e-2j,
-3.061670003764077e-2-2.444161412170983e-2j,-3.05938298259181e-2-2.430387121091474e-2j,
-3.057084459949644e-2-2.416635463200936e-2j,-3.054774387330211e-2-2.402906383809017e-2j,
-3.052452716066147e-2-2.389199828686262e-2j,-3.050119397330374e-2-2.375515744065737e-2j,
-3.047774382136385e-2-2.361854076644658e-2j,-3.045417621338552e-2-2.348214773586025e-2j,
-3.043049065632432e-2-2.3345977825203e-2j,-3.040668665555099e-2-2.321003051547067e-2j,
-3.038276371485478e-2-2.307430529236723e-2j,-3.035872133644692e-2-2.293880164632179e-2j,
-3.033455902096431e-2-2.280351907250572e-2j,-3.031027626747317e-2-2.266845707084998e-2j,
-3.0285872573473e-2-2.253361514606252e-2j,-3.026134743490048e-2-2.239899280764591e-2j,
-3.023670034613369e-2-2.226458956991502e-2j,-3.021193079999631e-2-2.213040495201487e-2j,
-3.018703828776202e-2-2.199643847793861e-2j,-3.0162022299159e-2-2.186268967654575e-2j,
-3.013688232237467e-2-2.172915808158037e-2j,-3.011161784406041e-2-2.159584323168961e-2j,
-3.008622834933652e-2-2.146274467044218e-2j,-3.006071332179732e-2-2.132986194634716e-2j,
-3.003507224351634e-2-2.119719461287269e-2j,-3.000930459505174e-2-2.106474222846524e-2j,
-2.998340985545175e-2-2.093250435656854e-2j,-2.995738750226042e-2-2.080048056564301e-2j,
-2.993123701152336e-2-2.066867042918510e-2j,-2.990495785779377e-2-2.053707352574690e-2j,
-2.987854951413851e-2-2.040568943895592e-2j,-2.985201145214441e-2-2.027451775753492e-2j,
-2.98253431419247e-2-2.014355807532195e-2j,-2.979854405212561e-2-2.00128099912904e-2j,
-2.977161364993309e-2-1.988227310956974e-2j,-2.97445514010798e-2-1.975194703946515e-2j,
-2.971735676985213e-2-1.962183139547895e-2j,-2.969002921909751e-2-1.949192579733094e-2j,
-2.966256821023182e-2-1.936222986997938e-2j,-2.963497320324696e-2-1.923274324364194e-2j,
-2.960724365671866e-2-1.910346555381702e-2j,-2.95793790278144e-2-1.897439644130498e-2j,
-2.955137877230154e-2-1.88455355522297e-2j,-2.952324234455569e-2-1.871688253806007e-2j,
-2.949496919756908e-2-1.858843705563192e-2j,-2.946655878295932e-2-1.846019876716977e-2j,
-2.943801055097823e-2-1.833216734030901e-2j,-2.940932395052095e-2-1.820434244811808e-2j,
-2.938049842913504e-2-1.807672376912076e-2j,-2.935153343303007e-2-1.794931098731877e-2j,
-2.932242840708715e-2-1.782210379221426e-2j,-2.929318279486879e-2-1.769510187883277e-2j,
-2.926379603862893e-2-1.756830494774606e-2j,-2.923426757932315e-2-1.744171270509518e-2j,
-2.920459685661915e-2-1.731532486261379e-2j,-2.91747833089073e-2-1.718914113765139e-2j,
-2.91448263733115e-2-1.706316125319693e-2j,-2.911472548570065e-2-1.693738493790247e-2j,
-2.9084480080699e-2-1.681181192610694e-2j,-2.905408959169858e-2-1.668644195786011e-2j,
-2.902355345087045e-2-1.656127477894669e-2j,-2.899287108917672e-2-1.643631014091052e-2j,
-2.896204193638269e-2-1.631154780107901e-2j,-2.89310654210692e-2-1.618698752258766e-2j,
-2.88999409706456e-2-1.606262907440464e-2j,-2.88686680113617e-2-1.593847223135577e-2j,
-2.883724596832211e-2-1.581451677414924e-2j,-2.880567426549827e-2-1.569076248940091e-2j,
-2.877395232574296e-2-1.556720916965943e-2j,-2.874207957080365e-2-1.54438566134317e-2j,
-2.871005542133661e-2-1.532070462520833e-2j,-2.867787929692124e-2-1.519775301548923e-2j,
-2.864555061607457e-2-1.50750016008096e-2j,-2.861306879626604e-2-1.495245020376573e-2j,
-2.858043325393256e-2-1.483009865304108e-2j,-2.854764340449382e-2-1.470794678343258e-2j,
-2.851469866236783e-2-1.458599443587691e-2j,-2.848159844098672e-2-1.4464241457477e-2j,
-2.844834215281291e-2-1.434268770152869e-2j,-2.841492920935537e-2-1.422133302754755e-2j,
-2.838135902118635e-2-1.410017730129566e-2j,-2.834763099795817e-2-1.397922039480878e-2j,
-2.83137445484205e-2-1.385846218642335e-2j,-2.82796990804378e-2-1.373790256080405e-2j,
-2.824549400100702e-2-1.361754140897101e-2j,-2.821112871627568e-2-1.349737862832753e-2j,
-2.817660263156018e-2-1.337741412268771e-2j,-2.814191515136443e-2-1.325764780230437e-2j,
-2.810706567939868e-2-1.313807958389689e-2j,-2.807205361859884e-2-1.301870939067944e-2j,
-2.803687837114592e-2-1.289953715238917e-2j,-2.800153933848587e-2-1.278056280531454e-2j,
-2.796603592134967e-2-1.266178629232383e-2j,-2.793036751977377e-2-1.25432075628937e-2j,
-2.78945335331208e-2-1.242482657313802e-2j,-2.785853336010099e-2-1.230664328583665e-2j,
-2.782236639879271e-2-1.218865767046448e-2j,-2.778603204666511e-2-1.20708697032205e-2j,
-2.774952970059958e-2-1.195327936705698e-2j,-2.771285875691235e-2-1.183588665170896e-2j,
-2.767601861137706e-2-1.171869155372358e-2j,-2.76390086592479e-2-1.160169407648972e-2j,
-2.760182829528288e-2-1.148489423026775e-2j,-2.75644769137675e-2-1.136829203221919e-2j,
-2.752695390853932e-2-1.125188750643685e-2j,-2.748925867301133e-2-1.113568068397472e-2j,
-2.745139060019780e-2-1.10196716028782e-2j,-2.741334908273874e-2-1.090386030821435e-2j,
-2.737513351292569e-2-1.078824685210225e-2j,-2.733674328272733e-2-1.067283129374348e-2j,
-2.729817778381594e-2-1.055761369945276e-2j,-2.725943640759378e-2-1.04425941426886e-2j,
-2.722051854522016e-2-1.032777270408408e-2j,-2.718142358763876e-2-1.021314947147792e-2j,
-2.714215092560526e-2-1.00987245399451e-2j,-2.710269994971556e-2-9.984498011828362e-3j,
-2.706307005043425e-2-9.870469996769264e-3j,-2.70232606181234e-2-9.756640611739362e-3j,
-2.698327104307194e-2-9.643009981071731e-3j,-2.694310071552528e-2-9.529578236492389e-3j,
-2.690274902571540e-2-9.416345517151823e-3j,-2.686221536389138e-2-9.303311969656725e-3j,
-2.682149912035027e-2-9.190477748101693e-3j,-2.678059968546838e-2-9.077843014101036e-3j,
-2.673951644973305e-2-8.965407936820732e-3j,-2.669824880377478e-2-8.853172693010293e-3j,
-2.665679613839984e-2-8.741137467035006e-3j,-2.661515784462326e-2-8.629302450907948e-3j,
-2.65733333137023e-2-8.517667844322220e-3j,-2.65313219371703e-2-8.40623385468330e-3j,
-2.6489123106871e-2-8.295000697141267e-3j,-2.644673621499339e-2-8.183968594623340e-3j,
-2.640416065410682e-2-8.07313777786633e-3j,-2.636139581719679e-2-7.962508485449183e-3j,
-2.631844109770097e-2-7.852080963825605e-3j,-2.627529588954589e-2-7.741855467356645e-3j,
-2.623195958718392e-2-7.631832258343552e-3j,-2.618843158563091e-2-7.52201160706046e-3j,
-2.614471128050406e-2-7.412393791787237e-3j,-2.610079806806053e-2-7.30297909884232e-3j,
-2.605669134523632e-2-7.193767822615742e-3j,-2.601239050968574e-2-7.084760265601873e-3j,
-2.59678949598214e-2-6.975956738432641e-3j,-2.59232040948545e-2-6.867357559910450e-3j,
-2.587831731483627e-2-6.75896305704124e-3j,-2.583323402069847e-2-6.650773565067644e-3j,
-2.578795361429625e-2-6.542789427501984e-3j,-2.574247549845017e-2-6.43501099615955e-3j,
-2.569679907698927e-2-6.327438631191703e-3j,-2.565092375479458e-2-6.220072701119029e-3j,
-2.560484893784308e-2-6.112913582864581e-3j,-2.555857403325235e-2-6.005961661787078e-3j,
-2.551209844932555e-2-5.899217331714035e-3j,-2.546542159559716e-2-5.792680994975114e-3j,
-2.541854288287904e-2-5.68635306243523e-3j,-2.537146172330722e-2-5.580233953527831e-3j,
-2.532417753038912e-2-5.474324096288061e-3j,-2.52766897190514e-2-5.368623927385915e-3j,
-2.522899770568829e-2-5.26313389215954e-3j,-2.51811009082106e-2-5.157854444648274e-3j,
-2.513299874609526e-2-5.052786047625856e-3j,-2.508469064043526e-2-4.947929172633511e-3j,
-2.503617601399046e-2-4.843284300012969e-3j,-2.498745429123881e-2-4.738851918939642e-3j,
-2.493852489842815e-2-4.634632527455520e-3j,-2.488938726362866e-2-4.530626632502182e-3j,
-2.484004081678591e-2-4.426834749953711e-3j,-2.47904849897743e-2-4.323257404649495e-3j,
-2.474071921645191e-2-4.219895130427114e-3j,-2.469074293271428e-2-4.116748470155070e-3j,
-2.464055557655085e-2-4.01381797576543e-3j,-2.459015658810057e-2-3.911104208286440e-3j,
-2.453954540970871e-2-3.808607737875112e-3j,-2.448872148598413e-2-3.706329143849576e-3j,
-2.443768426385731e-2-3.604269014721555e-3j,-2.438643319263891e-2-3.502427948228574e-3j,
-2.433496772407904e-2-3.400806551366181e-3j,-2.428328731242714e-2-3.29940544042002e-3j,
-2.42313914144925e-2-3.19822524099774e-3j,-2.41792794897054e-2-3.097266588060965e-3j,
-2.412695100017945e-2-2.996530125957e-3j,-2.407440541077312e-2-2.896016508450432e-3j,
-2.402164218915395e-2-2.795726398754652e-3j,-2.396866080586192e-2-2.69566046956324e-3j,
-2.391546073437407e-2-2.5958194030811e-3j,-2.386204145116979e-2-2.496203891055674e-3j,
-2.380840243579674e-2-2.396814634807774e-3j,-2.375454317093746e-2-2.297652345262382e-3j,
-2.370046314247670e-2-2.198717742979297e-3j,-2.364616183956941e-2-2.10001155818345e-3j,
-2.359163875470959e-2-2.001534530795345e-3j,-2.353689338379958e-2-1.903287410460993e-3j,
-2.348192522622036e-2-1.80527095658189e-3j,-2.342673378490239e-2-1.707485938344685e-3j,
-2.337131856639720e-2-1.609933134750613e-3j,-2.33156790809498e-2-1.512613334644915e-3j,
-2.325981484257173e-2-1.415527336745786e-3j,-2.320372536911488e-2-1.318675949673277e-3j,
-2.314741018234613e-2-1.222059991977927e-3j,-2.309086880802255e-2-1.12568029216905e-3j,
-2.303410077596763e-2-1.029537688742982e-3j,-2.297710562014802e-2-9.336330302109040e-4j,
-2.291988287875119e-2-8.379671751264732e-4j,-2.286243209426378e-2-7.425409921131828e-4j,
-2.280475281355077e-2-6.473553598914392e-4j,-2.274684458793537e-2-5.524111673053257e-4j,
-2.26887069732797e-2-4.577093133491761e-4j,-2.26303395300667e-2-3.632507071937313e-4j,
-2.257174182348156e-2-2.690362682120603e-4j,-2.251291342349569e-2-1.750669260051489e-4j,
-2.245385390495013e-2-8.134362042709966e-5j,-2.239456284764038e-2+1.213269838984394e-5j,
-2.233503983640197e-2+1.053610700107685e-4j,-2.227528446119661e-2+1.983405236738483e-4j,
-2.221529631719953e-2+2.910700782664493e-4j,-2.215507500488733e-2+3.835487423016296e-4j,
-2.209462013012678e-2+4.757755138950515e-4j,-2.203393130426450e-2+5.67749380742127e-4j,
-2.197300814421740e-2+6.594693200957629e-4j,-2.191185027256401e-2+7.50934298744359e-4j,
-2.185045731763658e-2+8.421432729902894e-4j,-2.178882891361409e-2+9.330951886288520e-4j,
-2.17269647006162e-2+1.023788980927478e-3j,-2.166486432479786e-2+1.114223574605595e-3j,
-2.16025274384449e-2+1.204397883814811e-3j,-2.153995370007056e-2+1.294310812119614e-3j,
-2.147714277451265e-2+1.383961252478568e-3j,-2.141409433303191e-2+1.473348087225887e-3j,
-2.135080805341095e-2+1.562470188053652e-3j,-2.128728362005425e-2+1.651326415994421e-3j,
-2.122352072408900e-2+1.739915621404404e-3j,-2.115951906346681e-2+1.828236643947223e-3j,
-2.109527834306631e-2+1.916288312578051e-3j,-2.103079827479671e-2+2.004069445528471e-3j,
-2.096607857770218e-2+2.091578850291809e-3j,-2.090111897806721e-2+2.17881532360907e-3j,
-2.083591920952280e-2+2.265777651455425e-3j,-2.077047901315359e-2+2.352464609027402e-3j,
-2.070479813760598e-2+2.438874960730503e-3j,-2.063887633919708e-2+2.525007460167619e-3j,
-2.057271338202456e-2+2.610860850127985e-3j,-2.050630903807754e-2+2.696433862576802e-3j,
-2.04396630873483e-2+2.781725218645588e-3j,-2.037277531794497e-2+2.866733628623035e-3j,
-2.030564552620517e-2+2.951457791946728e-3j,-2.023827351681052e-2+3.035896397195458e-3j,
-2.017065910290219e-2+3.120048122082295e-3j,-2.010280210619730e-2+3.203911633448347e-3j,
-2.003470235710628e-2+3.287485587257342e-3j,-1.99663596948512e-2+3.370768628590805e-3j,
-1.98977739675854e-2+3.453759391644162e-3j,-1.982894503251290e-2+3.536456499723554e-3j,
-1.975987275601049e-2+3.618858565243411e-3j,-1.969055701374933e-2+3.700964189724968e-3j,
-1.962099769081833e-2+3.782771963795385e-3j,-1.955119468184807e-2+3.864280467187932e-3j,
-1.94811478911359e-2+3.94548826874286e-3j,-1.941085723277197e-2+4.02639392640927e-3j,
-1.934032263076611e-2+4.106995987247752e-3j,-1.926954401917591e-2+4.187292987433973e-3j,
-1.919852134223551e-2+4.267283452263208e-3j,-1.912725455448556e-2+4.346965896155735e-3j,
-1.905574362090409e-2+4.426338822663215e-3j,-1.898398851703826e-2+4.505400724476086e-3j,
-1.89119892291372e-2+4.584150083431783e-3j,-1.883974575428615e-2+4.662585370524091e-3j,
-1.876725810054044e-2+4.740705045913466e-3j,-1.869452628706203e-2+4.81850755893836e-3j,
-1.862155034425589e-2+4.895991348127638e-3j,-1.854833031390767e-2+4.973154841213989e-3j,
-1.847486624932255e-2+5.049996455148461e-3j,-1.840115821546482e-2+5.126514596116081e-3j,
-1.832720628909853e-2+5.202707659552602e-3j,-1.825301055892918e-2+5.278574030162329e-3j,
-1.817857112574627e-2+5.354112081937197e-3j,-1.810388810256691e-2+5.429320178176858e-3j,
-1.80289616147804e-2+5.504196671510102e-3j,-1.79537918002941e-2+5.578739903917407e-3j,
-1.787837880967912e-2+5.652948206754711e-3j,-1.780272280631877e-2+5.726819900778439e-3j,
-1.772682396655652e-2+5.800353296171830e-3j,-1.765068247984561e-2+5.873546692572427e-3j,
-1.757429854889946e-2+5.946398379100974e-3j,-1.749767238984309e-2+6.018906634391597e-3j,
-1.74208042323655e-2+6.09106972662328e-3j,-1.734369431987292e-2+6.162885913552833e-3j,
-1.726634290964328e-2+6.234353442548987e-3j,-1.718875027298138e-2+6.305470550628146e-3j,
-1.711091669537509e-2+6.376235464491413e-3j,-1.703284247665265e-2+6.446646400563075e-3j,
-1.695452793114065e-2+6.516701565030603e-3j,-1.687597338782328e-2+6.586399153886019e-3j,
-1.679717919050228e-2+6.655737352968876e-3j,-1.671814569795794e-2+6.724714338010701e-3j,
-1.663887328411103e-2+6.793328274680978e-3j,-1.655936233818562e-2+6.861577318634774e-3j,
-1.64796132648729e-2+6.929459615561801e-3j,-1.639962648449591e-2+6.996973301237236e-3j,
-1.631940243317509e-2+7.064116501574091e-3j,-1.623894156299495e-2+7.130887332677265e-3j,
-1.615824434217142e-2+7.197283900899241e-3j,-1.607731125522025e-2+7.26330430289755e-3j,
-1.599614280312631e-2+7.328946625693882e-3j,-1.591473950351367e-2+7.394208946734943e-3j,
-1.583310189081674e-2+7.459089333955158e-3j,-1.57512305164521e-2+7.523585845841070e-3j,
-1.566912594899132e-2+7.587696531497675e-3j,-1.558678877433464e-2+7.651419430716432e-3j,
-1.550421959588548e-2+7.714752574045262e-3j,-1.542141903472579e-2+7.777693982860413e-3j,
-1.533838772979228e-2+7.8402416694401e-3j,-1.525512633805344e-2+7.9023936370406e-3j,
-1.517163553468737e-2+7.964147879973453e-3j,-1.508791601326056e-2+8.025502383685047e-3j,
-1.500396848590729e-2+8.086455124838796e-3j,-1.491979368350993e-2+8.147004071398455e-3j,
-1.483539235588006e-2+8.207147182713931e-3j,-1.475076527194019e-2+8.266882409609188e-3j,
-1.466591321990652e-2+8.326207694472124e-3j,-1.458083700747222e-2+8.385120971346715e-3j,
-1.449553746199151e-2+8.44362016602727e-3j,-1.441001543066456e-2+8.501703196154846e-3j,
-1.432427178072300e-2+8.55936797131598e-3j,-1.42383073996162e-2+8.616612393143549e-3j,
-1.415212319519823e-2+8.673434355419949e-3j,-1.406572009591546e-2+8.729831744182613e-3j,
-1.397909905099491e-2+8.785802437831794e-3j,-1.389226103063311e-2+8.84134430724076e-3j,
-1.380520702618579e-2+8.896455215868282e-3j,-1.371793805035805e-2+8.951133019873616e-3j,
-1.36304551373952e-2+9.005375568233862e-3j,-1.354275934327409e-2+9.059180702863846e-3j,
-1.345485174589521e-2+9.112546258738404e-3j,-1.336673344527514e-2+9.165470064017316e-3j,
-1.327840556373972e-2+9.217949940172617e-3j,-1.31898692461176e-2+9.269983702118635e-3j,
-1.310112565993439e-2+9.321569158344557e-3j,-1.301217599560729e-2+9.372704111049634e-3j,
-1.292302146664007e-2+9.423386356281103e-3j,-1.283366330981875e-2+9.473613684074686e-3j,
-1.274410278540745e-2+9.523383878597934e-3j,-1.26543411773448e-2+9.572694718296235e-3j,
-1.25643797934407e-2+9.621543976041632e-3j,-1.247421996557347e-2+9.669929419284448e-3j,
-1.238386304988726e-2+9.717848810207769e-3j,-1.229331042698992e-2+9.765299905884720e-3j,
-1.220256350215113e-2+9.81228045843871e-3j,-1.211162370550071e-2+9.858788215206612e-3j,
-1.202049249222731e-2+9.90482091890477e-3j,-1.192917134277724e-2+9.95037630779824e-3j,
-1.183766176305363e-2+9.995452115872724e-3j,-1.174596528461560e-2+1.004004607300985e-2j,
-1.165408346487775e-2+1.008415590516532e-2j,-1.156201788730968e-2+1.012777933455029e-2j,
-1.146977016163555e-2+1.017091407981583e-2j,-1.137734192403399e-2+1.021355785624052e-2j,
-1.128473483733767e-2+1.025570837592134e-2j,-1.119195059123324e-2+1.029736334796769e-2j,
-1.1098990902461e-2+1.033852047869873e-2j,-1.100585751501462e-2+1.037917747184398e-2j,
-1.091255220034093e-2+1.041933202874727e-2j,-1.081907675753928e-2+1.045898184857396e-2j,
-1.072543301356114e-2+1.049812462852166e-2j,-1.063162282340921e-2+1.05367580640342e-2j,
-1.053764807033655e-2+1.057487984901956e-2j,-1.04435106660453e-2+1.061248767607e-2j,
-1.034921255088533e-2+1.064957923668739e-2j,-1.025475569405238e-2+1.068615222151084e-2j,
-1.016014209378603e-2+1.072220432054834e-2j,-1.006537377756715e-2+1.075773322341197e-2j,
-9.97045280231498e-3+1.079273661955669e-2j,-9.875381254583890e-3+1.082721219852278e-2j,
-9.780161250759411e-3+1.086115765018206e-2j,-9.684794937253922e-3+1.089457066498768e-2j,
-9.589284490701702e-3+1.092744893422777e-2j,-9.493632118153353e-3+1.095979015028284e-2j,
-9.397840057269545e-3+1.099159200688698e-2j,-9.301910576514201e-3+1.102285219939286e-2j,
-9.20584597534678e-3+1.105356842504068e-2j,-9.109648584413875e-3+1.108373838323093e-2j,
-9.013320765739946e-3+1.111335977580117e-2j,-8.916864912917136e-3+1.114243030730667e-2j,
-8.820283451294331e-3+1.117094768530511e-2j,-8.723578838165048e-3+1.119890962064524e-2j,
-8.626753562954458e-3+1.122631382775964e-2j,-8.529810147405294e-3+1.12531580249615e-2j,
-8.432751145762557e-3+1.127943993474556e-2j,-8.335579144957295e-3+1.130515728409311e-2j,
-8.238296764788923e-3+1.133030780478121e-2j,-8.140906658106411e-3+1.135488923369606e-2j,
-8.043411510988137e-3+1.137889931315062e-2j,-7.945814042920286e-3+1.140233579120643e-2j,
-7.848117006973993e-3+1.142519642199973e-2j,-7.750323189980827e-3+1.144747896607188e-2j,
-7.652435412706858e-3+1.146918119070406e-2j,-7.554456530025047e-3+1.14903008702564e-2j,
-7.456389431086075e-3+1.151083578651139e-2j,-7.358237039487322e-3+1.153078372902181e-2j,
-7.26000231344024e-3+1.155014249546293e-2j,-7.16168824593580e-3+1.156890989198935e-2j,
-7.063297864908044e-3+1.158708373359616e-2j,-6.964834233395690e-3+1.160466184448468e-2j,
-6.866300449701689e-3+1.162164205843276e-2j,-6.767699647550844e-3+1.163802221916949e-2j,
-6.66903499624504e-3+1.165380018075469e-2j,-6.570309700816487e-3+1.166897380796279e-2j,
-6.471527002178477e-3+1.16835409766715e-2j,-6.372690177273987e-3+1.169749957425498e-2j,
-6.273802539221652e-3+1.171084749998181e-2j,-6.174867437459467e-3+1.172358266541752e-2j,
-6.075888257885752e-3+1.173570299483188e-2j,-5.97686842299754e-3+1.174720642561095e-2j,
-5.877811392026310e-3+1.175809090867379e-2j,-5.778720661070797e-3+1.176835440889401e-2j,
-5.679599763227129e-3+1.177799490552604e-2j,-5.580452268715886e-3+1.178701039263625e-2j,
-5.481281785006192e-3+1.179539887953882e-2j,-5.382091956936753e-3+1.180315839123653e-2j,
-5.282886466833601e-3+1.181028696886633e-2j,-5.18366903462477e-3+1.181678267014973e-2j,
-5.084443417951563e-3+1.182264356984821e-2j,-4.985213412276244e-3+1.182786776022339e-2j,
-4.885982850986550e-3+1.183245335150211e-2j,-4.786755605496267e-3+1.183639847234652e-2j,
-4.687535585342474e-3+1.1839701270329e-2j,-4.588326738278769e-3+1.184235991241205e-2j,
-4.48913305036478e-3+1.184437258543308e-2j,-4.389958546051732e-3+1.184573749659427e-2j,
-4.290807288263927e-3+1.184645287395726e-2j,-4.191683378476156e-3+1.184651696694288e-2j,
-4.092590956786969e-3+1.184592804683581e-2j,-3.993534201987515e-3+1.184468440729428e-2j,
-3.894517331626063e-3+1.184278436486468e-2j,-3.795544602068050e-3+1.184022625950123e-2j,
-3.696620308551413e-3+1.183700845509054e-2j,-3.59774878523747e-3+1.183312933998127e-2j,
-3.498934405256794e-3+1.182858732751868e-2j,-3.400181580750309e-3+1.182338085658424e-2j,
-3.301494762905388e-3+1.181750839214017e-2j,-3.202878441986863e-3+1.181096842577899e-2j,
-3.104337147362778e-3+1.180375947627802e-2j,-3.00587544752502e-3+1.17958800901589e-2j,
-2.907497950104366e-3+1.178732884225198e-2j,-2.809209301880086e-3+1.177810433626581e-2j,
-2.711014188784004e-3+1.176820520536138e-2j,-2.612917335898674e-3+1.175763011273145e-2j,
-2.514923507449920e-3+1.174637775218474e-2j,-2.417037506793296e-3+1.173444684873503e-2j,
-2.319264176394516e-3+1.172183615919514e-2j,-2.221608397803756e-3+1.170854447277577e-2j,
-2.124075091623575e-3+1.169457061168926e-2j,-2.026669217470603e-3+1.16799134317581e-2j,
-1.929395773930549e-3+1.166457182302834e-2j,-1.832259798506671e-3+1.164854471038766e-2j,
-1.735266367561474e-3+1.16318310541884e-2j,-1.63842059625147e-3+1.161442985087510e-2j,
-1.541727638455109e-3+1.159634013361696e-2j,-1.445192686693432e-3+1.157756097294484e-2j,
-1.348820972043569e-3+1.155809147739297e-2j,-1.252617764044902e-3+1.153793079414527e-2j,
-1.15658837059767e-3+1.151707810968624e-2j,-1.060738137853892e-3+1.14955326504564e-2j,
-9.650724501009582e-4+1.147329368351225e-2j,-8.695967296367770e-4+1.145036051719066e-2j,
-7.743164366373700e-4+1.142673250177772e-2j,-6.792370690161591e-4+1.140240903018195e-2j,
-5.843641622749964e-4+1.137738953861182e-2j,-4.897032893469277e-4+1.135167350725762e-2j,
-3.952600604303266e-4+1.132526046097746e-2j,-3.010401228144172e-4+1.129814996998754e-2j,
-2.070491606960378e-4+1.12703416505565e-2j,-1.132928949874421e-4+1.124183516570382e-2j,
-1.977708311505258e-5+1.121263022590225e-2j,7.349248119088145e-5+1.118272658978421e-2j,
1.665099681160997e-4+1.115212406485200e-2j,2.592695119915098e-4+1.112082250819188e-2j,
3.517652115319898e-4+1.108882182719184e-2j,4.43991130085029e-4+1.105612198026311e-2j,
5.359412958890466e-4+1.102272297756522e-2j,6.276097023419444e-4+1.098862488173457e-2j,
7.18990308279716e-4+1.095382780861649e-2j,8.100770382653996e-4+1.091833192800058e-2j,
9.008637828885243e-4+1.088213746435942e-2j,9.913443990750185e-4+1.084524469759038e-2j,
1.081512710408009e-3+1.08076539637606e-2j,1.171362507459446e-3+1.076936565585492e-2j,
1.260887548132733e-3+1.073038022452671e-2j,1.350081558016643e-3+1.069069817885156e-2j,
1.438938230750371e-3+1.065032008708365e-2j,1.527451228400235e-3+1.060924657741472e-2j,
1.615614181847908e-3+1.056747833873553e-2j,1.703420691190462e-3+1.05250161213997e-2j,
1.790864326152245e-3+1.048186073798989e-2j,1.877938626508973e-3+1.043801306408596e-2j,
1.964637102523824e-3+1.039347403903540e-2j,2.050953235396073e-3+1.03482446667255e-2j,
2.136880477722158e-3+1.03023260163573e-2j,2.222412253969370e-3+1.025571922322134e-2j,
2.307541960962495e-3+1.020842548947474e-2j,2.392262968383185e-3+1.016044608491982e-2j,
2.476568619282627e-3+1.011178234778387e-2j,2.560452230607392e-3+1.006243568550007e-2j,
2.643907093738683e-3+1.001240757548927e-2j,2.726926475045134e-3+9.961699565942767e-3j,
2.809503616449381e-3+9.910313276605437e-3j,2.89163173600834e-3+9.858250399559661e-3j,
2.973304028507614e-3+9.805512700009355e-3j,3.054513666069988e-3+9.752102017064249e-3j,
3.135253798778217e-3+9.698020264524176e-3j,3.215517555312318e-3+9.643269431663071e-3j,
3.295298043601304e-3+9.587851584012781e-3j,3.374588351489818e-3+9.531768864146171e-3j,
3.453381547419528e-3+9.475023492459584e-3j,3.531670681125588e-3+9.417617767954386e-3j,
3.609448784348324e-3+9.359554069017328e-3j,3.686708871560073e-3+9.300834854199727e-3j,
3.763443940707635e-3+9.241462662995017e-3j,3.839646973970225e-3+9.181440116614661e-3j,
3.9153109385332e-3+9.120769918762084e-3j,3.990428787377673e-3+9.05945485640446e-3j,
4.06499346008604e-3+8.997497800542292e-3j,4.13899788366378e-3+8.934901706976125e-3j,
4.21243497337746e-3+8.871669617070736e-3j,4.285297633609184e-3+8.807804658516095e-3j,
4.357578758727568e-3+8.743310046085134e-3j,4.429271233975457e-3+8.678189082387936e-3j,
4.50036793637433e-3+8.61244515862224e-3j,4.570861735645813e-3+8.546081755319859e-3j,
4.640745495150033e-3+8.479102443088844e-3j,4.710012072841395e-3+8.411510883351153e-3j,
4.778654322241533e-3+8.343310829075418e-3j,4.846665093429646e-3+8.274506125504839e-3j,
4.914037234050517e-3+8.20510071087953e-3j,4.980763590340075e-3+8.13509861715342e-3j,
5.046837008168798e-3+8.064503970705107e-3j,5.112250334102956e-3+7.993320993042626e-3j,
5.17699641648390e-3+7.921554001501688e-3j,5.241068106525394e-3+7.849207409937195e-3j,
5.304458259429116e-3+7.776285729407576e-3j,5.367159735518598e-3+7.702793568851815e-3j,
5.429165401391397e-3+7.628735635758730e-3j,5.490468131089898e-3+7.55411673682820e-3j,
5.551060807290542e-3+7.478941778624194e-3j,5.610936322511863e-3+7.403215768218874e-3j,
5.670087580341185e-3+7.326943813827941e-3j,5.728507496680174e-3+7.250131125436482e-3j,
5.786189001009346e-3+7.172783015415115e-3j,5.843125037671422e-3+7.094904899126238e-3j,
5.899308567173854e-3+7.016502295519715e-3j,5.95473256751040e-3+6.93758082771792e-3j,
6.009390035501913e-3+6.858146223589634e-3j,6.063273988156264e-3+6.778204316312341e-3j,
6.116377464047648e-3+6.697761044922910e-3j,6.168693524715139e-3+6.616822454855797e-3j,
6.220215256080647e-3+6.535394698468745e-3j,6.27093576988625e-3+6.45348403555538e-3j,
6.320848205151006e-3+6.371096833844552e-3j,6.369945729647146e-3+6.288239569485559e-3j,
6.418221541395816e-3+6.20491882751954e-3j,6.465668870182295e-3+6.121141302335952e-3j,
6.512280979090723e-3+6.036913798114040e-3j,6.558051166058317e-3+5.952243229248953e-3j,
6.602972765449162e-3+5.867136620761807e-3j,6.647039149647412e-3+5.78160110869358e-3j,
6.690243730670055e-3+5.69564394048215e-3j,6.732579961799127e-3+5.609272475322047e-3j,
6.774041339233368e-3+5.522494184506732e-3j,6.814621403759267e-3+5.435316651752644e-3j,
6.854313742441533e-3+5.347747573504667e-3j,6.893111990332810e-3+5.259794759222700e-3j,
6.931009832202731e-3+5.171466131648581e-3j,6.96800100428614e-3+5.08276972705312e-3j,
7.004079296050464e-3+4.993713695462756e-3j,7.039238551982153e-3+4.904306300865063e-3j,
7.073472673392062e-3+4.814555921393161e-3j,7.106775620239751e-3+4.724471049487990e-3j,
7.13914141297655e-3+4.634060292038279e-3j,7.170564134407294e-3+4.543332370497606e-3j,
7.201037931570638e-3+4.452296120978003e-3j,7.230557017637725e-3+4.360960494319807e-3j,
7.25911567382922e-3+4.269334556136933e-3j,7.286708251350466e-3+4.177427486837234e-3j,
7.31332917334457e-3+4.085248581617512e-3j,7.338972936863457e-3+3.992807250432326e-3j,
7.363634114856347e-3+3.900113017936556e-3j,7.387307358175941e-3+3.807175523400706e-3j,
7.40998739760170e-3+3.714004520598691e-3j,7.431669045880306e-3+3.620609877667523e-3j,
7.45234719978284e-3+3.527001576938285e-3j,7.472016842178788e-3+3.433189714737859e-3j,
7.490673044126180e-3+3.339184501161003e-3j,7.508310966978103e-3+3.24499625981196e-3j,
7.524925864504948e-3+3.150635427515269e-3j,7.540513085032316e-3+3.056112553995097e-3j,
7.555068073594249e-3+2.961438301522546e-3j,7.568586374101477e-3+2.866623444530474e-3j,
7.581063631524409e-3+2.771678869195073e-3j,7.592495594090503e-3+2.676615572983793e-3j,
7.60287811549574e-3+2.581444664168937e-3j,7.612207157129788e-3+2.486177361306478e-3j,
7.620478790314566e-3+2.390824992679293e-3j,7.627689198555784e-3+2.295398995704574e-3j,
7.633834679807121e-3+2.199910916304476e-3j,7.638911648746588e-3+2.104372408239689e-3j,
7.642916639064713e-3+2.008795232405223e-3j,7.64584630576410e-3+1.913191256087772e-3j,
7.64769742746995e-3+1.81757245218435e-3j,7.648466908750996e-3+1.721950898381214e-3j,
7.648151782450494e-3+1.626338776292821e-3j,7.646749212026780e-3+1.530748370560051e-3j,
7.644256493902791e-3+1.435192067907133e-3j,7.640671059824117e-3+1.339682356156897e-3j,
7.63599047922505e-3+1.244231823203386e-3j,7.630212461602092e-3+1.148853155941605e-3j,
7.623334858894247e-3+1.053559139153631e-3j,7.615355667869735e-3+9.583626543504946e-4j,
7.606273032518327e-3+8.632766785695208e-4j,7.59608524644879e-3+7.68314283126107e-4j,
7.58479075529080e-3+6.734886323197897e-4j,7.572388159100719e-3+5.788129820937548e-4j,
7.558876214770415e-3+4.843006786474106e-4j,7.544253838438706e-3+3.899651570012300e-4j,
7.528520107904505e-3+2.958199395136918e-4j,7.511674265041053e-3+2.018786343492749e-4j,
7.493715718210492e-3+1.081549338973489e-4j,7.474644044678046e-3+1.466261314124359e-5j,
7.454458993024998e-3-7.85844720230812e-5j,7.433160485559735e-3-1.715723865190802e-4j,
7.410748620726015e-3-2.64287117873201e-4j,7.387223675507645e-3-3.567145780503394e-4j,
7.362586107828717e-3-4.488406053417115e-4j,7.33683655894858e-3-5.406509663056392e-4j,
7.309975855850653e-3-6.321313577618795e-4j,7.282005013624081e-3-7.232674088397342e-4j,
7.252925237837552e-3-8.140446830806812e-4j,7.22273792690407e-3-9.044486805958744e-4j,
7.191444674435935e-3-9.944648402789733e-4j,7.159047271588723e-3-1.084078542074856e-3j,
7.125547709393642e-3-1.173275109304449e-3j,7.090948181076820e-3-1.262039811046383e-3j,
7.05525108436479e-3-1.350357864575691e-3j,7.018459023774981e-3-1.438214437860055e-3j,
6.980574812890162e-3-1.525594652114021e-3j,6.941601476615815e-3-1.612483584411361e-3j,
6.901542253419183e-3-1.698866270356333e-3j,6.86040059754898e-3-1.784727706813818e-3j,
6.818180181234537e-3-1.870052854698917e-3j,6.774884896863211e-3-1.954826641826312e-3j,
6.730518859134943e-3-2.039033965819476e-3j,6.685086407192621e-3-2.122659697080352e-3j,
6.638592106727004e-3-2.205688681819744e-3j,6.591040752055208e-3-2.288105745148206e-3j,
6.542437368171023e-3-2.369895694228520e-3j,6.492787212766202e-3-2.451043321489155e-3j,
6.442095778221201e-3-2.531533407899337e-3j,6.390368793563854e-3-2.611350726306117e-3j,
6.337612226395101e-3-2.690480044832911e-3j,6.28383228477981e-3-2.768906130340533e-3j,
6.229035419101763e-3-2.846613751950091e-3j,6.173228323881207e-3-2.923587684628188e-3j,
6.116417939553286e-3-2.99981271283478e-3j,6.058611454206523e-3-3.075273634232933e-3j,
5.999816305279018e-3-3.149955263461592e-3j,5.940040181211768e-3-3.223842435970251e-3j,
5.879291023056774e-3-3.296920011916506e-3j,5.817577026038962e-3-3.369172880125728e-3j,
5.75490664107022e-3-3.440585962112988e-3j,5.691288576213657e-3-3.511144216167498e-3j,
5.626731798097091e-3-3.580832641498709e-3j,5.5612455332735e-3-3.649636282444693e-3j,
5.494839269527332e-3-3.717540232742013e-3j,5.427522757124833e-3-3.784529639857043e-3j,
5.359306010006467e-3-3.850589709378831e-3j,5.29019930692034e-3-3.915705709472495e-3j,
5.220213192494295e-3-3.979862975393644e-3j,5.149358478245324e-3-4.043046914062825e-3j,
5.077646243524739e-3-4.10524300869985e-3j,5.005087836396654e-3-4.166436823517836e-3j,
4.931694874448987e-3-4.226614008475859e-3j,4.857479245534253e-3-4.285760304090507e-3j,
4.782453108439073e-3-4.343861546305119e-3j,4.706628893480392e-3-4.400903671416412e-3j,
4.630019303026173e-3-4.456872721058135e-3j,4.552637311939593e-3-4.511754847240455e-3j,
4.474496167943939e-3-4.565536317445126e-3j,4.395609391907126e-3-4.618203519775066e-3j,
4.315990778043713e-3-4.669742968157874e-3j,4.235654394032165e-3-4.720141307602563e-3j,
4.154614581046304e-3-4.769385319508217e-3j,4.072885953698158e-3-4.817461927024191e-3j,
3.990483399891007e-3-4.864358200460411e-3j,3.907422080580523e-3-4.910061362746999e-3j,
3.823717429441658e-3-4.954558794942291e-3j,3.739385152440277e-3-4.997838041787718e-3j,
3.654441227306548e-3-5.039886817308933e-3j,3.568901902909253e-3-5.080693010461416e-3j,
3.48278369852801e-3-5.120244690819861e-3j,3.396103403022608e-3-5.158530114309458e-3j,
3.30887807389624e-3-5.195537728978327e-3j,3.221125036252288e-3-5.231256180808995e-3j,
3.132861881641013e-3-5.265674319568130e-3j,3.044106466795771e-3-5.298781204692447e-3j,
2.954876912255615e-3-5.330566111209611e-3j,2.86519160087338e-3-5.361018535692165e-3j,
2.775069176206465e-3-5.390128202243102e-3j,2.684528540789155e-3-5.417885068511006e-3j,
2.593588854283957e-3-5.44427933173328e-3j,2.502269531510759e-3-5.469301434805242e-3j,
2.410590240351066e-3-5.492942072373505e-3j,2.318570899526380e-3-5.515192196951347e-3j,
2.226231676248192e-3-5.536043025054202e-3j,2.133592983738212e-3-5.555486043353056e-3j,
2.040675478616500e-3-5.573513014843684e-3j,1.94750005815648e-3-5.590115985029301e-3j,
1.854087857404116e-3-5.605287288114537e-3j,1.760460246160484e-3-5.619019553208150e-3j,
1.666638825825028e-3-5.631305710532243e-3j,1.572645426098821e-3-5.642138997635302e-3j,
1.478502101545059e-3-5.651512965606636e-3j,1.384231128006117e-3-5.659421485289477e-3j,
1.289854998874885e-3-5.665858753490106e-3j,1.195396421219268e-3-5.670819299180201e-3j,
1.100878311757617e-3-5.674297989689601e-3j,1.006323792684581e-3-5.676290036886554e-3j,
9.117561873447099e-4-5.676791003342504e-3j,8.17199015753580e-4-5.675796808478349e-3j,
7.226759899637990e-4-5.673303734689106e-3j,6.28211009275763e-4-5.669308433443752e-3j,
5.338281552906511e-4-5.663807931357053e-3j,4.395516868055612e-4-5.656799636230024e-3j,
3.454060345482464e-4-5.648281343055634e-3j,2.514157957519174e-4-5.638251239986385e-3j,
1.576057285671757e-4-5.6267079142600e-3j,6.400074631161355e-5-5.613650358080482e-3j,
-2.937408844515013e-5-5.599077974448674e-3j,-1.224935699608717e-4-5.582990582942175e-3j,
-2.153323555665442e-4-5.56538842543722e-3j,-3.078649720783111e-4-5.5462721717709e-3j,
-4.000658223774114e-4-5.525642925338931e-3j,-4.919091921576458e-4-5.50350222862521e-3j,
-5.833692568420924e-4-5.479852068659049e-3j,-6.74420088668699e-4-5.45469488239582e-3j,
-7.65035663945775e-4-5.428033562017176e-3j,-8.5518987047734e-4-5.399871460146108e-3j,
-9.448565151593300e-4-5.370212394972899e-3j,-1.034009331745689e-3-5.339060655287436e-3j,
-1.122621988785954e-3-5.306421005413333e-3j,-1.210668097732849e-3-5.272298690039621e-3j,
-1.298121221221219e-3-5.236699438945072e-3j,-1.384954881516922e-3-5.19962947161091e-3j,
-1.471142569136533e-3-5.161095501716836e-3j,-1.556657751636425e-3-5.121104741516005e-3j,
-1.641473882572010e-3-5.079664906083672e-3j,-1.725564410625028e-3-5.036784217435303e-3j,
-1.808902788899922e-3-4.992471408508463e-3j,-1.891462484386997e-3-4.946735727004246e-3j,
-1.973216987592666e-3-4.899586939082618e-3j,-2.054139822334724e-3-4.851035332907175e-3j,
-2.134204555702538e-3-4.801091722033632e-3j,-2.213384808179883e-3-4.749767448637493e-3j,
-2.291654263930005e-3-4.69707438657508e-3j,-2.368986681240458e-3-4.643024944273357e-3j,
-2.445355903127120e-3-4.587632067442481e-3j,-2.520735868094291e-3-4.530909241606773e-3j,
-2.595100621050466e-3-4.472870494447644e-3j,-2.66842432437632e-3-4.41353039795413e-3j,
-2.740681269143844e-3-4.352904070374857e-3j,-2.811845886483356e-3-4.291007177966518e-3j,
-2.881892759096734e-3-4.227855936533108e-3j,-2.950796632913408e-3-4.163467112750748e-3j,
-3.018532428887156e-3-4.097858025272136e-3j,-3.085075254929888e-3-4.031046545605808e-3j,
-3.150400417980148e-3-3.963051098763945e-3j,-3.21448343620234e-3-3.893890663673886e-3j,
-3.277300051313737e-3-3.823584773347365e-3j,-3.33882624103532e-3-3.752153514802302e-3j,
-3.399038231663112e-3-3.679617528731170e-3j,-3.457912510755412e-3-3.605998008911163e-3j,
-3.515425839932587e-3-3.531316701349769e-3j,-3.571555267784337e-3-3.45559590316124e-3j,
-3.626278142880718e-3-3.378858461167546e-3j,-3.679572126881542e-3-3.30112777021935e-3j,
-3.731415207739979e-3-3.222427771230717e-3j,-3.781785712994817e-3-3.142782948922803e-3j,
-3.830662323146492e-3-3.062218329271011e-3j,-3.878024085111268e-3-2.980759476650368e-3j,
-3.92385042574827e-3-2.89843249067362e-3j,-3.968121165453188e-3-2.815264002717506e-3j,
-4.010816531813049e-3-2.731281172131255e-3j,-4.0519171733155e-3-2.646511682123195e-3j,
-4.091404173107195e-3-2.560983735319516e-3j,-4.129259062792302e-3-2.47472604899128e-3j,
-4.165463836268195e-3-2.387767849943873e-3j,-4.20000096358752e-3-2.300138869065194e-3j,
-4.232853404842023e-3-2.211869335526734e-3j,-4.264004624059325e-3-2.122989970634566e-3j,
-4.293438603106126e-3-2.033531981324068e-3j,-4.321139855589142e-3-1.94352705329565e-3j,
-4.347093440746463e-3-1.853007343786005e-3j,-4.371284977320655e-3-1.762005473971966e-3j,
-4.393700657405585e-3-1.670554521001911e-3j,-4.414327260258063e-3-1.578688009652017e-3j,
-4.43315216606572e-3-1.486439903602665e-3j,-4.450163369661985e-3-1.393844596332546e-3j,
-4.4653494941789e-3-1.300936901626112e-3j,-4.478699804628563e-3-1.207752043692122e-3j,
-4.490204221403328e-3-1.114325646889662e-3j,-4.49985333368507e-3-1.020693725059304e-3j,
-4.507638412753522e-3-9.268926704561964e-4j,-4.513551425183338e-3-8.329592422835794e-4j,
-4.517585045919613e-3-7.389305548234450e-4j,-4.519732671221108e-3-6.44844065163502e-4j,
-4.519988431460497e-3-5.507375605175243e-4j,-4.518347203770563e-3-4.566491451387499e-4j,
-4.514804624525202e-3-3.626172268238394e-4j,-4.509357101643869e-3-2.68680503007584e-4j,
-4.502001826707899e-3-1.748779464462053e-4j,-4.492736786877044e-3-8.124879049042347e-5j,
-4.481560776594244e-3+1.216748605381162e-5j,-4.468473409066681e-3+1.053311744752e-4j,
-4.453475127510770e-3+1.982023521186077e-4j,-4.436567216148840e-3+2.907408987564179e-4j,
-4.417751810944817e-3+3.829065133698953e-4j,-4.397031910066392e-3+4.746587313381654e-4j,
-4.374411384060633e-3+5.659569420344245e-4j,-4.349894985730342e-3+6.567604068261811e-4j,
-4.323488359697709e-3+7.47028277478732e-4j,-4.295198051642482e-3+8.367196149575175e-4j,
-4.265031517200822e-3+9.257934086282288e-4j,-4.232997130511829e-3+1.014208595849761e-3j,
-4.199104192397821e-3+1.101924081957497e-3j,-4.163362938165064e-3+1.188898760631753e-3j,
-4.125784545010852e-3+1.275091534647964e-3j,-4.086381139023476e-3+1.360461337002701e-3j,
-4.045165801760870e-3+1.4449671524111e-3j,-4.002152576394335e-3+1.528568039169164e-3j,
-3.957356473402972e-3+1.61122315137556e-3j,-3.910793475805132e-3+1.692891761505692e-3j,
-3.86248054391263e-3+1.773533283331377e-3j,-3.812435619593747e-3+1.853107295178433e-3j,
-3.760677630030734e-3+1.931573563514639e-3j,-3.707226490958162e-3+2.008892066858955e-3j,
-3.652103109367472e-3+2.085023020004025e-3j,-3.595329385664346e-3+2.15992689854168e-3j,
-3.536928215264277e-3+2.233564463682496e-3j,-3.476923489613018e-3+2.30589678735824e-3j,
-3.415340096617462e-3+2.376885277597216e-3j,-3.352203920473699e-3+2.446491704160336e-3j,
-3.287541840878212e-3+2.514678224426837e-3j,-3.221381731608950e-3+2.58140740951664e-3j,
-3.153752458462407e-3+2.64664227063717e-3j,-3.084683876534088e-3+2.710346285640392e-3j,
-3.014206826828448e-3+2.772483425777040e-3j,-2.942353132186197e-3+2.833018182632794e-3j,
-2.869155592515397e-3+2.891915595232037e-3j,-2.794647979314613e-3+2.94914127729309e-3j,
-2.718865029475017e-3+3.004661444619456e-3j,-2.641842438350292e-3+3.058442942609762e-3j,
-2.563616852081417e-3+3.110453273870048e-3j,-2.484225859166263e-3+3.16066062590971e-3j,
-2.403707981261260e-3+3.209033898903876e-3j,-2.322102663205648e-3+3.255542733502477e-3j,
-2.239450262256643e-3+3.300157538667402e-3j,-2.155792036526440e-3+3.342849519517173e-3j,
-2.071170132610149e-3+3.383590705159325e-3j,-1.985627572396515e-3+3.422353976488851e-3j,
-1.899208239051244e-3+3.4591130939317e-3j,-1.8119568621657e-3+3.493842725111347e-3j,
-1.723919002061798e-3+3.526518472414273e-3j,-1.63514103324648e-3+3.55711690043428e-3j,
-1.545670127008363e-3+3.58561556326872e-3j,-1.455554233150122e-3+3.611993031644427e-3j,
-1.364842060850702e-3+3.636228919848118e-3j,-1.273583058652403e-3+3.658303912435881e-3j,
-1.181827393567435e-3+3.678199790696396e-3j,-1.089625929300806e-3+3.695899458841374e-3j,
-9.970302035851357e-4+3.711386969896845e-3j,-9.040924046256694e-4+3.724647551267929e-3j,
-8.108653466525172e-4+3.735667629949696e-3j,-7.174024445798e-4+3.744434857355959e-3j,
-6.237576877699554e-4+3.750938133737683e-3j,-5.299856129050805e-4+3.755167632161991e-3j,
-4.361412759644710e-4+3.757114822022694e-3j,-3.422802233118768e-4+3.756772492052554e-3j,
-2.484584618939273e-4+3.754134772807371e-3j,-1.547324285543828e-4+3.749197158591520e-3j,
-6.115895846758130e-5+3.741956528794269e-3j,3.220474730233992e-5+3.732411168605910e-3j,
1.253011551112976e-4+3.72056078908244e-3j,2.180724329057036e-4+3.706406546527306e-3j,
3.104604852464960e-4+3.689951061158371e-3j,4.02406989175859e-4+3.671198435028323e-3j,
4.938534309180555e-4+3.650154269166120e-3j,5.847411434014414e-4+3.626825679907422e-3j,
6.750113445903145e-4+3.601221314381358e-3j,7.646051766121265e-4+3.573351365121283e-3j,
8.534637456662622e-4+3.543227583766709e-3j,9.415281626975904e-4+3.510863293824017e-3j,
1.028739584818868e-3+3.476273402452981e-3j,1.11503925746267e-3+3.439474411246879e-3j,
1.200368557244731e-3+3.400484425973183e-3j,1.284669035516947e-3+3.35932316524277e-3j,
1.367882462589211e-3+3.31601196807508e-3j,1.449950872596305e-3+3.270573800327247e-3j,
1.530816608986286e-3+3.223033259955018e-3j,1.61042237060395e-3+3.173416581074208e-3j,
1.688711258343469e-3+3.121751636790798e-3j,1.765626822341101e-3+3.068067940769219e-3j,
1.841113109679482e-3+3.012396647507591e-3j,1.91511471257179e-3+2.954770551290314e-3j,
2.040120932534828e-3+2.84999264807408e-3j,2.160187051211505e-3+2.739599561120268e-3j,
2.275036128948303e-3+2.623799042699109e-3j,2.384398694571217e-3+2.502813565338659e-3j,
2.488013549424271e-3+2.376880148588609e-3j,2.585628576290636e-3+2.246250142937224e-3j,
2.677001551099946e-3+2.111188969749752e-3j,2.761900955214843e-3+1.971975816180422e-3j,
2.840106785980744e-3+1.828903284102285e-3j,2.911411363116354e-3+1.682276992199176e-3j,
2.975620128417712e-3+1.532415130473802e-3j,3.032552436147924e-3+1.379647966543180e-3j,
3.08204233138709e-3+1.224317303219693e-3j,3.123939313524046e-3+1.066775887011649e-3j,
3.158109081983648e-3+9.07386767321293e-4j,3.184434261200875e-3+7.465226062723607e-4j,
3.202815101777238e-3+5.845649392608338e-4j,3.213170154686104e-3+4.219033864939964e-4j,
3.215436915332458e-3+2.589348159625027e-4j,3.20957243422017e-3+9.606245847789786e-5j,
3.195553890936684e-3-6.630502439504098e-5j,3.173379128131689e-3-2.277545184783428e-4j,
3.143067142144524e-3-3.878694799483175e-4j,3.104658526923879e-3-5.462310016666644e-4j,
3.058215867885476e-3-7.024189211865014e-4j,3.003824082368322e-3-8.5601296851200e-4j,
2.94159070337892e-3-1.006593951454294e-3j,2.871646103356698e-3-1.153744976183304e-3j,
2.794143654752741e-3-1.29705270032998e-3j,2.709259824289701e-3-1.436108615743354e-3j,
2.617194197862610e-3-1.570510357755202e-3j,2.518169433150389e-3-1.69986303755207e-3j,
2.412431137135883e-3-1.823780594000410e-3j,2.300247665879106e-3-1.941887161017721e-3j,
2.181909844054502e-3-2.053818446331518e-3j,2.057730601949304e-3-2.159223117219725e-3j,
1.928044527826157e-3-2.257764188582767e-3j,1.793207333780142e-3-2.349120408459852e-3j,
1.653595233468272e-3-2.432987635871527e-3j,1.509604230357896e-3-2.509080205649421e-3j,
1.361649315431161e-3-2.57713227470266e-3j,1.21016357359306e-3-2.636899143972126e-3j,
1.055597198363278e-3-2.688158550138490e-3j,8.984164147844969e-4-2.730711920980957e-3j,
7.391023108537315e-4-2.764385588131656e-3j,5.781495781759902e-4-2.789031950838466e-3j,
4.16065162952459e-4-2.804530584237777e-3j,2.533668288464394e-4-2.810789285550735e-3j,
9.058163371868864e-5-2.807745051553656e-3j,-7.175567731055054e-5-2.79536498063738e-3j,
-2.331043595356998e-4-2.773647092763515e-3j,-3.929194336446671e-4-2.74262106064925e-3j,
-5.506535240643735e-4-2.702348845569546e-3j,-7.057587662189708e-4-2.652925231256131e-3j,
-8.576887777207735e-4-2.594478249500919e-3j,-1.005900687983658e-3-2.527169491236672e-3j,
-1.149857220213074e-3-2.451194297073165e-3j,-1.28902881919056e-3-2.366781821513488e-3j,
-1.422895817736298e-3-2.274194965363790e-3j,-1.550950634202088e-3-2.173730171182739e-3j,
-1.672699992825124e-3-2.065717076993957e-3j,-1.787667158260520e-3-1.950518023907979e-3j,
-1.895394175113118e-3-1.828527413769634e-3j,-1.995444102809801e-3-1.700170913462685e-3j,
-2.087403235695441e-3-1.565904503067142e-3j,-2.170883297804179e-3-1.426213365674361e-3j,
-2.24552360135557e-3-1.281610617321902e-3j,-2.310993157657268e-3-1.132635876212906e-3j,
-2.366992728766774e-3-9.798536711319062e-4j,-2.413256807977862e-3-8.238516897608942e-4j,
-2.449555516958315e-3-6.652388684321475e-4j,-2.475696407177959e-3-5.04643325727633e-4j,
-2.491526153134603e-3-3.427101432455651e-4j,-2.496932124815095e-3-1.800989977992521e-4j,
-2.491843826822965e-3-1.748165029044681e-5j,-2.476234191668206e-3+1.444607024975451e-4j,
-2.45012071485208e-3+3.050402059139634e-4j,-2.413566419594972e-3+4.635652469438951e-4j,
-2.366680639351512e-3+6.193434658227172e-4j,-2.309619606638946e-3+7.716848693173275e-4j,
-2.242586837173645e-3+9.199050341602934e-4j,-2.165833298871715e-3+1.063328388058869e-3j,
-2.079657355923314e-3+1.201291554648399e-3j,-1.984404478900413e-3+1.3331467477252e-3j,
-1.880466712704251e-3+1.458265199087682e-3j,-1.768281895104039e-3+1.576040603342049e-3j,
-1.648332619662112e-3+1.685892562100426e-3j,-1.521144937982588e-3+1.787270009123301e-3j,
-1.387286797460507e-3+1.879654597143196e-3j,-1.247366212043213e-3+1.96256402636325e-3j,
-1.102029164944642e-3+2.035555293961028e-3j,-9.519572437715257e-4+2.098227843355291e-3j,
-7.97865010124588e-4+2.150226591520893e-3j,-6.404971074230995e-4+2.19124481227417e-3j,
-4.806251124599779e-4+2.221026853208532e-3j,-3.190441380215749e-4+2.239370663846331e-3j,
-1.565691957923706e-4+2.246130112598228e-3j,5.968669299501637e-6+2.24121707029432e-3j,
1.677264601634137e-4+2.224603238380505e-3j,3.27853508917521e-4+2.196321700367387e-3j,
4.854959413923081e-4+2.156468175784647e-3j,6.398013055847871e-4+2.105201956738051e-3j,
7.899233428694717e-4+2.042746508194786e-3j,9.35026878786016e-4+1.969389714340837e-3j,
1.074292808281556e-3+1.885483754764631e-3j,1.206923148402825e-3+1.791444595827589e-3j,
1.332146129629253e-3+1.687751084384873e-3j,1.449221295331108e-3+1.57494363301853e-3j,
1.557444577245420e-3+1.453622488138731e-3j,1.656153313407764e-3+1.324445574692588e-3j,
1.744731173679198e-3+1.188125913789192e-3j,1.822612956885464e-3+1.045428612296885e-3j,
1.889289222661075e-3+8.97167426383775e-4j,1.944310720383333e-3+7.442009040457452e-4j,
1.987292577112185e-3+5.874281148818181e-4j,2.017918206239768e-3+4.277839787202644e-4j,
2.035942898617738e-3+2.662342081522542e-4j,2.041197058289453e-3+1.037698835712892e-4j,
2.03358904562393e-3-5.859831707425190e-5j,2.01310759164544e-3-2.198462079589472e-4j,
1.979823748689454e-3-3.789424749678472e-4j,1.933892344205723e-3-5.348553120241077e-4j,
1.875552906579881e-3-6.865592773856864e-4j,1.805130034265937e-3-8.330423296172538e-4j,
1.723033182315304e-3-9.733129995375787e-4j,1.629755843556591e-3-1.106407651187378e-3j,
1.525874105221250e-3-1.23139778179865e-3j,1.412044565718224e-3-1.34739730791191e-3j,
1.289001600527087e-3-1.453569782222273e-3j,1.157553970789044e-3-1.549135483481966e-3j,
1.018580773112848e-3-1.63337831988353e-3j,8.73026734354752e-4-1.705652484837518e-3j,
7.218968606520118e-4-1.765388802980621e-3j,5.662504557576450e-4-1.812100703642736e-3j,
4.071945297028425e-4-1.84538975890355e-3j,2.458766249632116e-4-1.864950723814737e-3j,
8.34770935799287e-5-1.870576017386170e-3j,-7.8799134963441e-5-1.86215958456304e-3j,
-2.397312489370588e-4-1.839700081680984e-3j,-3.98091660131017e-4-1.803303330799925e-3j,
-5.526554614586710e-4-1.753183991900434e-3j,-7.022101716021576e-4-1.68966640619031e-3j,
-8.455656960830237e-4-1.613184568718088e-3j,-9.815644286288382e-4-1.524281194123157e-3j,
-1.109091411583524e-3-1.423605845659216e-3j,-1.227084469449299e-3-1.311912104592783e-3j,
-1.334544225530956e-3-1.190053764676262e-3j,-1.430543908157341e-3-1.058980044591672e-3j,
-1.514238850156686e-3-9.197298200151097e-4j,-1.584875583239817e-3-7.73424886210294e-4j,
-1.641800427770245e-3-6.212622717620863e-4j,-1.684467478143373e-3-4.645056341368976e-4j,
-1.712445884723958e-3-3.044757781253377e-4j,-1.725426335059963e-3-1.425403487959562e-4j,
-1.723226639955427e-3+1.989723873387398e-5j,-1.70579633398775e-3+1.814095597274383e-4j,
-1.673220205231234e-3+3.405575469179008e-4j,-1.625720675321493e-3+4.959033703987876e-4j,
-1.563658958577702e-3+6.460237265089717e-4j,-1.487534937688147e-3+7.89523422463098e-4j,
-1.397985703445924e-3+9.250491346807077e-4j,-1.295782717163757e-3+1.051303210757151e-3j,
-1.181827566653168e-3+1.167057377942469e-3j,-1.057146299961051e-3+1.271166214992927e-3j,
-9.228823353333268e-4+1.362580239479115e-3j,-7.802879610231837e-4+1.440358459210972e-3j,
-6.307144544621985e-4+1.503680234508047e-3j,-4.756008668308755e-4+1.551856297727173e-3j,
-3.164615360481313e-4+1.584338777873418e-3j,-1.548724084739546e-4+1.600730081366404e-3j,
7.54373300056427e-6+1.600790485197986e-3j,1.691330195210236e-4+1.584444305868482e-3j,
3.282270935782678e-4+1.551784516675442e-3j,4.831604047260086e-4+1.503075697177638e-3j,
6.32288039753327e-4+1.438755211969178e-3j,7.740039087748256e-4+1.359432531248931e-3j,
9.067590954152185e-4+1.265886623005018e-3j,1.029080167534291e-3+1.15906136586783e-3j,
1.139587235018184e-3+1.040058952702504e-3j,1.237011533309561e-3+9.10131277662079e-4j,
1.320212305804153e-3+7.706693235236694e-4j,1.38819275523745e-3+6.231905914644609e-4j,
1.44011483393779e-3+4.693246417501231e-4j,1.475312645522002e-3+3.107968408235268e-4j,
1.493304236426317e-3+1.494104376779047e-4j,1.493801564730744e-3-1.297288016794717e-5j,
1.476718446152029e-3-1.744537736767657e-4j,1.442176292906510e-3-3.331171785038872e-4j,
1.390507480394817e-3-4.870551414191783e-4j,1.322256199301951e-3-6.343903143170038e-4j,
1.238176676651732e-3-7.732998315876559e-4j,1.139228678463447e-3-9.020392774923523e-4j,
1.026570238728727e-3-1.018966433974486e-3j,9.015475942009338e-4-1.122564486482678e-3j,
7.656823416441587e-4-1.211464356300896e-3j,6.206558733430846e-4-1.284465822968327e-3j,
4.682911873867936e-4-1.340557099988080e-3j,3.105322110042238e-4-1.378932531489594e-3j,
1.494208174947086e-4-1.399008087089193e-3j,-1.292824054897182e-5-1.400434347097667e-3j,
-1.743542176360506e-4-1.383106690590468e-3j,-3.326787773659161e-4-1.34717242474901e-3j,
-4.857355682253971e-4-1.293034625279712e-3j,-6.314005965747356e-4-1.221352494507725e-3j,
-7.676229890399755e-4-1.133038085717118e-3j,-8.924557097952966e-4-1.029249289154855e-3j,
-1.004085776646893e-3-9.113790264189782e-4j,-1.100863504130332e-3-7.810406551851610e-4j,
-1.181330292667253e-3-6.400496447611454e-4j,-1.244244480799604e-3-4.90401644058196e-4j,
-1.288604783158886e-3-3.34247126394047e-4j,-1.313670850569941e-3-1.738628591606118e-4j,
-1.318980510864628e-3-1.16205097797739e-5j,-1.304363279795665e-3+1.500472385621829e-4j,
-1.269949770966001e-3+3.086826283260357e-4j,-1.216176681842929e-3+4.618403372032164e-4j,
-1.143787089467197e-3+6.071260159170109e-4j,-1.053825853981319e-3+7.42235269465123e-4j,
-9.4763e-4+8.649924595857545e-4j,-8.268140243189998e-4+9.733886773520916e-4j,
-6.932501627069735e-4+1.065618215603359e-3j,-5.490437369857233e-4+1.140112862425091e-3j,
-3.965037957038759e-4+1.195573339998436e-3j,-2.381093550812807e-4+1.230997228594944e-3j,
-7.64716406597215e-5+1.245702743871093e-3j,8.570717793924385e-5+1.239347777279114e-3j,
2.456781782783711e-4+1.211943664491432e-3j,4.006921385193452e-4+1.163863215114654e-3j,
5.480475135618508e-4+1.095842618251463e-3j,6.851391283612725e-4+1.008976931972017e-3j,
8.095067281478852e-4+9.047089694966215e-4j,9.188824838017769e-4+7.848115095797083e-4j,
1.011236524184142e-3+6.513628816259787e-4j,1.084819557363162e-3+5.067161055705535e-4j,
1.138201650757828e-3+3.534619003397048e-4j,1.170306267341043e-3+1.943860103387817e-4j,
1.180438701960206e-3+3.242143422271173e-5j,1.168308128954868e-3-1.294037286718002e-4j,
1.134042559576248e-3-2.880219744179007e-4j,1.078196114805475e-3-4.403846786532705e-4j,
1.001748145120288e-3-5.835219126058833e-4j,9.06093872180750e-4-7.146026490713794e-4j,
7.930263864011521e-4-8.309941496757353e-4j,6.647100065573592e-4-9.303192797730876e-4j,
5.236451900691482e-4-1.010510476619716e-3j,3.726253720553582e-4-1.069859102186381e-3j,
2.14686303924635e-4-1.107058945837855e-3j,5.304865399969725e-5-1.121242705321683e-3j,
-1.089451809583214e-4-1.112010367673507e-3j,-2.678989281197349e-4-1.079448534713615e-3j,
-4.204336681273458e-4-1.024139890011891e-3j,-5.63261013202752e-4-9.47162184010973e-4j,
-6.932566876862364e-4-8.50076319106437e-4j,-8.075328762062575e-4-7.349033437756073e-4j,
-9.035076490022015e-4-6.040904104193615e-4j,-9.789697549062855e-4-4.604660107675544e-4j,
-1.032137093153107e-3-3.071850701257054e-4j,-1.061707237797008e-3-1.476647513991184e-4j,
-1.066898494455762e-3+1.44879148160017e-5j,-1.047480118743914e-3+1.755552036831944e-4j,
-1.003790518388915e-3+3.317930670805586e-4j,-9.367424947403019e-4+4.795188861235176e-4j,
-8.478148510588145e-4+6.152006123634222e-4j,-7.390300002277776e-4+7.355451676449034e-4j,
-6.129175377384072e-4+8.375838816838312e-4j,-4.724641001407989e-4+9.18752707340510e-4j,
-3.210501966859200e-4+9.769649709783902e-4j,-1.623750736828809e-4+1.010674492707906e-3j,
-3.710374070295448e-7+1.018927050827522e-3j,1.608909881525135e-4+1.001398366935980e-3j,
3.173025685760674e-4+9.584170518323434e-4j,4.648231448091583e-4+8.909712744376081e-4j,
5.99587072660493e-4+8.006982916516882e-4j,7.180095110869491e-4+6.898563994549605e-4j,
8.168882416380494e-4+5.612793259298300e-4j,8.934984640763042e-4+4.18313574659824e-4j,
9.45677657550633e-4+2.647397299647530e-4j,9.718977272178864e-4+1.046792400265295e-4j,
9.713218750782916e-4-5.751131459830224e-5j,9.438439407105979e-4-2.173559968169258e-4j,
8.901083495430412e-4-3.703824447194237e-4j,8.115092773956726e-4-5.122487128187096e-4j,
7.101681814718586e-4-6.388704940290559e-4j,5.888894480488804e-4-7.465450006224907e-4j,
4.51094551325253e-4-8.320676911314585e-4j,3.007357891678421e-4-8.928380506006703e-4j,
1.421913405879267e-4-9.269507709234172e-4j,-1.985594440793131e-5-9.332689401462097e-4j,
-1.805529817042318e-4-9.114762347952710e-4j,-3.35020504051173e-4-8.621056136372574e-4j,
-4.785026229854216e-4-7.865426267313733e-4j,-6.065174111935584e-4-6.870021676862457e-4j,
-7.150037507083882e-4-5.66478292899356e-4j,-8.004595689873477e-4-4.286675882969464e-4j,
-8.600666164079306e-4-2.778674570170717e-4j,-8.917971348360170e-4-1.188516026708453e-4j,
-8.944981324975218e-4+4.327413814335992e-5j,-8.679495146386924e-4+2.032316355800042e-4j,
-8.128930155462882e-4+3.557412621349509e-4j,-7.310297222130413e-4+4.956983088357381e-4j,
-6.249849536349201e-4+6.183492174357654e-4j,-4.98240336497913e-4+7.194615315241282e-4j,
-3.550340660721474e-4+7.954813768752102e-4j,-2.002315235180442e-4+8.436724061174171e-4j,
-3.916959633003498e-5+8.62230495583535e-4j,1.225208269216749e-4+8.503690659307546e-4j,
2.791086888300134e-4+8.08370707122126e-4j,4.249665386831819e-4+7.376018078659360e-4j,
5.547771690556269e-4+6.404880954886202e-4j,6.637355591225984e-4+5.204503511305070e-4j,
7.477383589908118e-4+3.818010350591602e-4j,8.03553225322590e-4+2.296040879829099e-4j,
8.289606990953682e-4+6.950171027343013e-5j,8.228620077338812e-4-9.248659895560335e-5j,
7.853471701346006e-4-2.501861004158243e-4j,7.177190652875805e-4-3.97502150942471e-4j,
6.224706609073857e-4-5.286600644286552e-4j,5.032143421183208e-4-6.384401111084877e-4j,
3.645641737723272e-4-7.223979832028463e-4j,2.119739043609584e-4-7.770611532130261e-4j,
5.153549667023218e-5-8.000920562615430e-4j,-1.102551340710604e-4-7.904099468697702e-4j,
-2.667567673473405e-4-7.482646029150562e-4j,-4.11456032393771e-4-6.752567460543562e-4j,
-5.382440623270957e-4-5.743020704744534e-4j,-6.416849200740249e-4-4.495380537708523e-4j,
-7.172638243459704e-4-3.061751813331511e-4j,-7.616034779288515e-4-1.502967503685522e-4j,
-7.726376171069808e-4+1.138607825012491e-5j,-7.497322608682231e-4+1.71814959904163e-4j,
-6.937470169604708e-4+3.238896745887567e-4j,-6.070311476856322e-4+4.607852630264871e-4j,
-4.933518339233259e-4+5.762669852056752e-4j,-3.57755098692578e-4+6.649884760701805e-4j,
-2.063630368591525e-4+7.227585087749329e-4j,-4.611420271439689e-5+7.46762511721207e-4j,
1.155429229513773e-4+7.357264349184435e-4j,2.709906906843796e-4+6.900127030108275e-4j,
4.128022501230251e-4+6.116407689591771e-4j,5.341039961570646e-4+5.042280994731531e-4j,
6.289227775967940e-4+3.728511512214342e-4j,6.925000020486043e-4+2.238298744104621e-4j,
7.215555207835226e-4+6.444332042121131e-5j,7.144858525102884e-4-9.741217251420653e-5j,
6.714838825982374e-4-2.53607201324427e-4j,5.945705818572844e-4-3.961879424903811e-4j,
4.875334033220008e-4-5.177890302385756e-4j,3.557706651501465e-4-6.120292170952216e-4j,
2.060461981774723e-4-6.738681777285274e-4j,4.616357839091033e-5-6.999037906909427e-4j,
-1.154258958380086e-4-6.88591395784231e-4j,-2.700629683889896e-4-6.403698406438576e-4j,
-4.09345830064795e-4-5.576834936615052e-4j,-5.255964955342871e-4-4.448946379297943e-4j,
-6.123021603093832e-4-3.080865344480435e-4j,-6.645056265138578e-4-1.547636581476365e-4j,
-6.791204670559504e-4+6.538170508082074e-6j,-6.551496914155853e-4+1.667131776931266e-4j,
-5.937912058806976e-4+3.1659484764827e-4j,-4.984191570698228e-4+4.474852172881402e-4j,
-3.744370495167410e-4+5.516738989269221e-4j,-2.290059928018598e-4+6.229155287494945e-4j,
-7.065914942526203e-5+6.568352390939975e-4j,9.117903912173879e-5+6.512345753167006e-4j,
2.467434579064474e-4+6.06274982070521e-4j,3.86517725033009e-4+5.245224051976309e-4j,
5.018273417108769e-4+4.108444065540489e-4j,5.853994881830013e-4+2.721600666585645e-4j,
6.31852585920743e-4+1.170523513562766e-4j,6.380813681977615e-4-4.47380338463357e-5j,
6.035082230640991e-4-2.029096047109055e-4j,5.301788300097067e-4-3.472528026763105e-4j,
4.226892747228613e-4-4.683178815861191e-4j,2.879424091266311e-4-5.580543163068847e-4j,
1.347426032831428e-4-6.10377744015470e-4j,-2.67505165730411e-5-6.216231086862600e-4j,
-1.856780251703952e-4-5.908483533763146e-4j,-3.312068342749908e-4-5.199615076681330e-4j,
-4.532765798343607e-4-4.1365494650826e-4j,-5.433168615836593e-4-2.791433419882309e-4j,
-5.948829003149001e-4-1.257156007436033e-4j,-6.041608575892515e-4+3.587505259804153e-5j,
-5.703009867739792e-4+1.941457318915867e-4j,-4.955472043673902e-4+3.376951559014998e-4j,
-3.851450548300452e-4+4.56035275951907e-4j,-2.470255908815834e-4+5.403826107033155e-4j,
-9.127937473606522e-5+5.843485388584705e-4j,7.05485759525075e-5+5.844723270299491e-4j,
2.262968116124233e-4+5.405497934825345e-4j,3.640997397917407e-4+4.557238405911958e-4j,
4.733066823566622e-4+3.363198757864585e-4j,5.453362036949303e-4+1.914282913715356e-4j,
5.743956654646151e-4+3.225631823523732e-5j,5.580031355072134e-4-1.287088533221965e-4j,
4.972614875477206e-4-2.786664195516705e-4j,3.968521173988254e-4-4.0552492938097e-4j,
2.647370522838670e-4-4.989006323834380e-4j,1.115818167697403e-4-5.510078371917036e-4j,
-5.006459707872602e-5-5.573626562908860e-4j,-2.067739465542659e-4-5.172332205166503e-4j,
-3.453497363868484e-4-4.337875959334917e-4j,-4.539544431868707e-4-3.139141033158203e-4j,
-5.2315635477840e-4-1.677158425311743e-4j,-5.468014848035733e-4-7.709818194219615e-6j,
-5.226266112277272e-4+1.52211299323940e-4j,-4.525482382470737e-4+2.979726197749442e-4j,
-3.4258806518930e-4+4.165653592683676e-4j,-2.024264938020319e-4+4.972395927749591e-4j,
-4.460931637742619e-5+5.325303965426302e-4j,1.165339496797063e-4+5.190160341364141e-4j,
2.661717401781172e-4+4.577266130375524e-4j,3.903404510378116e-4+3.541503257196165e-4j,
4.772769766960434e-4+2.178198660540209e-4j,5.185851175165243e-4+6.150092335280298e-5j,
5.101166478108958e-4-9.995576670431066e-5j,4.524695460749768e-4-2.51001373774832e-4j,
3.510385597652199e-4-3.768889713573761e-4j,2.155944029688920e-4-4.651429419690757e-4j,
5.941389934759464e-5-5.068498486156918e-4j,-1.019700705248536e-4-4.976332978451957e-4j,
-2.522876380895422e-4-4.382005127341867e-4j,-3.761754570596175e-4-3.343866722155147e-4j,
-4.607797413055693e-4-1.966714596437140e-4j,-4.971497072118556e-4-3.919628379502609e-5j,
-4.812658025209374e-4+1.216350837636142e-4j,-4.145781152127674e-4+2.688410015721923e-4j,
-3.03976734000290e-4+3.866626790842085e-4j,-1.611735695377129e-4+4.622909362268762e-4j,
-1.538649819723748e-6+4.873271823579462e-4j,1.575035136012647e-4+4.588063873335885e-4j,
2.983573489438624e-4+3.796499170912399e-4j,4.052195635976216e-4+2.584735961590502e-4j,
4.659032032343692e-4+1.08745866353902e-4j,4.733079959364677e-4-5.263476790324431e-5j,
4.263525311287859e-4-2.072030260687987e-4j,3.302372702309208e-4-3.370322205339335e-4j,
1.959795889316087e-4-4.268443460907305e-4j,3.924566348978066e-5-4.658748192898190e-4j,
-1.21410287460116e-4-4.492584614572336e-4j,-2.667114333742671e-4-3.787493855977060e-4j,
-3.789813695443981e-4-2.626593040809234e-4j,-4.443456152524833e-4-1.149892951644725e-4j,
-4.54533280694064e-4+4.617079826448446e-5j,-4.080366106472578e-4+2.008053653238857e-4j,
-3.104551267498603e-4+3.294484614428432e-4j,-1.739465396660964e-4+4.156689766877573e-4j,
-1.581792622457868e-5+4.482461052155734e-4j,1.435956347684785e-4+4.227396978396314e-4j,
2.835165955215760e-4+3.422245205204140e-4j,3.854520130442325e-4+2.170565354082609e-4j,
4.357041097200851e-4+6.366213779914078e-5j,4.273172187131196e-4-9.752722492778353e-5j,
3.611730960671033e-4-2.447499036492732e-4j,2.46048991273376e-4-3.578568847929760e-4j,
9.758732985278363e-5-4.211265081920861e-4j,-6.372434139145602e-5-4.255526784069344e-4j,
-2.153196074687619e-4-3.702622445961665e-4j,-3.357032707798243e-4-2.628238201715713e-4j,
-4.075491862996143e-4-1.183576841889611e-4j,-4.202951008744253e-4+4.247413464544625e-5j,
-3.718344502481693e-4+1.96350394435097e-4j,-2.690181670071964e-4+3.206569862562713e-4j,
-1.268424420068841e-4+3.968562770037637e-4j,3.361013428333448e-5+4.133536694261438e-4j,
1.882158236233678e-4+3.674061890255738e-4j,3.134166994948107e-4+2.657415446072919e-4j,
3.898561053758155e-4+1.23738666107864e-4j,4.054777860024337e-4-3.67623496374374e-5j,
3.575795584045777e-4-1.907336353894502e-4j,2.534526031417065e-4-3.138422437127146e-4j,
1.094454847118279e-4-3.863462310010834e-4j,-5.146127163260256e-5-3.963757256679095e-4j,
-2.032366407189359e-4-3.420390039166180e-4j,-3.209957386896791e-4-2.319586974285579e-4j,
-3.851409792321502e-4-8.408417643820040e-5j,-3.847522635735770e-4+7.709246903571619e-5j,
-3.196224777232571e-4+2.245126801887380e-4j,-2.00535287679333e-4+3.330915145523921e-4j,
-4.766472398862056e-5+3.840640164127668e-4j,1.127033749755236e-4+3.683755027355509e-4j,
2.526232699559303e-4+2.884824547581306e-4j,3.473763145099744e-4+1.581800221554004e-4j,
3.799394990745017e-4+4.053183985014817e-7j,3.442141093745801e-4-1.566718491938901e-4j,
2.463769680475822e-4-2.846316968437796e-4j,1.040290930588613e-4-3.59991942819332e-4j,
-5.679178777683811e-5-3.686493148095346e-4j,-2.062656620254754e-4-3.087155656589067e-4j,
-3.163040903792846e-4-1.911477517656558e-4j,-3.659114033500978e-4-3.796198345805916e-5j,
-3.453591253504001e-4+1.217266276691314e-4j,-2.583171066242031e-4+2.57161423278917e-4j,
-1.214410660495314e-4+3.41895471920694e-4j,3.860709941273064e-5+3.590847375180169e-4j,
1.902198096027519e-4+3.050438957667226e-4j,3.030558713311814e-4+1.90279993030636e-4j,
3.541943058716835e-4+3.769081423335872e-5j,3.329707542251244e-4-1.218209010540141e-4j,
2.434455164122316e-4-2.555200039218832e-4j,1.038924819244318e-4-3.355882420682699e-4j,
-5.6706442603889e-5-3.45057835378229e-4j,-2.045423870678977e-4-2.816393981826071e-4j,
-3.080772679740684e-4-1.585397192107692e-4j,-3.448780632266509e-4-1.969279800587774e-6j,
-3.066900120798498e-4+1.542543821300347e-4j,-2.015626923261192e-4+2.75942200398497e-4j,
-5.243691630015375e-5+3.360808702993456e-4j,1.076371232094033e-4+3.210178041078997e-4j,
2.427103516103307e-4+2.338328670015444e-4j,3.220327362050050e-4+9.4014040571507e-5j,
3.272154744387508e-4-6.664023679206092e-5j,2.567594459583518e-4-2.110974139279664e-4j,
1.267830571803493e-4-3.056135183367318e-4j,-3.237812699255234e-5-3.277507640618277e-4j,
-1.830597309411693e-4-2.719606618322052e-4j,-2.891331710058823e-4-1.512916774525004e-4j,
-3.247788062326284e-4+5.351292698521820e-6j,-2.810181368273974e-4+1.599075720237825e-4j,
-1.683011732046141e-4+2.74329986604377e-4j,-1.434315406196016e-5+3.200404765042243e-4j,
1.424402425109940e-4+2.853077986663600e-4j,2.624148107412241e-4+1.785917228963462e-4j,
3.148203535529377e-4+2.683317879501843e-5j,2.858934552936443e-4-1.310749046371145e-4j,
1.828241725469217e-4-2.541323516791329e-4j,3.233647446629712e-5-3.099400671898195e-4j,
-1.259507028069667e-4-2.834673353212661e-4j,-2.498183562558229e-4-1.814527323222882e-4j,
-3.057677669896703e-4-3.107212284592630e-5j,-2.78323946873468e-4+1.269972946025506e-4j,
-1.746823453479342e-4+2.494387580213234e-4j,-2.322000578415871e-5+3.022307282365137e-4j,
1.339622235872153e-4+2.703580597856438e-4j,2.526035041662645e-4+1.624664335458711e-4j,
2.98824947170438e-4+8.927777476678762e-6j,2.590834321559993e-4-1.463953838212675e-4j,
1.445442418566763e-4-2.585538660554399e-4j,-1.163455030625720e-5-2.946227100449894e-4j,
-1.635921514592224e-4-2.436753297811723e-4j,-2.661282527332705e-4-1.205209017950607e-4j,
-2.882865591352614e-4+3.817231444165629e-5j,-2.230462447279314e-4+1.845008341005673e-4j,
-8.999635837413647e-5+2.737186184636931e-4j,7.011776592566433e-5+2.781057783237309e-4j,
2.076061895476338e-4+1.959696038516331e-4j,2.792380341516813e-4+5.274992265215108e-5j,
2.620790033569215e-4-1.064420636268975e-4j,1.612692258728442e-4-2.308099606213554e-4j,
8.9835044506419e-6-2.801298287666654e-4j,-1.454442010081066e-4-2.380724868655384e-4j,
-2.513421050494409e-4-1.180905879584669e-4j,-2.734587133718942e-4+4.038371033940671e-5j,
-2.040852885668611e-4+1.845493786942194e-4j,-6.62604770901393e-5+2.657518182882491e-4j,
9.33954196738555e-5+2.561315154191218e-4j,2.201712680746026e-4+1.586460398543048e-4j,
2.700424799244972e-4+6.72069376756616e-6j,2.252942690595362e-4-1.467683849228666e-4j,
1.01345425371829e-4-2.477177314392255e-4j,-5.801388269187308e-5-2.600229824332007e-4j,
-1.957248506645126e-4-1.789356594751317e-4j,-2.6184089956753e-4-3.346840185087204e-5j,
-2.319392978584925e-4+1.234725834186243e-4j,-1.166849633091471e-4+2.340776170338971e-4j,
4.137285403641245e-5+2.57037366613009e-4j,1.830799791228935e-4+1.834110490455697e-4j,
2.547226349512444e-4+4.071793428803227e-5j,2.286740454432194e-4-1.167865027473354e-4j,
1.146145258796209e-4-2.28449898840825e-4j,-4.342385366828255e-5-2.506804879724915e-4j,
-1.835948655394792e-4-1.744283737119241e-4j,-2.503445534439344e-4-2.951918300134342e-5j,
-2.16745336929325e-4+1.264202641859747e-4j,-9.59718983873114e-5+2.305910175606955e-4j,
6.318900902649401e-5+2.404526414401778e-4j,1.955883910971928e-4+1.516187976975407e-4j,
2.463347129566265e-4+4.98363083700127e-7j,1.939448782024113e-4-1.500318031630862e-4j,
6.011953034102650e-5-2.365544947528584e-4j,-9.855235596255687e-5-2.220655599841592e-4j,
-2.141173582336205e-4-1.12417733546398e-4j,-2.364236824666603e-4+4.528922154777655e-5j,
-1.554037879652296e-4+1.823873372300827e-4j,-6.371815472342344e-6+2.38428113498217e-4j,
1.446970582673215e-4+1.882265908126787e-4j,2.300927837976816e-4+5.391208609740786e-5j,
2.109656742046878e-4-1.040679957778051e-4j,9.567719915155393e-5-2.137164053613256e-4j,
-6.303892787470899e-5-2.243919502783693e-4j,-1.916254253522687e-4-1.307929404973189e-4j,
-2.297318171499872e-4+2.358829399072818e-5j,-1.590333749204955e-4+1.659881108604445e-4j,
-1.287005903850589e-5+2.284580322198680e-4j,1.386969945052153e-4+1.806691694156645e-4j,
2.221200916001088e-4+4.543978234817145e-5j,1.963171190809097e-4-1.113102454543064e-4j,
7.366393683759209e-5-2.122183041106818e-4j,-8.503929895266407e-5-2.068047229267353e-4j,
-2.001196562988229e-4-9.743274905777536e-5j,-2.130573739816843e-4+6.076944531207574e-5j,
-1.168898136306916e-4+1.870098035165597e-4j,3.910117021996241e-5+2.160107700416987e-4j,
1.73873696105175e-4+1.323451827186747e-4j,2.165476361737937e-4-2.040207628841704e-5j,
1.442001773798347e-4-1.614969580941323e-4j,-4.861595019565698e-6-2.154556639257312e-4j,
-1.504806837877038e-4-1.528859361476374e-4j,-2.134024785643970e-4-7.457001132323617e-6j,
-1.588157301613272e-4+1.412633829219900e-4j,-1.657080634477355e-5+2.109231680200112e-4j,
1.341450673000457e-4+1.623498542912906e-4j,2.084161842275036e-4+2.253970388844839e-5j,
1.637713241562252e-4-1.293097162114612e-4j,2.543793913055678e-5-2.061440440843112e-4j,
-1.268434643656532e-4-1.632705260892236e-4j,-2.042360566005629e-4-2.533513966772483e-5j,
-1.609372446447345e-4+1.267467811328814e-4j,-2.228677904156778e-5+2.026911861759366e-4j,
1.289396679254597e-4+1.567590128610865e-4j,2.013800796443266e-4+1.633401792535554e-5j,
1.506253971112056e-4-1.332595463908726e-4j,7.512919613347717e-6-2.000462228935974e-4j,
-1.394521243592846e-4-1.42338557558223e-4j,-1.983071570589694e-4+4.126894723195376e-6j,
-1.316311354018231e-4+1.471562027506297e-4j,1.849413943088111e-5+1.95657680952157e-4j,
1.558842182214516e-4+1.181931147869688e-4j,1.914779819011663e-4-3.541860848380577e-5j,
1.017096679194958e-4-1.650013800749812e-4j,-5.460578885552937e-5-1.850506144365268e-4j,
-1.73707594074876e-4-8.191195363271562e-5j,-1.755910596254202e-4+7.558561793155775e-5j,
-5.864219429325111e-5+1.810279391976218e-4j,9.765956045301580e-5+1.622970293041756e-4j,
1.858191359987246e-4+3.19328600402272e-5j,1.444214021910926e-4-1.198527533192005e-4j,
2.097197146975787e-6-1.868009223982083e-4j,-1.408810951175026e-4-1.213722591178053e-4j,
-1.826220416524544e-4+3.017553261524621e-5j,-9.284041768023618e-5+1.591464940834059e-4j,
6.373189047829716e-5+1.71969934172083e-4j,1.727763591765316e-4+5.894966718885815e-5j,
1.537302985789662e-4-9.689108876264178e-5j,2.041727260781744e-5-1.797247445334785e-4j,
-1.274309783967876e-4-1.271964490265557e-4j,-1.779508367582253e-4+2.1297610263387e-5j,
-9.231799612795244e-5+1.526522320131141e-4j,6.389127584886883e-5+1.656838985537953e-4j,
1.695509052341963e-4+4.996351949111324e-5j,1.417705602235377e-4-1.042028796710143e-4j,
2.153401377770165e-6-1.751239425554613e-4j,-1.383427517836975e-4-1.060793249101079e-4j,
-1.668164857442644e-4+4.78005364728622e-5j,-5.990873607446651e-5+1.620099540280909e-4j,
9.532750891057926e-5+1.430913508099896e-4j,1.710301557525052e-4+6.313007252140334e-6j,
1.040592231991683e-4-1.348852686001648e-4j,-4.97709038516377e-5-1.62107590984992e-4j,
-1.605684444468771e-4-5.205659580487572e-5j,-1.337251371100667e-4+1.017262241140896e-4j,
7.992901366786135e-6+1.670558965534755e-4j,1.419064898032332e-4+8.704830200836353e-5j,
1.50831583541067e-4-6.863197221532126e-5j,2.660587022568279e-5-1.627901456296954e-4j,
-1.205283896728437e-4-1.114975942134136e-4j,-1.585807197676849e-4+3.954181913909473e-5j,
-5.286937879406563e-5+1.538541300448891e-4j,1.004392426048666e-4+1.270249469590437e-4j,
1.603387629534317e-4-1.655906908765987e-5j,7.102793536982753e-5-1.438725328041653e-4j,
-8.421100419737763e-5-1.357074794564795e-4j,-1.589769068993304e-4+5.141933659854115e-7j,
-8.193034433203425e-5+1.353861012778104e-4j,7.328035297689879e-5+1.394351197473515e-4j,
1.565650687038495e-4+8.47561672060171e-6j,8.647882500245161e-5-1.299240293769231e-4j,
-6.829099222057756e-5-1.395408013960067e-4j,-1.542787556337046e-4-1.057668396422863e-5j,
-8.528053643092873e-5+1.281466710248412e-4j,6.935491836967952e-5+1.366264507027137e-4j,
1.523994457014423e-4+5.987385506244865e-6j,7.849053670664286e-5-1.299507630891800e-4j,
-7.617023313705161e-5-1.305164556902594e-4j,-1.50335037012495e-4+5.123653889391280e-6j,
-6.582338532447407e-5+1.344860810353591e-4j,8.797467401486469e-5+1.203076693267618e-4j,
1.466419904918793e-4-2.24888389176790e-5j,4.673374251979811e-5-1.400842321003459e-4j,
-1.033458614711742e-4-1.045329368185168e-4j,-1.390889999727543e-4+4.542527816774344e-5j,
-2.079000554093430e-5+1.441544488666685e-4j,1.198990455445837e-4+8.15001538966558e-5j,
1.248603314844005e-4-7.23537637718424e-5j,-1.173323992508417e-5-1.431655826368912e-4j,
-1.339977159698223e-4-4.989290990851011e-5j,-1.010441295971425e-4+1.002354698119072e-4j,
4.906602074053036e-5+1.329048087989468e-4j,1.406877290458576e-4+9.691677588677221e-6j,
6.555615343836977e-5-1.241243328281419e-4j,-8.710551695043038e-5-1.092531766224227e-4j,
-1.341695881816294e-4+3.664665400508516e-5j,-1.855577633614463e-5+1.371955212838964e-4j,
1.188948245193513e-4+6.967818925166324e-5j,1.091635542746692e-4-8.306662077169329e-5j,
-3.585223218849762e-5-1.317523345860223e-4j,-1.350390052336986e-4-1.540867295974361e-5j,
-6.336142601042995e-5+1.195356012405466e-4j,8.830336986283088e-5+1.016758136521411e-4j,
1.258100750952192e-4-4.626930609277018e-5j,6.280971595273691e-7-1.33430596301983e-4j,
-1.244800655137421e-4-4.631889511730217e-5j,-8.538348441128045e-5+1.009380752841031e-4j,
6.635335671052086e-5+1.136470849561658e-4j,1.285388255208165e-4-2.524408237133866e-5j,
1.753680820778473e-5-1.292071119805053e-4j,-1.164161014239408e-4-5.738708924224296e-5j,
-9.042884429855579e-5+9.22714039075941e-5j,5.983550476778805e-5+1.138328607653326e-4j,
1.259815291122166e-4-2.269554727934867e-5j,1.546001002927528e-5-1.264794062998989e-4j,
-1.160365076999713e-4-5.121112840030432e-5j,-8.169226893722036e-5+9.625897393946113e-5j,
6.938525388635492e-5+1.047798852473355e-4j,1.191800044150538e-4-3.80043119791050e-5j,
-4.786979471689993e-6-1.244253972947671e-4j,-1.207992607772011e-4-2.77460744512793e-5j,
-5.740477034052454e-5+1.092062983116093e-4j,9.101296154721410e-5+8.245165311963187e-5j,
1.016657960190526e-4-6.787704447636351e-5j,-4.158356045422378e-5-1.143542649394405e-4j,
-1.203204561890703e-4+1.389963762203463e-5j,-1.354329550708225e-5+1.198005005210964e-4j,
1.133793023351231e-4+3.933597325973921e-5j,6.234594273081055e-5-1.0189699124996e-4j,
-8.635497454017782e-5-8.174272534760227e-5j,-9.699772657230520e-5+6.782874775046431e-5j,
4.739245198797689e-5+1.078642085467798e-4j,1.143429992444368e-4-2.60580966005569e-5j,
-4.730558150521067e-6-1.166394042536546e-4j,-1.151161796619923e-4-1.582198576468688e-5j,
-3.498359193303260e-5+1.102465749370781e-4j,1.025705002946486e-4+5.229414451895260e-5j,
6.744344247778985e-5-9.265592242093099e-5j,-8.106672353111166e-5-8.025829190494773e-5j,
-9.06849805897817e-5+6.833752046856605e-5j,5.495535663931523e-5+9.876923859554974e-5j,
1.046354347037382e-4-4.134775390634879e-5j,-2.787633366321942e-5-1.084663734161061e-4j,
-1.104846786585289e-4+1.483506653015058e-5j,2.452164135585484e-6+1.109364046929142e-4j,
1.100772180803534e-4+9.10534129371389e-6j,1.972519754578076e-5-1.081612543836202e-4j,
-1.054325706206137e-4-2.934246229817025e-5j,-3.793157722186192e-5+1.02118985602146e-4j,
9.842801859657745e-5+4.549846556744493e-5j,5.207300482310837e-5-9.454459414266423e-5j,
-9.063016875816906e-5-5.77021126720773e-5j,-6.244358884464605e-5+8.682294562589317e-5j,
8.323886882652921e-5+6.636077879115617e-5j,6.951806702459012e-5-7.997312324858857e-5j,
-7.710190512006122e-5-7.197716707920948e-5j,-7.379414926060926e-5+7.46842676069018e-5j,
7.27638836820064e-5+7.501713441234695e-5j,7.568457946012702e-5-7.137060304804267e-5j,
-7.052171069740764e-5-7.582408630545925e-5j,-7.545167773963589e-5+7.022282176830715e-5j,
7.04683712823849e-5+7.457150067673066e-5j,7.317593661177943e-5-7.124167907727898e-5j,
-7.251459098127904e-5-7.124612039444649e-5j,-6.875288981255088e-5+7.424671837624451e-5j,
7.638432115021348e-5+6.565820870219447e-5j,6.191712377007285e-5-7.885890497567137e-5j,
-8.158563397808269e-5-5.748032818669804e-5j,-5.229741109066111e-5+8.44616949247894e-5j,
8.736478925394964e-5+4.63208688150072e-5j,3.951093789167063e-5-9.015197394989186e-5j,
-9.265911975658672e-5-3.184127835881884e-5j,-2.330548511532253e-5+9.470130241634144e-5j,
9.607448474447876e-5+1.392433178127278e-5j,3.753553199114811e-6-9.655887766713021e-5j,
-9.592437799554453e-5+7.108151721977063e-6j,1.851136435560357e-5+9.393845874001453e-5j,
9.037682147433480e-5-3.02490746800898e-5j,-4.20515100342023e-5-8.503699595912108e-5j,
-7.775487658848688e-5+5.358365533837453e-5j,6.44466026358027e-5+6.84239073101938e-5j,
5.701626077899055e-5-7.418395661681381e-5j,-8.229451595814637e-5-4.360490675162978e-5j,
-2.838494526425461e-5+8.825230448891119e-5j,9.153469577756057e-5+1.169202558454551e-5j,
-5.984862507884224e-6-9.165881763703961e-5j,-8.822560913003467e-5+2.399937344723202e-5j,
4.155594654968010e-5+8.096982478216084e-5j,6.981296790312623e-5-5.773338705855777e-5j,
-7.152661560468360e-5-5.49146663510887e-5j,-3.671652165346822e-5+8.19081705899102e-5j,
8.790922440370325e-5+1.597117855310876e-5j,-6.251441524471038e-6-8.871734462821063e-5j,
-8.3785075172266e-5+2.858878732737427e-5j,4.944806606322651e-5+7.293985427998819e-5j,
5.648222749374318e-5-6.711056261630217e-5j,-7.98777189428501e-5-3.525634289199770e-5j,
-1.067508906573546e-5+8.62527694176177e-5j,8.514435678196157e-5-1.531719237026974e-5j,
-4.0357891797398e-5-7.607059037830540e-5j,-5.933465582419041e-5+6.186145301846220e-5j,
7.72920378927063e-5+3.613796852623655e-5j,8.595881656249252e-6-8.449445340561718e-5j,
-8.204818571819433e-5+2.037400632236476e-5j,4.730842362731015e-5+6.959402664337577e-5j,
4.80715808396315e-5-6.859701968736324e-5j,-8.09930935427983e-5-1.98029214827785e-5j,
1.163331092475606e-5+8.217604768784731e-5j,7.127655553018381e-5-4.176930344687657e-5j,
-6.58501004141383e-5-4.925598267300260e-5j,-1.902933736553235e-5+7.961288938958166e-5j,
8.013156636612983e-5-1.475702297028567e-5j,-4.633186393514852e-5-6.656778623574644e-5j,
-4.06453200771423e-5+6.975315755574542e-5j,8.008213813414835e-5+6.67708284220443e-6j,
-2.896630424780338e-5-7.456152938926016e-5j,-5.352187395566671e-5+5.89504664411995e-5j,
7.64961519013584e-5+2.073417836839233e-5j,-1.700339170086035e-5-7.70376851986480e-5j,
-5.962304152917188e-5+5.110670297941958e-5j,7.312325559671055e-5+2.762603383999004e-5j,
-1.157231134730617e-5-7.694293549228103e-5j,-6.07359481071752e-5+4.805952958204116e-5j,
7.183217388301683e-5+2.799397291373868e-5j,-1.282277024837123e-5-7.566079196211270e-5j,
-5.757273287864656e-5+5.02027392421242e-5j,7.275882426617926e-5+2.208030312072277e-5j,
-2.049659755751715e-5-7.285752467660114e-5j,-4.955163482360367e-5+5.6748523608679e-5j,
7.436704381358594e-5+9.654776874409806e-6j,-3.377749558059254e-5-6.656683264271591e-5j,
-3.513483382847431e-5+6.547113861534538e-5j,7.337271235295294e-5-9.311553540325407e-6j,
-5.045784577527067e-5-5.361029874615265e-5j,-1.287705648803611e-5+7.214221262529992e-5j,
6.494900270538262e-5-3.320632545059119e-5j,-6.573528875501635e-5-3.083946632580615e-5j,
1.655873863511312e-5+7.03535717369356e-5j,4.407954163382191e-5-5.68583409019046e-5j,
-7.157804765173794e-5+2.22710769764923e-6j,4.764943890984173e-5+5.301739144906878e-5j,
8.998022562685711e-6-7.038264161497795e-5j,-5.849507511340059e-5+3.958285761281455e-5j,
6.823487403499165e-5+1.693216460611700e-5j,-3.355477188282173e-5-6.141183480224936e-5j,
-2.169662851075465e-5+6.619402311493763e-5j,6.249622411138580e-5-3.003469709087296e-5j,
-6.489954178252875e-5-2.349016558140492e-5j,2.920631459691963e-5+6.218530258336306e-5j,
2.244802902602197e-5-6.459713720905725e-5j,-6.057490177663984e-5+3.105585958481795e-5j,
6.515987163777036e-5+1.858631595670341e-5j,-3.53899312130803e-5-5.741670415039204e-5j,
-1.182798078483499e-5+6.608688092999509e-5j,5.215781655420097e-5-4.17800679461303e-5j,
-6.64873272155602e-5-2.112293723503338e-6j,4.944574973441499e-5+4.404015201131479e-5j,
-1.040805660851286e-5-6.508343017923983e-5j,-3.229399586256361e-5+5.710876453727977e-5j,
6.029382238382055e-5-2.50891737212643e-5j,-6.288596034194236e-5-1.646294810282503e-5j,
4.048002045270015e-5+5.048030121876846e-5j,-3.129376631796476e-6-6.433254197618949e-5j,
-3.443873180330676e-5+5.407745758426123e-5j,5.87866812962548e-5-2.483549613749331e-5j,
-6.23499977223272e-5-1.215639052219882e-5j,4.526016550451105e-5+4.415636703094151e-5j,
-1.429248201060814e-5-6.12968141870293e-5j,-2.016559785593967e-5+5.931751016855613e-5j,
4.776809044408891e-5-4.009246076052335e-5j,-6.12292025933968e-5+1.022197311729845e-5j,
5.793039674275274e-5+2.149904135641621e-5j,-3.994086450799965e-5-4.677421506570786e-5j,
1.277765910481966e-5+5.987581359737033e-5j,1.649236917429101e-5-5.866842229356509e-5j,
-4.117400359440019e-5+4.454884425463675e-5j,5.640381104580464e-5-2.1557761283280e-5j,
-5.990244659998753e-5-4.935854842262261e-6j,5.200831234295979e-5+2.957443318767794e-5j,
-3.515413490174234e-5-4.807128656026728e-5j,1.303238524151404e-5+5.782966658800384e-5j,
1.030195968900448e-5-5.810106145846638e-5j,-3.119718322807696e-5+4.976590951088245e-5j,
4.692572101340069e-5-3.48744350258463e-5j,-5.592723951816040e-5+1.609420595455493e-5j,
5.780362514290560e-5+3.812934298929884e-6j,-5.313296747671392e-5-2.240286862698007e-5j,
4.31823311245572e-5+3.781233753992255e-5j,-2.959286700632988e-5-4.887243276324784e-5j,
1.409324045560431e-5+5.509697242079306e-5j,1.724353418691498e-6-5.65830421098235e-5j,
-1.655173799534334e-5+5.386320326645707e-5j,2.943795116136136e-5-4.774381919268699e-5j,
-3.980042831423558e-5+3.915506489479837e-5j,4.739137137635116e-5-2.902833177086461e-5j,
-5.223710079635176e-5+1.820787974208392e-5j,5.456596695325226e-5-7.396784165917796e-6j,
-5.47367294999063e-5-2.86721580539878e-6j,5.317528370801602e-5+1.221263171596862e-5j,
-5.032394850960730e-5-2.041913544860966e-5j,4.660462057191495e-5+2.73931131439135e-5j,
-4.239506531048474e-5-3.313929040146602e-5j,3.801640381386958e-5+3.773240147870322e-5j,
-3.372931143825682e-5-4.12914694025827e-5j,2.973638217124565e-5+4.395806995372805e-5j,
-2.618835320495331e-5-4.587904040779403e-5j,2.319227762867344e-5+4.719346901543664e-5j,
-2.082017023322715e-5-4.802343047061309e-5j,1.911706120815631e-5+4.846776574474040e-5j,
-1.810773687569929e-5-4.859818860646236e-5j,1.780171251766487e-5+4.845708876702744e-5j,
-1.819617445010792e-5-4.805655555714981e-5j,1.92767629396651e-5+4.737833926148795e-5j,
-2.101616747785838e-5-4.637468099079861e-5j,2.337059833247479e-5+4.497016260659523e-5j,
-2.627431176685122e-5-4.306494300586232e-5j,2.963252889007964e-5+4.0539939705692e-5j,
-3.331332436543564e-5-3.726466074328309e-5j,3.713938786701961e-5+3.310845510227527e-5j,
-4.088098030217174e-5-2.795587969941648e-5j,4.425189647684000e-5+2.17266135705182e-5j,
-4.691074856158935e-5-1.439981398696281e-5j,4.847029517982738e-5+6.041939499533698e-6j,
-4.851769699555871e-5+3.164174727232563e-6j,4.6648261607173e-5-1.289278590972447e-5j,
-4.251418739818407e-5+2.265684271085486e-5j,3.588776845061183e-5-3.180500603284838e-5j,
-2.673530166393117e-5+3.954252291057958e-5j,1.529356250538628e-5-4.498427752145118e-5j,
-2.135556264084995e-6+4.724616778502780e-5j,-1.17928195250715e-5-4.557590589269328e-5j,
2.518706723158353e-5+3.951590358025009e-5j,-3.647107628090718e-5-2.90792613494314e-5j,
4.397243756904319e-5+1.49063870287181e-5j,-4.618758906961873e-5+1.642648193898931e-6j,
4.211542397153553e-5-1.851162713481274e-5j,-3.160822873304348e-5+3.313437256285873e-5j,
1.565779479443363e-5-4.280836329831555e-5j,3.487785437909999e-6+4.523814987852125e-5j,
-2.248143341764731e-5-3.917074592418330e-5j,3.737804602577769e-5+2.497848223444147e-5j,
-4.446982088695993e-5-4.993038637500807e-6j,4.132933748940137e-5-1.66133676971256e-5j,
-2.780288452672258e-5+3.453851627309119e-5j,6.598836176486467e-6-4.363855325650117e-5j,
1.68877323719737e-5+4.055609090993487e-5j,-3.572853484825780e-5-2.521412121313803e-5j,
4.350067403469246e-5+1.556313393740514e-6j,-3.670513295619653e-5+2.302337210778599e-5j,
1.668916589299303e-5-3.976915213842847e-5j,9.923674188704142e-6+4.17679756918425e-5j,
-3.297129647204191e-5-2.718497295997376e-5j,4.252447606645112e-5+1.019483613137051e-6j,
-3.347099213630561e-5+2.593179825518285e-5j,8.820517503804639e-6-4.121300033642382e-5j,
2.039633257588068e-5+3.666061895035272e-5j,-3.95507354175077e-5-1.340144519949012e-5j,
3.782481659840376e-5-1.723771810671358e-5j,-1.499649209147198e-5+3.856298797000054e-5j,
-1.677533609731537e-5-3.761483186801890e-5j,3.861216691059086e-5+1.377755027064193e-5j,
-3.61194998171985e-5+1.89915183179253e-5j,9.717939370952128e-6-3.944077777074526e-5j,
2.355851509515884e-5+3.286133255969078e-5j,-4.015796230029122e-5-2.684279187078659e-6j,
2.692118511451528e-5-2.966902851175634e-5j,7.235801332027508e-6+3.921626239672691e-5j,
-3.573897543297847e-5-1.727435854978969e-5j,3.454730636726252e-5-1.917553535383448e-5j,
-3.464275303614553e-6+3.917765613037796e-5j,-3.082972701553627e-5-2.412927210515356e-5j,
3.660769303114328e-5-1.336056991220168e-5j,-7.235453099962817e-6+3.810957226042898e-5j,
-2.938458029551463e-5-2.50485305432973e-5j,3.588891467648563e-5-1.375449502104608e-5j,
-4.331000953660536e-6+3.801165890140019e-5j,-3.19924365531165e-5-2.06566126910751e-5j,
3.217190289198836e-5-2.004673142526641e-5j,5.143873965571455e-6+3.737989576255893e-5j,
-3.62582756326354e-5-9.797335450715783e-6j,2.24657069138621e-5-2.988304770884754e-5j,
1.99384191686407e-5+3.142191859852569e-5j,-3.611064017480102e-5+8.257718158766961e-6j,
3.519795150024506e-6-3.670404114413818e-5j,3.386629697537995e-5+1.414823097426912e-5j,
-2.284331922920647e-5+2.851172913038569e-5j,-2.160290373159259e-5-2.9254082730452e-5j,
3.337792294756625e-5-1.400943799442758e-5j,6.42886722597773e-6+3.545411721509484e-5j,
-3.58608317657682e-5-6.407286731831798e-7j,6.891457104238057e-6-3.503015814942660e-5j,
3.338683742243182e-5+1.217480855021225e-5j,-1.64617090190758e-5+3.131020721738427e-5j,
-2.911544644857663e-5-1.980212474692337e-5j];
_plots = 'Schemat blokowy\tOdpowiedzi czasowe';
_plotprops = [884736,zeros(1,4)
262144,zeros(1,4)];
_plot3d = [];
_plotsync = [];
_plotparam = {[],
[]};
_winsize = [1278,595];

@}
